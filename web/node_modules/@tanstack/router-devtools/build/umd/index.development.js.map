{"version":3,"file":"index.development.js","sources":["../../../../node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js","../../../../node_modules/.pnpm/tiny-warning@1.0.3/node_modules/tiny-warning/dist/tiny-warning.esm.js","../../../react-store/build/esm/index.js","../../../router/build/esm/index.js","../../src/useLocalStorage.ts","../../src/theme.tsx","../../src/useMediaQuery.ts","../../src/utils.ts","../../src/styledComponents.ts","../../src/Explorer.tsx","../../src/devtools.tsx"],"sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","/**\n * @tanstack/react-store/src/index.tsx\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nexport * from '@tanstack/store';\n\nfunction useStore(store, selector = d => d) {\n  const slice = useSyncExternalStoreWithSelector(store.subscribe, () => store.state, () => store.state, selector, shallow);\n  return slice;\n}\nfunction shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { shallow, useStore };\n//# sourceMappingURL=index.js.map\n","/**\n * @tanstack/router/src/index.ts\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport invariant from 'tiny-invariant';\nexport { default as invariant } from 'tiny-invariant';\nimport warning from 'tiny-warning';\nexport { default as warning } from 'tiny-warning';\nimport * as React from 'react';\nimport { useStore, Store } from '@tanstack/react-store';\nexport { useStore } from '@tanstack/react-store';\n\n// While the public API was clearly inspired by the \"history\" npm package,\n// This implementation attempts to be more lightweight by\n// making assumptions about the way TanStack Router works\n\nconst popStateEvent = 'popstate';\nconst beforeUnloadEvent = 'beforeunload';\nconst beforeUnloadListener = event => {\n  event.preventDefault();\n  // @ts-ignore\n  return event.returnValue = '';\n};\nconst stopBlocking = () => {\n  removeEventListener(beforeUnloadEvent, beforeUnloadListener, {\n    capture: true\n  });\n};\nfunction createHistory(opts) {\n  let location = opts.getLocation();\n  let unsub = () => {};\n  let listeners = new Set();\n  let blockers = [];\n  let queue = [];\n  const tryFlush = () => {\n    if (blockers.length) {\n      blockers[0]?.(tryFlush, () => {\n        blockers = [];\n        stopBlocking();\n      });\n      return;\n    }\n    while (queue.length) {\n      queue.shift()?.();\n    }\n    onUpdate();\n  };\n  const queueTask = task => {\n    queue.push(task);\n    tryFlush();\n  };\n  const onUpdate = () => {\n    location = opts.getLocation();\n    listeners.forEach(listener => listener());\n  };\n  return {\n    get location() {\n      return location;\n    },\n    listen: cb => {\n      if (listeners.size === 0) {\n        unsub = opts.listener(onUpdate);\n      }\n      listeners.add(cb);\n      return () => {\n        listeners.delete(cb);\n        if (listeners.size === 0) {\n          unsub();\n        }\n      };\n    },\n    push: (path, state) => {\n      queueTask(() => {\n        opts.pushState(path, state);\n      });\n    },\n    replace: (path, state) => {\n      queueTask(() => {\n        opts.replaceState(path, state);\n      });\n    },\n    go: index => {\n      queueTask(() => {\n        opts.go(index);\n      });\n    },\n    back: () => {\n      queueTask(() => {\n        opts.back();\n      });\n    },\n    forward: () => {\n      queueTask(() => {\n        opts.forward();\n      });\n    },\n    createHref: str => opts.createHref(str),\n    block: cb => {\n      blockers.push(cb);\n      if (blockers.length === 1) {\n        addEventListener(beforeUnloadEvent, beforeUnloadListener, {\n          capture: true\n        });\n      }\n      return () => {\n        blockers = blockers.filter(b => b !== cb);\n        if (!blockers.length) {\n          stopBlocking();\n        }\n      };\n    }\n  };\n}\nfunction createBrowserHistory(opts) {\n  const getHref = opts?.getHref ?? (() => `${window.location.pathname}${window.location.search}${window.location.hash}`);\n  const createHref = opts?.createHref ?? (path => path);\n  const getLocation = () => parseLocation(getHref(), history.state);\n  return createHistory({\n    getLocation,\n    listener: onUpdate => {\n      window.addEventListener(popStateEvent, onUpdate);\n      return () => {\n        window.removeEventListener(popStateEvent, onUpdate);\n      };\n    },\n    pushState: (path, state) => {\n      window.history.pushState({\n        ...state,\n        key: createRandomKey()\n      }, '', createHref(path));\n    },\n    replaceState: (path, state) => {\n      window.history.replaceState({\n        ...state,\n        key: createRandomKey()\n      }, '', createHref(path));\n    },\n    back: () => window.history.back(),\n    forward: () => window.history.forward(),\n    go: n => window.history.go(n),\n    createHref: path => createHref(path)\n  });\n}\nfunction createHashHistory() {\n  return createBrowserHistory({\n    getHref: () => window.location.hash.substring(1),\n    createHref: path => `#${path}`\n  });\n}\nfunction createMemoryHistory(opts = {\n  initialEntries: ['/']\n}) {\n  const entries = opts.initialEntries;\n  let index = opts.initialIndex ?? entries.length - 1;\n  let currentState = {};\n  const getLocation = () => parseLocation(entries[index], currentState);\n  return createHistory({\n    getLocation,\n    listener: () => {\n      return () => {};\n    },\n    pushState: (path, state) => {\n      currentState = {\n        ...state,\n        key: createRandomKey()\n      };\n      entries.push(path);\n      index++;\n    },\n    replaceState: (path, state) => {\n      currentState = {\n        ...state,\n        key: createRandomKey()\n      };\n      entries[index] = path;\n    },\n    back: () => {\n      index--;\n    },\n    forward: () => {\n      index = Math.min(index + 1, entries.length - 1);\n    },\n    go: n => window.history.go(n),\n    createHref: path => path\n  });\n}\nfunction parseLocation(href, state) {\n  let hashIndex = href.indexOf('#');\n  let searchIndex = href.indexOf('?');\n  return {\n    href,\n    pathname: href.substring(0, hashIndex > 0 ? searchIndex > 0 ? Math.min(hashIndex, searchIndex) : hashIndex : searchIndex > 0 ? searchIndex : href.length),\n    hash: hashIndex > -1 ? href.substring(hashIndex) : '',\n    search: searchIndex > -1 ? href.slice(searchIndex, hashIndex === -1 ? undefined : hashIndex) : '',\n    state\n  };\n}\n\n// Thanks co-pilot!\nfunction createRandomKey() {\n  return (Math.random() + 1).toString(36).substring(7);\n}\n\nfunction last(arr) {\n  return arr[arr.length - 1];\n}\nfunction isFunction(d) {\n  return typeof d === 'function';\n}\nfunction functionalUpdate(updater, previous) {\n  if (isFunction(updater)) {\n    return updater(previous);\n  }\n  return updater;\n}\nfunction pick(parent, keys) {\n  return keys.reduce((obj, key) => {\n    obj[key] = parent[key];\n    return obj;\n  }, {});\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between immutable JSON values for example.\n * Do not use this with signals\n */\nfunction replaceEqualDeep(prev, _next) {\n  if (prev === _next) {\n    return prev;\n  }\n  const next = _next;\n  const array = Array.isArray(prev) && Array.isArray(next);\n  if (array || isPlainObject(prev) && isPlainObject(next)) {\n    const prevSize = array ? prev.length : Object.keys(prev).length;\n    const nextItems = array ? next : Object.keys(next);\n    const nextSize = nextItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < nextSize; i++) {\n      const key = array ? i : nextItems[i];\n      copy[key] = replaceEqualDeep(prev[key], next[key]);\n      if (copy[key] === prev[key]) {\n        equalItems++;\n      }\n    }\n    return prevSize === nextSize && equalItems === prevSize ? prev : copy;\n  }\n  return next;\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n\n  // If has modified constructor\n  const ctor = o.constructor;\n  if (typeof ctor === 'undefined') {\n    return true;\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\nfunction partialDeepEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (isPlainObject(a) && isPlainObject(b)) {\n    return !Object.keys(b).some(key => !partialDeepEqual(a[key], b[key]));\n  }\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return a.length === b.length && a.every((item, index) => partialDeepEqual(item, b[index]));\n  }\n  return false;\n}\n\nfunction joinPaths(paths) {\n  return cleanPath(paths.filter(Boolean).join('/'));\n}\nfunction cleanPath(path) {\n  // remove double slashes\n  return path.replace(/\\/{2,}/g, '/');\n}\nfunction trimPathLeft(path) {\n  return path === '/' ? path : path.replace(/^\\/{1,}/, '');\n}\nfunction trimPathRight(path) {\n  return path === '/' ? path : path.replace(/\\/{1,}$/, '');\n}\nfunction trimPath(path) {\n  return trimPathRight(trimPathLeft(path));\n}\nfunction resolvePath(basepath, base, to) {\n  base = base.replace(new RegExp(`^${basepath}`), '/');\n  to = to.replace(new RegExp(`^${basepath}`), '/');\n  let baseSegments = parsePathname(base);\n  const toSegments = parsePathname(to);\n  toSegments.forEach((toSegment, index) => {\n    if (toSegment.value === '/') {\n      if (!index) {\n        // Leading slash\n        baseSegments = [toSegment];\n      } else if (index === toSegments.length - 1) {\n        // Trailing Slash\n        baseSegments.push(toSegment);\n      } else ;\n    } else if (toSegment.value === '..') {\n      // Extra trailing slash? pop it off\n      if (baseSegments.length > 1 && last(baseSegments)?.value === '/') {\n        baseSegments.pop();\n      }\n      baseSegments.pop();\n    } else if (toSegment.value === '.') {\n      return;\n    } else {\n      baseSegments.push(toSegment);\n    }\n  });\n  const joined = joinPaths([basepath, ...baseSegments.map(d => d.value)]);\n  return cleanPath(joined);\n}\nfunction parsePathname(pathname) {\n  if (!pathname) {\n    return [];\n  }\n  pathname = cleanPath(pathname);\n  const segments = [];\n  if (pathname.slice(0, 1) === '/') {\n    pathname = pathname.substring(1);\n    segments.push({\n      type: 'pathname',\n      value: '/'\n    });\n  }\n  if (!pathname) {\n    return segments;\n  }\n\n  // Remove empty segments and '.' segments\n  const split = pathname.split('/').filter(Boolean);\n  segments.push(...split.map(part => {\n    if (part === '$' || part === '*') {\n      return {\n        type: 'wildcard',\n        value: part\n      };\n    }\n    if (part.charAt(0) === '$') {\n      return {\n        type: 'param',\n        value: part\n      };\n    }\n    return {\n      type: 'pathname',\n      value: part\n    };\n  }));\n  if (pathname.slice(-1) === '/') {\n    pathname = pathname.substring(1);\n    segments.push({\n      type: 'pathname',\n      value: '/'\n    });\n  }\n  return segments;\n}\nfunction interpolatePath(path, params, leaveWildcards = false) {\n  const interpolatedPathSegments = parsePathname(path);\n  return joinPaths(interpolatedPathSegments.map(segment => {\n    if (segment.type === 'wildcard') {\n      const value = params[segment.value];\n      if (leaveWildcards) return `${segment.value}${value ?? ''}`;\n      return value;\n    }\n    if (segment.type === 'param') {\n      return params[segment.value.substring(1)] ?? '';\n    }\n    return segment.value;\n  }));\n}\nfunction matchPathname(basepath, currentPathname, matchLocation) {\n  const pathParams = matchByPath(basepath, currentPathname, matchLocation);\n  // const searchMatched = matchBySearch(location.search, matchLocation)\n\n  if (matchLocation.to && !pathParams) {\n    return;\n  }\n  return pathParams ?? {};\n}\nfunction matchByPath(basepath, from, matchLocation) {\n  // Remove the base path from the pathname\n  from = basepath != '/' ? from.substring(basepath.length) : from;\n  // Default to to $ (wildcard)\n  const to = `${matchLocation.to ?? '$'}`;\n  // Parse the from and to\n  const baseSegments = parsePathname(from);\n  const routeSegments = parsePathname(to);\n  if (!from.startsWith('/')) {\n    baseSegments.unshift({\n      type: 'pathname',\n      value: '/'\n    });\n  }\n  if (!to.startsWith('/')) {\n    routeSegments.unshift({\n      type: 'pathname',\n      value: '/'\n    });\n  }\n  const params = {};\n  let isMatch = (() => {\n    for (let i = 0; i < Math.max(baseSegments.length, routeSegments.length); i++) {\n      const baseSegment = baseSegments[i];\n      const routeSegment = routeSegments[i];\n      const isLastBaseSegment = i >= baseSegments.length - 1;\n      const isLastRouteSegment = i >= routeSegments.length - 1;\n      if (routeSegment) {\n        if (routeSegment.type === 'wildcard') {\n          if (baseSegment?.value) {\n            params['*'] = joinPaths(baseSegments.slice(i).map(d => d.value));\n            return true;\n          }\n          return false;\n        }\n        if (routeSegment.type === 'pathname') {\n          if (routeSegment.value === '/' && !baseSegment?.value) {\n            return true;\n          }\n          if (baseSegment) {\n            if (matchLocation.caseSensitive) {\n              if (routeSegment.value !== baseSegment.value) {\n                return false;\n              }\n            } else if (routeSegment.value.toLowerCase() !== baseSegment.value.toLowerCase()) {\n              return false;\n            }\n          }\n        }\n        if (!baseSegment) {\n          return false;\n        }\n        if (routeSegment.type === 'param') {\n          if (baseSegment?.value === '/') {\n            return false;\n          }\n          if (baseSegment.value.charAt(0) !== '$') {\n            params[routeSegment.value.substring(1)] = baseSegment.value;\n          }\n        }\n      }\n      if (!isLastBaseSegment && isLastRouteSegment) {\n        return !!matchLocation.fuzzy;\n      }\n    }\n    return true;\n  })();\n  return isMatch ? params : undefined;\n}\n\n// @ts-nocheck\n\n// qss has been slightly modified and inlined here for our use cases (and compression's sake). We've included it as a hard dependency for MIT license attribution.\n\nfunction encode(obj, pfx) {\n  var k,\n    i,\n    tmp,\n    str = '';\n  for (k in obj) {\n    if ((tmp = obj[k]) !== void 0) {\n      if (Array.isArray(tmp)) {\n        for (i = 0; i < tmp.length; i++) {\n          str && (str += '&');\n          str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp[i]);\n        }\n      } else {\n        str && (str += '&');\n        str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp);\n      }\n    }\n  }\n  return (pfx || '') + str;\n}\nfunction toValue(mix) {\n  if (!mix) return '';\n  var str = decodeURIComponent(mix);\n  if (str === 'false') return false;\n  if (str === 'true') return true;\n  if (str.charAt(0) === '0') return str;\n  return +str * 0 === 0 ? +str : str;\n}\nfunction decode(str) {\n  var tmp,\n    k,\n    out = {},\n    arr = str.split('&');\n  while (tmp = arr.shift()) {\n    tmp = tmp.split('=');\n    k = tmp.shift();\n    if (out[k] !== void 0) {\n      out[k] = [].concat(out[k], toValue(tmp.shift()));\n    } else {\n      out[k] = toValue(tmp.shift());\n    }\n  }\n  return out;\n}\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n//\n\nfunction lazy(importer, exportName = 'default') {\n  const lazyComp = /*#__PURE__*/React.lazy(async () => {\n    const moduleExports = await importer();\n    const component = moduleExports[exportName];\n    return {\n      default: component\n    };\n  });\n  const finalComp = lazyComp;\n  finalComp.preload = async () => {\n    {\n      await importer();\n    }\n  };\n  return finalComp;\n}\n//\n\nfunction useLinkProps(options) {\n  const router = useRouter();\n  const {\n    // custom props\n    type,\n    children,\n    target,\n    activeProps = () => ({\n      className: 'active'\n    }),\n    inactiveProps = () => ({}),\n    activeOptions,\n    disabled,\n    // fromCurrent,\n    hash,\n    search,\n    params,\n    to = '.',\n    preload,\n    preloadDelay,\n    replace,\n    // element props\n    style,\n    className,\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart,\n    ...rest\n  } = options;\n  const linkInfo = router.buildLink(options);\n  if (linkInfo.type === 'external') {\n    const {\n      href\n    } = linkInfo;\n    return {\n      href\n    };\n  }\n  const {\n    handleClick,\n    handleFocus,\n    handleEnter,\n    handleLeave,\n    handleTouchStart,\n    isActive,\n    next\n  } = linkInfo;\n  const handleReactClick = e => {\n    if (options.startTransition ?? true) {\n      (React.startTransition || (d => d))(() => {\n        handleClick(e);\n      });\n    }\n  };\n  const composeHandlers = handlers => e => {\n    if (e.persist) e.persist();\n    handlers.filter(Boolean).forEach(handler => {\n      if (e.defaultPrevented) return;\n      handler(e);\n    });\n  };\n\n  // Get the active props\n  const resolvedActiveProps = isActive ? functionalUpdate(activeProps, {}) ?? {} : {};\n\n  // Get the inactive props\n  const resolvedInactiveProps = isActive ? {} : functionalUpdate(inactiveProps, {}) ?? {};\n  return {\n    ...resolvedActiveProps,\n    ...resolvedInactiveProps,\n    ...rest,\n    href: disabled ? undefined : next.href,\n    onClick: composeHandlers([onClick, handleReactClick]),\n    onFocus: composeHandlers([onFocus, handleFocus]),\n    onMouseEnter: composeHandlers([onMouseEnter, handleEnter]),\n    onMouseLeave: composeHandlers([onMouseLeave, handleLeave]),\n    onTouchStart: composeHandlers([onTouchStart, handleTouchStart]),\n    target,\n    style: {\n      ...style,\n      ...resolvedActiveProps.style,\n      ...resolvedInactiveProps.style\n    },\n    className: [className, resolvedActiveProps.className, resolvedInactiveProps.className].filter(Boolean).join(' ') || undefined,\n    ...(disabled ? {\n      role: 'link',\n      'aria-disabled': true\n    } : undefined),\n    ['data-status']: isActive ? 'active' : undefined\n  };\n}\nconst Link = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const linkProps = useLinkProps(props);\n  return /*#__PURE__*/React.createElement(\"a\", _extends({\n    ref: ref\n  }, linkProps, {\n    children: typeof props.children === 'function' ? props.children({\n      isActive: linkProps['data-status'] === 'active'\n    }) : props.children\n  }));\n});\nfunction Navigate(props) {\n  const router = useRouter();\n  React.useLayoutEffect(() => {\n    router.navigate(props);\n  }, []);\n  return null;\n}\nconst matchIdsContext = /*#__PURE__*/React.createContext(null);\nconst routerContext = /*#__PURE__*/React.createContext(null);\nfunction useRouterState(opts) {\n  const router = useRouter();\n  return useStore(router.__store, opts?.select);\n}\nfunction RouterProvider({\n  router,\n  ...rest\n}) {\n  router.update(rest);\n  React.useEffect(router.mount, [router]);\n  const Wrap = router.options.Wrap || React.Fragment;\n  return /*#__PURE__*/React.createElement(Wrap, null, /*#__PURE__*/React.createElement(routerContext.Provider, {\n    value: router\n  }, /*#__PURE__*/React.createElement(Matches, null)));\n}\nfunction Matches() {\n  const matchIds = useRouterState({\n    select: d => d.matches.map(d => d.id)\n  });\n  return /*#__PURE__*/React.createElement(matchIdsContext.Provider, {\n    value: [undefined, ...matchIds]\n  }, /*#__PURE__*/React.createElement(CatchBoundary, {\n    errorComponent: ErrorComponent,\n    onCatch: () => {\n      warning(false, `Error in router! Consider setting an 'errorComponent' in your RootRoute! 👍`);\n    }\n  }, /*#__PURE__*/React.createElement(Outlet, null)));\n}\nfunction useRouter() {\n  const value = React.useContext(routerContext);\n  warning(value, 'useRouter must be used inside a <Router> component!');\n  return value;\n}\nfunction useMatches(opts) {\n  const matchIds = React.useContext(matchIdsContext);\n  return useRouterState({\n    select: state => {\n      const matches = state.matches.slice(state.matches.findIndex(d => d.id === matchIds[0]));\n      return opts?.select?.(matches) ?? matches;\n    }\n  });\n}\nfunction useMatch(opts) {\n  const router = useRouter();\n  const nearestMatchId = React.useContext(matchIdsContext)[0];\n  const nearestMatchRouteId = router.getRouteMatch(nearestMatchId)?.routeId;\n  const matchRouteId = useRouterState({\n    select: state => {\n      const matches = state.matches;\n      const match = opts?.from ? matches.find(d => d.routeId === opts?.from) : matches.find(d => d.id === nearestMatchId);\n      return match.routeId;\n    }\n  });\n  if (opts?.strict ?? true) {\n    invariant(nearestMatchRouteId == matchRouteId, `useMatch(\"${matchRouteId}\") is being called in a component that is meant to render the '${nearestMatchRouteId}' route. Did you mean to 'useMatch(\"${matchRouteId}\", { strict: false })' or 'useRoute(\"${matchRouteId}\")' instead?`);\n  }\n  const match = useRouterState({\n    select: state => {\n      const matches = state.matches;\n      const match = opts?.from ? matches.find(d => d.routeId === opts?.from) : matches.find(d => d.id === nearestMatchId);\n      invariant(match, `Could not find ${opts?.from ? `an active match from \"${opts.from}\"` : 'a nearest match!'}`);\n      return opts?.select?.(match) ?? match;\n    }\n  });\n  return match;\n}\nfunction useLoader(opts) {\n  return useMatch({\n    ...opts,\n    select: match => opts?.select?.(match.loader) ?? match.loader\n  });\n}\nfunction useSearch(opts) {\n  return useMatch({\n    ...opts,\n    select: match => {\n      return opts?.select?.(match.search) ?? match.search;\n    }\n  });\n}\nfunction useParams(opts) {\n  return useRouterState({\n    select: state => {\n      const params = last(state.matches)?.params;\n      return opts?.select?.(params) ?? params;\n    }\n  });\n}\nfunction useNavigate(defaultOpts) {\n  const router = useRouter();\n  return React.useCallback(opts => {\n    return router.navigate({\n      ...defaultOpts,\n      ...opts\n    });\n  }, []);\n}\nfunction useMatchRoute() {\n  const router = useRouter();\n  return React.useCallback(opts => {\n    const {\n      pending,\n      caseSensitive,\n      ...rest\n    } = opts;\n    return router.matchRoute(rest, {\n      pending,\n      caseSensitive\n    });\n  }, []);\n}\nfunction MatchRoute(props) {\n  const matchRoute = useMatchRoute();\n  const params = matchRoute(props);\n  if (typeof props.children === 'function') {\n    return props.children(params);\n  }\n  return !!params ? props.children : null;\n}\nfunction Outlet() {\n  const matchIds = React.useContext(matchIdsContext).slice(1);\n  if (!matchIds[0]) {\n    return null;\n  }\n  return /*#__PURE__*/React.createElement(Match, {\n    matchIds: matchIds\n  });\n}\nconst defaultPending = () => null;\nfunction Match({\n  matchIds\n}) {\n  const router = useRouter();\n  const matchId = matchIds[0];\n  const routeId = router.getRouteMatch(matchId).routeId;\n  const route = router.getRoute(routeId);\n  const PendingComponent = route.options.pendingComponent ?? router.options.defaultPendingComponent ?? defaultPending;\n  const errorComponent = route.options.errorComponent ?? router.options.defaultErrorComponent;\n  const ResolvedSuspenseBoundary = route.options.wrapInSuspense ?? !route.isRoot ? React.Suspense : SafeFragment;\n  const ResolvedCatchBoundary = errorComponent ? CatchBoundary : SafeFragment;\n  return /*#__PURE__*/React.createElement(matchIdsContext.Provider, {\n    value: matchIds\n  }, /*#__PURE__*/React.createElement(ResolvedSuspenseBoundary, {\n    fallback: /*#__PURE__*/React.createElement(PendingComponent, null)\n  }, /*#__PURE__*/React.createElement(ResolvedCatchBoundary, {\n    key: route.id,\n    errorComponent: errorComponent,\n    onCatch: () => {\n      warning(false, `Error in route match: ${matchId}`);\n    }\n  }, /*#__PURE__*/React.createElement(MatchInner, {\n    matchId: matchId\n  }))));\n}\nfunction MatchInner({\n  matchId\n}) {\n  const router = useRouter();\n  const match = useRouterState({\n    select: d => pick(d.matches.find(d => d.id === matchId), ['status', 'loadPromise', 'routeId', 'error'])\n  });\n  const route = router.getRoute(match.routeId);\n  if (match.status === 'error') {\n    throw match.error;\n  }\n  if (match.status === 'pending') {\n    invariant(false, 'This should never happen');\n  }\n  if (match.status === 'success') {\n    let comp = route.options.component ?? router.options.defaultComponent;\n    if (comp) {\n      return /*#__PURE__*/React.createElement(comp, {\n        useLoader: route.useLoader,\n        useMatch: route.useMatch,\n        useContext: route.useContext,\n        useSearch: route.useSearch,\n        useParams: route.useParams\n      });\n    }\n    return /*#__PURE__*/React.createElement(Outlet, null);\n  }\n  invariant(false, 'Idle routeMatch status encountered during rendering! You should never see this. File an issue!');\n}\nfunction SafeFragment(props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.children);\n}\nfunction useInjectHtml() {\n  const router = useRouter();\n  return React.useCallback(html => {\n    router.injectHtml(html);\n  }, []);\n}\nfunction useDehydrate() {\n  const router = useRouter();\n  return React.useCallback(function dehydrate(key, data) {\n    return router.dehydrateData(key, data);\n  }, []);\n}\nfunction useHydrate() {\n  const router = useRouter();\n  return function hydrate(key) {\n    return router.hydrateData(key);\n  };\n}\n\n// This is the messiest thing ever... I'm either seriously tired (likely) or\n// there has to be a better way to reset error boundaries when the\n// router's location key changes.\n\nclass CatchBoundary extends React.Component {\n  state = {\n    error: false,\n    info: undefined\n  };\n  componentDidCatch(error, info) {\n    this.props.onCatch(error, info);\n    this.setState({\n      error,\n      info\n    });\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(CatchBoundaryInner, _extends({}, this.props, {\n      errorState: this.state,\n      reset: () => this.setState({})\n    }));\n  }\n}\nfunction CatchBoundaryInner(props) {\n  const locationKey = useRouterState({\n    select: d => d.resolvedLocation.key\n  });\n  const [activeErrorState, setActiveErrorState] = React.useState(props.errorState);\n  const errorComponent = props.errorComponent ?? ErrorComponent;\n  const prevKeyRef = React.useRef('');\n  React.useEffect(() => {\n    if (activeErrorState) {\n      if (locationKey !== prevKeyRef.current) {\n        setActiveErrorState({});\n      }\n    }\n    prevKeyRef.current = locationKey;\n  }, [activeErrorState, locationKey]);\n  React.useEffect(() => {\n    if (props.errorState.error) {\n      setActiveErrorState(props.errorState);\n    }\n    // props.reset()\n  }, [props.errorState.error]);\n  if (props.errorState.error && activeErrorState.error) {\n    return /*#__PURE__*/React.createElement(errorComponent, activeErrorState);\n  }\n  return props.children;\n}\nfunction ErrorComponent({\n  error\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      padding: '.5rem',\n      maxWidth: '100%'\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    style: {\n      fontSize: '1.2rem'\n    }\n  }, \"Something went wrong!\"), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      height: '.5rem'\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"pre\", {\n    style: {\n      fontSize: '.7em',\n      border: '1px solid red',\n      borderRadius: '.25rem',\n      padding: '.5rem',\n      color: 'red',\n      overflow: 'auto'\n    }\n  }, error.message ? /*#__PURE__*/React.createElement(\"code\", null, error.message) : null)));\n}\nfunction useBlocker(message, condition = true) {\n  const router = useRouter();\n  React.useEffect(() => {\n    if (!condition) return;\n    let unblock = router.history.block((retry, cancel) => {\n      if (window.confirm(message)) {\n        unblock();\n        retry();\n      }\n    });\n    return unblock;\n  });\n}\nfunction Block({\n  message,\n  condition,\n  children\n}) {\n  useBlocker(message, condition);\n  return children ?? null;\n}\nfunction shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nconst rootRouteId = '__root__';\nclass Route {\n  // Set up in this.init()\n\n  // customId!: TCustomId\n\n  // Optional\n\n  constructor(options) {\n    this.options = options || {};\n    this.isRoot = !options?.getParentRoute;\n  }\n  init = opts => {\n    this.originalIndex = opts.originalIndex;\n    this.router = opts.router;\n    const allOptions = this.options;\n    const isRoot = !allOptions?.path && !allOptions?.id;\n    this.parentRoute = this.options?.getParentRoute?.();\n    if (isRoot) {\n      this.path = rootRouteId;\n    } else {\n      invariant(this.parentRoute, `Child Route instances must pass a 'getParentRoute: () => ParentRoute' option that returns a Route instance.`);\n    }\n    let path = isRoot ? rootRouteId : allOptions.path;\n\n    // If the path is anything other than an index path, trim it up\n    if (path && path !== '/') {\n      path = trimPath(path);\n    }\n    const customId = allOptions?.id || path;\n\n    // Strip the parentId prefix from the first level of children\n    let id = isRoot ? rootRouteId : joinPaths([this.parentRoute.id === rootRouteId ? '' : this.parentRoute.id, customId]);\n    if (path === rootRouteId) {\n      path = '/';\n    }\n    if (id !== rootRouteId) {\n      id = joinPaths(['/', id]);\n    }\n    const fullPath = id === rootRouteId ? '/' : joinPaths([this.parentRoute.fullPath, path]);\n    this.path = path;\n    this.id = id;\n    // this.customId = customId as TCustomId\n    this.fullPath = fullPath;\n    this.to = fullPath;\n  };\n  addChildren = children => {\n    this.children = children;\n    return this;\n  };\n  useMatch = opts => {\n    return useMatch({\n      ...opts,\n      from: this.id\n    });\n  };\n  useLoader = opts => {\n    return useLoader({\n      ...opts,\n      from: this.id\n    });\n  };\n  useContext = opts => {\n    return useMatch({\n      ...opts,\n      from: this.id,\n      select: d => opts?.select?.(d.context) ?? d.context\n    });\n  };\n  useSearch = opts => {\n    return useSearch({\n      ...opts,\n      from: this.id\n    });\n  };\n  useParams = opts => {\n    return useParams({\n      ...opts,\n      from: this.id\n    });\n  };\n}\nclass RouterContext {\n  constructor() {}\n  createRootRoute = options => {\n    return new RootRoute(options);\n  };\n\n  //   return <\n  //     TLoader = unknown,\n  //     TSearchSchema extends AnySearchSchema = {},\n  //     TContext extends {} = {},\n  //   >(\n  //     options?: Omit<\n  //       RouteOptions<\n  //         AnyRoute,\n  //         RootRouteId,\n  //         '',\n  //         TLoader,\n  //         {},\n  //         TSearchSchema,\n  //         NoInfer<TSearchSchema>,\n  //         {},\n  //         TRouterContext,\n  //         TRouterContext,\n  //         TContext,\n  //         TRouterContext & TContext\n  //       >,\n  //       'path' | 'id' | 'getParentRoute' | 'caseSensitive'\n  //     >,\n  //   ) =>\n  //     new RootRoute<TLoader, TSearchSchema, TContext, TRouterContext>(\n  //       options as any,\n  //     )\n  // }\n}\n\nclass RootRoute extends Route {\n  constructor(options) {\n    super(options);\n  }\n}\n\n// const rootRoute = new RootRoute({\n//   validateSearch: () => null as unknown as { root?: boolean },\n// })\n\n// const aRoute = new Route({\n//   getParentRoute: () => rootRoute,\n//   path: 'a',\n//   validateSearch: () => null as unknown as { a?: string },\n// })\n\n// const bRoute = new Route({\n//   getParentRoute: () => aRoute,\n//   path: 'b',\n// })\n\n// const rootIsRoot = rootRoute.isRoot\n// //    ^?\n// const aIsRoot = aRoute.isRoot\n// //    ^?\n\n// const rId = rootRoute.id\n// //    ^?\n// const aId = aRoute.id\n// //    ^?\n// const bId = bRoute.id\n// //    ^?\n\n// const rPath = rootRoute.fullPath\n// //    ^?\n// const aPath = aRoute.fullPath\n// //    ^?\n// const bPath = bRoute.fullPath\n// //    ^?\n\n// const rSearch = rootRoute.__types.fullSearchSchema\n// //    ^?\n// const aSearch = aRoute.__types.fullSearchSchema\n// //    ^?\n// const bSearch = bRoute.__types.fullSearchSchema\n// //    ^?\n\n// const config = rootRoute.addChildren([aRoute.addChildren([bRoute])])\n// //    ^?\n\nconst defaultParseSearch = parseSearchWith(JSON.parse);\nconst defaultStringifySearch = stringifySearchWith(JSON.stringify);\nfunction parseSearchWith(parser) {\n  return searchStr => {\n    if (searchStr.substring(0, 1) === '?') {\n      searchStr = searchStr.substring(1);\n    }\n    let query = decode(searchStr);\n\n    // Try to parse any query params that might be json\n    for (let key in query) {\n      const value = query[key];\n      if (typeof value === 'string') {\n        try {\n          query[key] = parser(value);\n        } catch (err) {\n          //\n        }\n      }\n    }\n    return query;\n  };\n}\nfunction stringifySearchWith(stringify) {\n  return search => {\n    search = {\n      ...search\n    };\n    if (search) {\n      Object.keys(search).forEach(key => {\n        const val = search[key];\n        if (typeof val === 'undefined' || val === undefined) {\n          delete search[key];\n        } else if (val && typeof val === 'object' && val !== null) {\n          try {\n            search[key] = stringify(val);\n          } catch (err) {\n            // silent\n          }\n        }\n      });\n    }\n    const searchStr = encode(search).toString();\n    return searchStr ? `?${searchStr}` : '';\n  };\n}\n\nconst componentTypes = ['component', 'errorComponent', 'pendingComponent'];\nclass Router {\n  #unsubHistory;\n  startedLoadingAt = Date.now();\n  resolveNavigation = () => {};\n  constructor(options) {\n    this.options = {\n      defaultPreloadDelay: 50,\n      context: undefined,\n      ...options,\n      stringifySearch: options?.stringifySearch ?? defaultStringifySearch,\n      parseSearch: options?.parseSearch ?? defaultParseSearch\n      // fetchServerDataFn: options?.fetchServerDataFn ?? defaultFetchServerDataFn,\n    };\n\n    this.__store = new Store(getInitialRouterState(), {\n      onUpdate: () => {\n        this.state = this.__store.state;\n      },\n      defaultPriority: 'low'\n    });\n    this.state = this.__store.state;\n    this.update(options);\n    const next = this.buildNext({\n      hash: true,\n      fromCurrent: true,\n      search: true,\n      state: true\n    });\n    if (this.state.location.href !== next.href) {\n      this.#commitLocation({\n        ...next,\n        replace: true\n      });\n    }\n  }\n  reset = () => {\n    this.__store.setState(s => Object.assign(s, getInitialRouterState()));\n  };\n  mount = () => {\n    // If the router matches are empty, start loading the matches\n    if (!this.state.matches.length) {\n      this.safeLoad();\n    }\n  };\n  update = opts => {\n    this.options = {\n      ...this.options,\n      ...opts,\n      context: {\n        ...this.options.context,\n        ...opts?.context\n      }\n    };\n    if (!this.history || this.options.history && this.options.history !== this.history) {\n      if (this.#unsubHistory) {\n        this.#unsubHistory();\n      }\n      this.history = this.options.history ?? (isServer ? createMemoryHistory() : createBrowserHistory());\n      const parsedLocation = this.#parseLocation();\n      this.__store.setState(s => ({\n        ...s,\n        resolvedLocation: parsedLocation,\n        location: parsedLocation\n      }));\n      this.#unsubHistory = this.history.listen(() => {\n        this.safeLoad({\n          next: this.#parseLocation(this.state.location)\n        });\n      });\n    }\n    const {\n      basepath,\n      routeTree\n    } = this.options;\n    this.basepath = `/${trimPath(basepath ?? '') ?? ''}`;\n    if (routeTree && routeTree !== this.routeTree) {\n      this.#buildRouteTree(routeTree);\n    }\n    return this;\n  };\n  buildNext = opts => {\n    const next = this.#buildLocation(opts);\n    const __matches = this.matchRoutes(next.pathname, next.search);\n    return this.#buildLocation({\n      ...opts,\n      __matches\n    });\n  };\n  cancelMatches = () => {\n    this.state.matches.forEach(match => {\n      this.cancelMatch(match.id);\n    });\n  };\n  cancelMatch = id => {\n    this.getRouteMatch(id)?.abortController?.abort();\n  };\n  safeLoad = opts => {\n    this.load(opts).catch(err => {\n      // console.warn(err)\n      // invariant(false, 'Encountered an error during router.load()! ☝️.')\n    });\n  };\n  load = async opts => {\n    this.#createNavigationPromise();\n    let now = Date.now();\n    const startedAt = now;\n    this.startedLoadingAt = startedAt;\n\n    // Cancel any pending matches\n    this.cancelMatches();\n    let pendingMatches;\n    this.__store.batch(() => {\n      if (opts?.next) {\n        // Ingest the new location\n        this.__store.setState(s => ({\n          ...s,\n          location: opts.next\n        }));\n      }\n\n      // Match the routes\n      pendingMatches = this.matchRoutes(this.state.location.pathname, this.state.location.search, {\n        // throwOnError: true,\n      });\n      this.__store.setState(s => ({\n        ...s,\n        status: 'pending',\n        pendingMatches\n      }));\n    });\n\n    // Load the matches\n    await this.loadMatches(pendingMatches);\n    if (this.startedLoadingAt !== startedAt) {\n      // Ignore side-effects of outdated side-effects\n      return this.navigationPromise;\n    }\n    const prevLocation = this.state.resolvedLocation;\n    this.__store.setState(s => ({\n      ...s,\n      status: 'idle',\n      resolvedLocation: s.location,\n      matches: s.pendingMatches,\n      pendingMatches: []\n    }));\n    if (prevLocation.href !== this.state.location.href) {\n      this.options.onRouteChange?.();\n    }\n    this.resolveNavigation();\n  };\n  getRoute = id => {\n    const route = this.routesById[id];\n    invariant(route, `Route with id \"${id}\" not found`);\n    return route;\n  };\n  preloadRoute = async (navigateOpts = this.state.location) => {\n    const next = this.buildNext(navigateOpts);\n    const matches = this.matchRoutes(next.pathname, next.search, {\n      throwOnError: true\n    });\n    const matchesById = {};\n    matches.forEach(m => {\n      if (!this.state.matches.find(d => d.id === m.id)) {\n        matchesById[m.id] = m;\n      }\n    });\n    this.__store.setState(s => {\n      return {\n        ...s,\n        preloadMatches: {\n          ...s.preloadMatches,\n          ...matchesById\n        }\n      };\n    });\n    await this.loadMatches(matches, {\n      preload: true\n    });\n    return matches;\n  };\n  matchRoutes = (pathname, locationSearch, opts) => {\n    let routeParams = {};\n    let foundRoute = this.flatRoutes.find(route => {\n      const matchedParams = matchPathname(this.basepath, pathname, {\n        to: route.fullPath,\n        caseSensitive: route.options.caseSensitive ?? this.options.caseSensitive\n      });\n      if (matchedParams) {\n        routeParams = matchedParams;\n        return true;\n      }\n      return false;\n    });\n    let routeCursor = foundRoute || this.routesById['__root__'];\n    let matchedRoutes = [routeCursor];\n    while (routeCursor?.parentRoute) {\n      routeCursor = routeCursor.parentRoute;\n      if (routeCursor) matchedRoutes.unshift(routeCursor);\n    }\n\n    // Alright, by now we should have all of our\n    // matching routes and their param pairs, let's\n    // Turn them into actual `Match` objects and\n    // accumulate the params into a single params bag\n    let allParams = {};\n\n    // Existing matches are matches that are already loaded along with\n    // pending matches that are still loading\n\n    const matches = matchedRoutes.map(route => {\n      let parsedParams;\n      let parsedParamsError;\n      try {\n        parsedParams = route.options.parseParams?.(routeParams) ?? routeParams;\n      } catch (err) {\n        parsedParamsError = new PathParamError(err.message, {\n          cause: err\n        });\n        if (opts?.throwOnError) {\n          throw parsedParamsError;\n        }\n      }\n\n      // Add the parsed params to the accumulated params bag\n      Object.assign(allParams, parsedParams);\n      const interpolatedPath = interpolatePath(route.path, allParams);\n      const matchId = interpolatePath(route.id, allParams, true) + (route.options.getKey?.({\n        params: allParams,\n        search: locationSearch\n      }) ?? '');\n\n      // Waste not, want not. If we already have a match for this route,\n      // reuse it. This is important for layout routes, which might stick\n      // around between navigation actions that only change leaf routes.\n      const existingMatch = this.getRouteMatch(matchId);\n      if (existingMatch) {\n        // Return a copy, we don't want to mutate the existing match\n        return {\n          ...existingMatch\n        };\n      }\n\n      // Create a fresh route match\n      const hasLoaders = !!(route.options.loader || componentTypes.some(d => route.options[d]?.preload));\n      const routeMatch = {\n        id: matchId,\n        routeId: route.id,\n        params: allParams,\n        pathname: joinPaths([this.basepath, interpolatedPath]),\n        updatedAt: 0,\n        routeSearch: {},\n        search: {},\n        status: hasLoaders ? 'pending' : 'success',\n        error: undefined,\n        paramsError: parsedParamsError,\n        searchError: undefined,\n        loader: undefined,\n        loadPromise: Promise.resolve(),\n        routeContext: undefined,\n        context: undefined,\n        abortController: new AbortController(),\n        fetchedAt: 0\n      };\n      return routeMatch;\n    });\n\n    // Take each match and resolve its search params and context\n    // This has to happen after the matches are created or found\n    // so that we can use the parent match's search params and context\n    matches.forEach((match, i) => {\n      const parentMatch = matches[i - 1];\n      const route = this.getRoute(match.routeId);\n      const searchInfo = (() => {\n        // Validate the search params and stabilize them\n        const parentSearchInfo = {\n          search: parentMatch?.search ?? locationSearch,\n          routeSearch: parentMatch?.routeSearch ?? locationSearch\n        };\n        try {\n          const validator = typeof route.options.validateSearch === 'object' ? route.options.validateSearch.parse : route.options.validateSearch;\n          const routeSearch = validator?.(parentSearchInfo.search) ?? {};\n          const search = {\n            ...parentSearchInfo.search,\n            ...routeSearch\n          };\n          return {\n            routeSearch: replaceEqualDeep(match.routeSearch, routeSearch),\n            search: replaceEqualDeep(match.search, search)\n          };\n        } catch (err) {\n          match.searchError = new SearchParamError(err.message, {\n            cause: err\n          });\n          if (opts?.throwOnError) {\n            throw match.searchError;\n          }\n          return parentSearchInfo;\n        }\n      })();\n      const contextInfo = (() => {\n        try {\n          const routeContext = route.options.getContext?.({\n            parentContext: parentMatch?.routeContext ?? {},\n            context: parentMatch?.context ?? this?.options.context ?? {},\n            params: match.params,\n            search: match.search\n          }) || {};\n          const context = {\n            ...(parentMatch?.context ?? this?.options.context),\n            ...routeContext\n          };\n          return {\n            context,\n            routeContext\n          };\n        } catch (err) {\n          route.options.onError?.(err);\n          throw err;\n        }\n      })();\n      Object.assign(match, {\n        ...searchInfo,\n        ...contextInfo\n      });\n    });\n    return matches;\n  };\n  loadMatches = async (resolvedMatches, opts) => {\n    let firstBadMatchIndex;\n\n    // Check each match middleware to see if the route can be accessed\n    try {\n      await Promise.all(resolvedMatches.map(async (match, index) => {\n        const route = this.getRoute(match.routeId);\n        const handleError = (err, handler) => {\n          firstBadMatchIndex = firstBadMatchIndex ?? index;\n          handler = handler || route.options.onError;\n          if (isRedirect(err)) {\n            throw err;\n          }\n          try {\n            handler?.(err);\n          } catch (errorHandlerErr) {\n            err = errorHandlerErr;\n            if (isRedirect(errorHandlerErr)) {\n              throw errorHandlerErr;\n            }\n          }\n          this.setRouteMatch(match.id, s => ({\n            ...s,\n            error: err,\n            status: 'error',\n            updatedAt: Date.now()\n          }));\n        };\n        if (match.paramsError) {\n          handleError(match.paramsError, route.options.onParseParamsError);\n        }\n        if (match.searchError) {\n          handleError(match.searchError, route.options.onValidateSearchError);\n        }\n        try {\n          await route.options.beforeLoad?.({\n            router: this,\n            match\n          });\n        } catch (err) {\n          handleError(err, route.options.onBeforeLoadError);\n        }\n      }));\n    } catch (err) {\n      if (isRedirect(err)) {\n        if (!opts?.preload) {\n          this.navigate(err);\n        }\n        return;\n      }\n      throw err; // we should never end up here\n    }\n\n    const validResolvedMatches = resolvedMatches.slice(0, firstBadMatchIndex);\n    const matchPromises = [];\n    validResolvedMatches.forEach((match, index) => {\n      matchPromises.push(Promise.resolve().then(async () => {\n        const parentMatchPromise = matchPromises[index - 1];\n        const route = this.getRoute(match.routeId);\n        const fetchedAt = Date.now();\n        const loadPromise = Promise.resolve().then(async () => {\n          const checkLatest = () => {\n            const latest = this.getRouteMatch(match.id);\n            return latest && latest.fetchedAt !== fetchedAt ? latest.loadPromise : undefined;\n          };\n          let latestPromise;\n          const componentsPromise = (async () => {\n            // then run all component and data loaders in parallel\n            // For each component type, potentially load it asynchronously\n\n            await Promise.all(componentTypes.map(async type => {\n              const component = route.options[type];\n              if (component?.preload) {\n                await component.preload();\n              }\n            }));\n          })();\n          const loaderPromise = Promise.resolve().then(() => {\n            if (route.options.loader) {\n              return route.options.loader({\n                ...match,\n                preload: !!opts?.preload,\n                parentMatchPromise\n              });\n            }\n            return;\n          });\n          try {\n            const [_, loader] = await Promise.all([componentsPromise, loaderPromise]);\n            if (latestPromise = checkLatest()) return await latestPromise;\n            if (!opts?.preload || !this.state.matches.find(d => d.id === match.id)) {\n              this.setRouteMatch(match.id, s => ({\n                ...s,\n                error: undefined,\n                status: 'success',\n                updatedAt: Date.now(),\n                loader\n              }));\n            }\n          } catch (err) {\n            if (latestPromise = checkLatest()) return await latestPromise;\n            if (isRedirect(err)) {\n              if (!opts?.preload) {\n                this.navigate(err);\n              }\n              return;\n            }\n            const errorHandler = route.options.onLoadError ?? route.options.onError;\n            let caughtError = err;\n            try {\n              errorHandler?.(err);\n            } catch (errorHandlerErr) {\n              caughtError = errorHandlerErr;\n              if (isRedirect(errorHandlerErr)) {\n                if (!opts?.preload) {\n                  this.navigate(errorHandlerErr);\n                }\n                return;\n              }\n            }\n            this.setRouteMatch(match.id, s => ({\n              ...s,\n              error: caughtError,\n              status: 'error',\n              updatedAt: Date.now()\n            }));\n          } finally {\n            if (latestPromise = checkLatest()) return await latestPromise;\n            if (opts?.preload) {\n              this.__store.setState(s => {\n                const preloadMatches = {\n                  ...s.preloadMatches\n                };\n                delete preloadMatches[match.id];\n                return {\n                  ...s,\n                  preloadMatches\n                };\n              });\n            }\n          }\n        });\n        this.setRouteMatch(match.id, s => ({\n          ...s,\n          loadPromise,\n          fetchedAt\n        }));\n        await loadPromise;\n      }));\n    });\n    await Promise.all(matchPromises);\n  };\n  reload = () => {\n    this.navigate({\n      fromCurrent: true,\n      replace: true,\n      search: true\n    });\n  };\n  resolvePath = (from, path) => {\n    return resolvePath(this.basepath, from, cleanPath(path));\n  };\n  navigate = async ({\n    from,\n    to = '',\n    search,\n    hash,\n    replace,\n    params\n  }) => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n    const toString = String(to);\n    const fromString = typeof from === 'undefined' ? from : String(from);\n    let isExternal;\n    try {\n      new URL(`${toString}`);\n      isExternal = true;\n    } catch (e) {}\n    invariant(!isExternal, 'Attempting to navigate to external url with this.navigate!');\n    return this.#commitLocation({\n      from: fromString,\n      to: toString,\n      search,\n      hash,\n      replace,\n      params\n    });\n  };\n  matchRoute = (location, opts) => {\n    location = {\n      ...location,\n      to: location.to ? this.resolvePath(location.from ?? '', location.to) : undefined\n    };\n    const next = this.buildNext(location);\n    if (opts?.pending && this.state.status !== 'pending') {\n      return false;\n    }\n    const baseLocation = opts?.pending ? this.state.location : this.state.resolvedLocation;\n    if (!baseLocation) {\n      return false;\n    }\n    const match = matchPathname(this.basepath, baseLocation.pathname, {\n      ...opts,\n      to: next.pathname\n    });\n    if (!match) {\n      return false;\n    }\n    if (opts?.includeSearch ?? true) {\n      return partialDeepEqual(baseLocation.search, next.search) ? match : false;\n    }\n    return match;\n  };\n  buildLink = ({\n    from,\n    to = '.',\n    search,\n    params,\n    hash,\n    target,\n    replace,\n    activeOptions,\n    preload,\n    preloadDelay: userPreloadDelay,\n    disabled\n  }) => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n\n    try {\n      new URL(`${to}`);\n      return {\n        type: 'external',\n        href: to\n      };\n    } catch (e) {}\n    const nextOpts = {\n      from,\n      to,\n      search,\n      params,\n      hash,\n      replace\n    };\n    const next = this.buildNext(nextOpts);\n    preload = preload ?? this.options.defaultPreload;\n    const preloadDelay = userPreloadDelay ?? this.options.defaultPreloadDelay ?? 0;\n\n    // Compare path/hash for matches\n    const currentPathSplit = this.state.location.pathname.split('/');\n    const nextPathSplit = next.pathname.split('/');\n    const pathIsFuzzyEqual = nextPathSplit.every((d, i) => d === currentPathSplit[i]);\n    // Combine the matches based on user options\n    const pathTest = activeOptions?.exact ? this.state.location.pathname === next.pathname : pathIsFuzzyEqual;\n    const hashTest = activeOptions?.includeHash ? this.state.location.hash === next.hash : true;\n    const searchTest = activeOptions?.includeSearch ?? true ? partialDeepEqual(this.state.location.search, next.search) : true;\n\n    // The final \"active\" test\n    const isActive = pathTest && hashTest && searchTest;\n\n    // The click handler\n    const handleClick = e => {\n      if (!disabled && !isCtrlEvent(e) && !e.defaultPrevented && (!target || target === '_self') && e.button === 0) {\n        e.preventDefault();\n\n        // All is well? Navigate!\n        this.#commitLocation(nextOpts);\n      }\n    };\n\n    // The click handler\n    const handleFocus = e => {\n      if (preload) {\n        this.preloadRoute(nextOpts).catch(err => {\n          console.warn(err);\n          console.warn('Error preloading route! ☝️');\n        });\n      }\n    };\n    const handleTouchStart = e => {\n      this.preloadRoute(nextOpts).catch(err => {\n        console.warn(err);\n        console.warn('Error preloading route! ☝️');\n      });\n    };\n    const handleEnter = e => {\n      const target = e.target || {};\n      if (preload) {\n        if (target.preloadTimeout) {\n          return;\n        }\n        target.preloadTimeout = setTimeout(() => {\n          target.preloadTimeout = null;\n          this.preloadRoute(nextOpts).catch(err => {\n            console.warn(err);\n            console.warn('Error preloading route! ☝️');\n          });\n        }, preloadDelay);\n      }\n    };\n    const handleLeave = e => {\n      const target = e.target || {};\n      if (target.preloadTimeout) {\n        clearTimeout(target.preloadTimeout);\n        target.preloadTimeout = null;\n      }\n    };\n    return {\n      type: 'internal',\n      next,\n      handleFocus,\n      handleClick,\n      handleEnter,\n      handleLeave,\n      handleTouchStart,\n      isActive,\n      disabled\n    };\n  };\n  dehydrate = () => {\n    return {\n      state: pick(this.state, ['location', 'status', 'lastUpdated'])\n    };\n  };\n  hydrate = async __do_not_use_server_ctx => {\n    let _ctx = __do_not_use_server_ctx;\n    // Client hydrates from window\n    if (typeof document !== 'undefined') {\n      _ctx = window.__TSR_DEHYDRATED__;\n    }\n    invariant(_ctx, 'Expected to find a __TSR_DEHYDRATED__ property on window... but we did not. Did you forget to render <DehydrateRouter /> in your app?');\n    const ctx = _ctx;\n    this.dehydratedData = ctx.payload;\n    this.options.hydrate?.(ctx.payload);\n    this.__store.setState(s => {\n      return {\n        ...s,\n        ...ctx.router.state,\n        matches: s.matches,\n        resolvedLocation: ctx.router.state.location\n      };\n    });\n    await this.load();\n    return;\n  };\n  injectedHtml = [];\n  injectHtml = async html => {\n    this.injectedHtml.push(html);\n  };\n  dehydrateData = (key, getData) => {\n    if (typeof document === 'undefined') {\n      const strKey = typeof key === 'string' ? key : JSON.stringify(key);\n      this.injectHtml(async () => {\n        const id = `__TSR_DEHYDRATED__${strKey}`;\n        const data = typeof getData === 'function' ? await getData() : getData;\n        return `<script id='${id}' suppressHydrationWarning>window[\"__TSR_DEHYDRATED__${escapeJSON(strKey)}\"] = ${JSON.stringify(data)}\n        ;(() => {\n          var el = document.getElementById('${id}')\n          el.parentElement.removeChild(el)\n        })()\n        </script>`;\n      });\n      return () => this.hydrateData(key);\n    }\n    return () => undefined;\n  };\n  hydrateData = key => {\n    if (typeof document !== 'undefined') {\n      const strKey = typeof key === 'string' ? key : JSON.stringify(key);\n      return window[`__TSR_DEHYDRATED__${strKey}`];\n    }\n    return undefined;\n  };\n\n  // resolveMatchPromise = (matchId: string, key: string, value: any) => {\n  //   this.state.matches\n  //     .find((d) => d.id === matchId)\n  //     ?.__promisesByKey[key]?.resolve(value)\n  // }\n\n  #buildRouteTree = routeTree => {\n    this.routeTree = routeTree;\n    this.routesById = {};\n    this.routesByPath = {};\n    this.flatRoutes = [];\n    const recurseRoutes = routes => {\n      routes.forEach((route, i) => {\n        route.init({\n          originalIndex: i,\n          router: this\n        });\n        const existingRoute = this.routesById[route.id];\n        invariant(!existingRoute, `Duplicate routes found with id: ${String(route.id)}`);\n        this.routesById[route.id] = route;\n        if (!route.isRoot && route.path) {\n          const trimmedFullPath = trimPathRight(route.fullPath);\n          if (!this.routesByPath[trimmedFullPath] || route.fullPath.endsWith('/')) {\n            this.routesByPath[trimmedFullPath] = route;\n          }\n        }\n        const children = route.children;\n        if (children?.length) {\n          recurseRoutes(children);\n        }\n      });\n    };\n    recurseRoutes([routeTree]);\n    this.flatRoutes = Object.values(this.routesByPath).map((d, i) => {\n      const trimmed = trimPath(d.fullPath);\n      const parsed = parsePathname(trimmed);\n      while (parsed.length > 1 && parsed[0]?.value === '/') {\n        parsed.shift();\n      }\n      const score = parsed.map(d => {\n        if (d.type === 'param') {\n          return 0.5;\n        }\n        if (d.type === 'wildcard') {\n          return 0.25;\n        }\n        return 1;\n      });\n      return {\n        child: d,\n        trimmed,\n        parsed,\n        index: i,\n        score\n      };\n    }).sort((a, b) => {\n      let isIndex = a.trimmed === '/' ? 1 : b.trimmed === '/' ? -1 : 0;\n      if (isIndex !== 0) return isIndex;\n      const length = Math.min(a.score.length, b.score.length);\n\n      // Sort by length of score\n      if (a.score.length !== b.score.length) {\n        return b.score.length - a.score.length;\n      }\n\n      // Sort by min available score\n      for (let i = 0; i < length; i++) {\n        if (a.score[i] !== b.score[i]) {\n          return b.score[i] - a.score[i];\n        }\n      }\n\n      // Sort by min available parsed value\n      for (let i = 0; i < length; i++) {\n        if (a.parsed[i].value !== b.parsed[i].value) {\n          return a.parsed[i].value > b.parsed[i].value ? 1 : -1;\n        }\n      }\n\n      // Sort by length of trimmed full path\n      if (a.trimmed !== b.trimmed) {\n        return a.trimmed > b.trimmed ? 1 : -1;\n      }\n\n      // Sort by original index\n      return a.index - b.index;\n    }).map((d, i) => {\n      d.child.rank = i;\n      return d.child;\n    });\n  };\n  #parseLocation = previousLocation => {\n    let {\n      pathname,\n      search,\n      hash,\n      state\n    } = this.history.location;\n    const parsedSearch = this.options.parseSearch(search);\n    return {\n      pathname: pathname,\n      searchStr: search,\n      search: replaceEqualDeep(previousLocation?.search, parsedSearch),\n      hash: hash.split('#').reverse()[0] ?? '',\n      href: `${pathname}${search}${hash}`,\n      state: state,\n      key: state?.key || '__init__'\n    };\n  };\n  #buildLocation = (dest = {}) => {\n    dest.fromCurrent = dest.fromCurrent ?? dest.to === '';\n    const fromPathname = dest.fromCurrent ? this.state.location.pathname : dest.from ?? this.state.location.pathname;\n    let pathname = resolvePath(this.basepath ?? '/', fromPathname, `${dest.to ?? ''}`);\n    const fromMatches = this.matchRoutes(this.state.location.pathname, this.state.location.search);\n    const prevParams = {\n      ...last(fromMatches)?.params\n    };\n    let nextParams = (dest.params ?? true) === true ? prevParams : functionalUpdate(dest.params, prevParams);\n    if (nextParams) {\n      dest.__matches?.map(d => this.getRoute(d.routeId).options.stringifyParams).filter(Boolean).forEach(fn => {\n        nextParams = {\n          ...nextParams,\n          ...fn(nextParams)\n        };\n      });\n    }\n    pathname = interpolatePath(pathname, nextParams ?? {});\n    const preSearchFilters = dest.__matches?.map(match => this.getRoute(match.routeId).options.preSearchFilters ?? []).flat().filter(Boolean) ?? [];\n    const postSearchFilters = dest.__matches?.map(match => this.getRoute(match.routeId).options.postSearchFilters ?? []).flat().filter(Boolean) ?? [];\n\n    // Pre filters first\n    const preFilteredSearch = preSearchFilters?.length ? preSearchFilters?.reduce((prev, next) => next(prev), this.state.location.search) : this.state.location.search;\n\n    // Then the link/navigate function\n    const destSearch = dest.search === true ? preFilteredSearch // Preserve resolvedFrom true\n    : dest.search ? functionalUpdate(dest.search, preFilteredSearch) ?? {} // Updater\n    : preSearchFilters?.length ? preFilteredSearch // Preserve resolvedFrom filters\n    : {};\n\n    // Then post filters\n    const postFilteredSearch = postSearchFilters?.length ? postSearchFilters.reduce((prev, next) => next(prev), destSearch) : destSearch;\n    const search = replaceEqualDeep(this.state.location.search, postFilteredSearch);\n    const searchStr = this.options.stringifySearch(search);\n    const hash = dest.hash === true ? this.state.location.hash : functionalUpdate(dest.hash, this.state.location.hash);\n    const hashStr = hash ? `#${hash}` : '';\n    const nextState = dest.state === true ? this.state.location.state : functionalUpdate(dest.state, this.state.location.state);\n    return {\n      pathname,\n      search,\n      searchStr,\n      state: nextState,\n      hash,\n      href: this.history.createHref(`${pathname}${searchStr}${hashStr}`),\n      key: dest.key\n    };\n  };\n  #commitLocation = async location => {\n    const next = this.buildNext(location);\n    const id = '' + Date.now() + Math.random();\n    if (this.navigateTimeout) clearTimeout(this.navigateTimeout);\n    let nextAction = 'replace';\n    if (!location.replace) {\n      nextAction = 'push';\n    }\n    const isSameUrl = this.state.location.href === next.href;\n    if (isSameUrl && !next.key) {\n      nextAction = 'replace';\n    }\n    const href = `${next.pathname}${next.searchStr}${next.hash ? `#${next.hash}` : ''}`;\n    this.history[nextAction === 'push' ? 'push' : 'replace'](href, {\n      id,\n      ...next.state\n    });\n    return this.#createNavigationPromise();\n  };\n  #createNavigationPromise = () => {\n    const previousNavigationResolve = this.resolveNavigation;\n    this.navigationPromise = new Promise(resolve => {\n      this.resolveNavigation = () => {\n        resolve();\n        previousNavigationResolve();\n      };\n    });\n    return this.navigationPromise;\n  };\n  getRouteMatch = id => {\n    return this.state.matches.find(d => d.id === id) || this.state.preloadMatches[id];\n  };\n  #setResolvedRouteMatch = (id, updater) => {\n    this.__store.setState(prev => ({\n      ...prev,\n      matches: prev.matches.map(d => {\n        if (d.id === id) {\n          return updater(d);\n        }\n        return d;\n      })\n    }));\n  };\n  #setPendingRouteMatch = (id, updater) => {\n    this.__store.setState(prev => ({\n      ...prev,\n      pendingMatches: prev.pendingMatches.map(d => {\n        if (d.id === id) {\n          return updater(d);\n        }\n        return d;\n      })\n    }));\n  };\n  #setPreloadRouteMatch = (id, updater) => {\n    invariant(this.state.preloadMatches[id], 'Match not found');\n    this.__store.setState(prev => ({\n      ...prev,\n      preloadMatches: {\n        ...prev.preloadMatches,\n        [id]: updater(prev.preloadMatches[id])\n      }\n    }));\n  };\n  setRouteMatch = (id, updater) => {\n    if (this.state.matches.find(d => d.id === id)) {\n      return this.#setResolvedRouteMatch(id, updater);\n    }\n    if (this.state.pendingMatches.find(d => d.id === id)) {\n      return this.#setPendingRouteMatch(id, updater);\n    }\n    if (this.state.preloadMatches[id]) {\n      return this.#setPreloadRouteMatch(id, updater);\n    }\n  };\n}\n\n// Detect if we're in the DOM\nconst isServer = typeof window === 'undefined' || !window.document.createElement;\nfunction getInitialRouterState() {\n  return {\n    status: 'idle',\n    resolvedLocation: null,\n    location: null,\n    matches: [],\n    pendingMatches: [],\n    preloadMatches: {},\n    lastUpdated: Date.now()\n  };\n}\nfunction isCtrlEvent(e) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);\n}\nfunction redirect(opts) {\n  opts.isRedirect = true;\n  return opts;\n}\nfunction isRedirect(obj) {\n  return !!obj?.isRedirect;\n}\nclass SearchParamError extends Error {}\nclass PathParamError extends Error {}\nfunction escapeJSON(jsonString) {\n  return jsonString.replace(/\\\\/g, '\\\\\\\\') // Escape backslashes\n  .replace(/'/g, \"\\\\'\") // Escape single quotes\n  .replace(/\"/g, '\\\\\"'); // Escape double quotes\n}\n\nexport { Block, ErrorComponent, Link, MatchRoute, Navigate, Outlet, PathParamError, RootRoute, Route, Router, RouterContext, RouterProvider, SearchParamError, cleanPath, componentTypes, createBrowserHistory, createHashHistory, createMemoryHistory, decode, defaultParseSearch, defaultStringifySearch, encode, functionalUpdate, interpolatePath, isPlainObject, isRedirect, joinPaths, last, lazy, matchByPath, matchIdsContext, matchPathname, parsePathname, parseSearchWith, partialDeepEqual, pick, redirect, replaceEqualDeep, resolvePath, rootRouteId, routerContext, shallow, stringifySearchWith, trimPath, trimPathLeft, trimPathRight, useBlocker, useDehydrate, useHydrate, useInjectHtml, useLinkProps, useLoader, useMatch, useMatchRoute, useMatches, useNavigate, useParams, useRouter, useRouterState, useSearch };\n//# sourceMappingURL=index.js.map\n","import React from 'react'\n\nconst getItem = (key: string): unknown => {\n  try {\n    const itemValue = localStorage.getItem(key)\n    if (typeof itemValue === 'string') {\n      return JSON.parse(itemValue)\n    }\n    return undefined\n  } catch {\n    return undefined\n  }\n}\n\nexport default function useLocalStorage<T>(\n  key: string,\n  defaultValue: T | undefined,\n): [T | undefined, (newVal: T | ((prevVal: T) => T)) => void] {\n  const [value, setValue] = React.useState<T>()\n\n  React.useEffect(() => {\n    const initialValue = getItem(key) as T | undefined\n\n    if (typeof initialValue === 'undefined' || initialValue === null) {\n      setValue(\n        typeof defaultValue === 'function' ? defaultValue() : defaultValue,\n      )\n    } else {\n      setValue(initialValue)\n    }\n  }, [defaultValue, key])\n\n  const setter = React.useCallback(\n    (updater: any) => {\n      setValue((old) => {\n        let newVal = updater\n\n        if (typeof updater == 'function') {\n          newVal = updater(old)\n        }\n        try {\n          localStorage.setItem(key, JSON.stringify(newVal))\n        } catch {}\n\n        return newVal\n      })\n    },\n    [key],\n  )\n\n  return [value, setter]\n}\n","import React from 'react'\n\nexport const defaultTheme = {\n  background: '#0b1521',\n  backgroundAlt: '#132337',\n  foreground: 'white',\n  gray: '#3f4e60',\n  grayAlt: '#222e3e',\n  inputBackgroundColor: '#fff',\n  inputTextColor: '#000',\n  success: '#00ab52',\n  danger: '#ff0085',\n  active: '#006bff',\n  warning: '#ffb200',\n} as const\n\nexport type Theme = typeof defaultTheme\ninterface ProviderProps {\n  theme: Theme\n  children?: React.ReactNode\n}\n\nconst ThemeContext = React.createContext(defaultTheme)\n\nexport function ThemeProvider({ theme, ...rest }: ProviderProps) {\n  return <ThemeContext.Provider value={theme} {...rest} />\n}\n\nexport function useTheme() {\n  return React.useContext(ThemeContext)\n}\n","import React from 'react'\n\nexport default function useMediaQuery(query: string): boolean | undefined {\n  // Keep track of the preference in state, start with the current match\n  const [isMatch, setIsMatch] = React.useState(() => {\n    if (typeof window !== 'undefined') {\n      return window.matchMedia && window.matchMedia(query).matches\n    }\n    return\n  })\n\n  // Watch for changes\n  React.useEffect(() => {\n    if (typeof window !== 'undefined') {\n      if (!window.matchMedia) {\n        return\n      }\n\n      // Create a matcher\n      const matcher = window.matchMedia(query)\n\n      // Create our handler\n      const onChange = ({ matches }: { matches: boolean }) =>\n        setIsMatch(matches)\n\n      // Listen for changes\n      matcher.addListener(onChange)\n\n      return () => {\n        // Stop listening for changes\n        matcher.removeListener(onChange)\n      }\n    }\n\n    return\n  }, [isMatch, query, setIsMatch])\n\n  return isMatch\n}\n","import React from 'react'\nimport { AnyRootRoute, AnyRoute, AnyRouteMatch } from '@tanstack/router'\n\nimport { Theme, useTheme } from './theme'\nimport useMediaQuery from './useMediaQuery'\n\nexport const isServer = typeof window === 'undefined'\n\ntype StyledComponent<T> = T extends 'button'\n  ? React.DetailedHTMLProps<\n      React.ButtonHTMLAttributes<HTMLButtonElement>,\n      HTMLButtonElement\n    >\n  : T extends 'input'\n  ? React.DetailedHTMLProps<\n      React.InputHTMLAttributes<HTMLInputElement>,\n      HTMLInputElement\n    >\n  : T extends 'select'\n  ? React.DetailedHTMLProps<\n      React.SelectHTMLAttributes<HTMLSelectElement>,\n      HTMLSelectElement\n    >\n  : T extends keyof HTMLElementTagNameMap\n  ? React.HTMLAttributes<HTMLElementTagNameMap[T]>\n  : never\n\nexport function getStatusColor(match: AnyRouteMatch, theme: Theme) {\n  return match.status === 'pending'\n    ? theme.active\n    : match.status === 'error'\n    ? theme.danger\n    : match.status === 'success'\n    ? theme.success\n    : theme.gray\n}\n\nexport function getRouteStatusColor(\n  matches: AnyRouteMatch[],\n  route: AnyRoute | AnyRootRoute,\n  theme: Theme,\n) {\n  const found = matches.find((d) => d.routeId === route.id)\n\n  return found\n    ? found.status === 'pending'\n      ? theme.active\n      : found.status === 'error'\n      ? theme.danger\n      : found.status === 'success'\n      ? theme.success\n      : theme.gray\n    : theme.gray\n}\n\ntype Styles =\n  | React.CSSProperties\n  | ((props: Record<string, any>, theme: Theme) => React.CSSProperties)\n\nexport function styled<T extends keyof HTMLElementTagNameMap>(\n  type: T,\n  newStyles: Styles,\n  queries: Record<string, Styles> = {},\n) {\n  return React.forwardRef<HTMLElementTagNameMap[T], StyledComponent<T>>(\n    ({ style, ...rest }, ref) => {\n      const theme = useTheme()\n\n      const mediaStyles = Object.entries(queries).reduce(\n        (current, [key, value]) => {\n          // eslint-disable-next-line react-hooks/rules-of-hooks\n          return useMediaQuery(key)\n            ? {\n                ...current,\n                ...(typeof value === 'function' ? value(rest, theme) : value),\n              }\n            : current\n        },\n        {},\n      )\n\n      return React.createElement(type, {\n        ...rest,\n        style: {\n          ...(typeof newStyles === 'function'\n            ? newStyles(rest, theme)\n            : newStyles),\n          ...style,\n          ...mediaStyles,\n        },\n        ref,\n      })\n    },\n  )\n}\n\nexport function useIsMounted() {\n  const mountedRef = React.useRef(false)\n  const isMounted = React.useCallback(() => mountedRef.current, [])\n\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {\n    mountedRef.current = true\n    return () => {\n      mountedRef.current = false\n    }\n  }, [])\n\n  return isMounted\n}\n\n/**\n * Displays a string regardless the type of the data\n * @param {unknown} value Value to be stringified\n */\nexport const displayValue = (value: unknown) => {\n  const name = Object.getOwnPropertyNames(Object(value))\n  const newValue = typeof value === 'bigint' ? `${value.toString()}n` : value\n\n  return JSON.stringify(newValue, name)\n}\n\n/**\n * This hook is a safe useState version which schedules state updates in microtasks\n * to prevent updating a component state while React is rendering different components\n * or when the component is not mounted anymore.\n */\nexport function useSafeState<T>(initialState: T): [T, (value: T) => void] {\n  const isMounted = useIsMounted()\n  const [state, setState] = React.useState(initialState)\n\n  const safeSetState = React.useCallback(\n    (value: T) => {\n      scheduleMicrotask(() => {\n        if (isMounted()) {\n          setState(value)\n        }\n      })\n    },\n    [isMounted],\n  )\n\n  return [state, safeSetState]\n}\n\n/**\n * Schedules a microtask.\n * This can be useful to schedule state updates after rendering.\n */\nfunction scheduleMicrotask(callback: () => void) {\n  Promise.resolve()\n    .then(callback)\n    .catch((error) =>\n      setTimeout(() => {\n        throw error\n      }),\n    )\n}\n\nexport function multiSortBy<T>(\n  arr: T[],\n  accessors: ((item: T) => any)[] = [(d) => d],\n): T[] {\n  return arr\n    .map((d, i) => [d, i] as const)\n    .sort(([a, ai], [b, bi]) => {\n      for (const accessor of accessors) {\n        const ao = accessor(a)\n        const bo = accessor(b)\n\n        if (typeof ao === 'undefined') {\n          if (typeof bo === 'undefined') {\n            continue\n          }\n          return 1\n        }\n\n        if (ao === bo) {\n          continue\n        }\n\n        return ao > bo ? 1 : -1\n      }\n\n      return ai - bi\n    })\n    .map(([d]) => d)\n}\n","import { styled } from './utils'\n\nexport const Panel = styled(\n  'div',\n  (_props, theme) => ({\n    fontSize: 'clamp(12px, 1.5vw, 14px)',\n    fontFamily: `sans-serif`,\n    display: 'flex',\n    backgroundColor: theme.background,\n    color: theme.foreground,\n  }),\n  {\n    '(max-width: 700px)': {\n      flexDirection: 'column',\n    },\n    '(max-width: 600px)': {\n      fontSize: '.9em',\n      // flexDirection: 'column',\n    },\n  },\n)\n\nexport const ActivePanel = styled(\n  'div',\n  () => ({\n    flex: '1 1 500px',\n    display: 'flex',\n    flexDirection: 'column',\n    overflow: 'auto',\n    height: '100%',\n  }),\n  {\n    '(max-width: 700px)': (_props, theme) => ({\n      borderTop: `2px solid ${theme.gray}`,\n    }),\n  },\n)\n\nexport const Button = styled('button', (props, theme) => ({\n  appearance: 'none',\n  fontSize: '.9em',\n  fontWeight: 'bold',\n  background: theme.gray,\n  border: '0',\n  borderRadius: '.3em',\n  color: 'white',\n  padding: '.5em',\n  opacity: props.disabled ? '.5' : undefined,\n  cursor: 'pointer',\n}))\n\n// export const QueryKeys = styled('span', {\n//   display: 'inline-block',\n//   fontSize: '0.9em',\n// })\n\n// export const QueryKey = styled('span', {\n//   display: 'inline-flex',\n//   alignItems: 'center',\n//   padding: '.2em .4em',\n//   fontWeight: 'bold',\n//   textShadow: '0 0 10px black',\n//   borderRadius: '.2em',\n// })\n\nexport const Code = styled('code', {\n  fontSize: '.9em',\n})\n\nexport const Input = styled('input', (_props, theme) => ({\n  backgroundColor: theme.inputBackgroundColor,\n  border: 0,\n  borderRadius: '.2em',\n  color: theme.inputTextColor,\n  fontSize: '.9em',\n  lineHeight: `1.3`,\n  padding: '.3em .4em',\n}))\n\nexport const Select = styled(\n  'select',\n  (_props, theme) => ({\n    display: `inline-block`,\n    fontSize: `.9em`,\n    fontFamily: `sans-serif`,\n    fontWeight: 'normal',\n    lineHeight: `1.3`,\n    padding: `.3em 1.5em .3em .5em`,\n    height: 'auto',\n    border: 0,\n    borderRadius: `.2em`,\n    appearance: `none`,\n    WebkitAppearance: 'none',\n    backgroundColor: theme.inputBackgroundColor,\n    backgroundImage: `url(\"data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100' height='100' fill='%23444444'><polygon points='0,25 100,25 50,75'/></svg>\")`,\n    backgroundRepeat: `no-repeat`,\n    backgroundPosition: `right .55em center`,\n    backgroundSize: `.65em auto, 100%`,\n    color: theme.inputTextColor,\n  }),\n  {\n    '(max-width: 500px)': {\n      display: 'none',\n    },\n  },\n)\n","import * as React from 'react'\n\nimport { displayValue, styled } from './utils'\n\nexport const Entry = styled('div', {\n  fontFamily: 'Menlo, monospace',\n  fontSize: '.7rem',\n  lineHeight: '1.7',\n  outline: 'none',\n  wordBreak: 'break-word',\n})\n\nexport const Label = styled('span', {\n  color: 'white',\n})\n\nexport const LabelButton = styled('button', {\n  cursor: 'pointer',\n  color: 'white',\n})\n\nexport const ExpandButton = styled('button', {\n  cursor: 'pointer',\n  color: 'inherit',\n  font: 'inherit',\n  outline: 'inherit',\n  background: 'transparent',\n  border: 'none',\n  padding: 0,\n})\n\nexport const Value = styled('span', (_props, theme) => ({\n  color: theme.danger,\n}))\n\nexport const SubEntries = styled('div', {\n  marginLeft: '.1em',\n  paddingLeft: '1em',\n  borderLeft: '2px solid rgba(0,0,0,.15)',\n})\n\nexport const Info = styled('span', {\n  color: 'grey',\n  fontSize: '.7em',\n})\n\ntype ExpanderProps = {\n  expanded: boolean\n  style?: React.CSSProperties\n}\n\nexport const Expander = ({ expanded, style = {} }: ExpanderProps) => (\n  <span\n    style={{\n      display: 'inline-block',\n      transition: 'all .1s ease',\n      transform: `rotate(${expanded ? 90 : 0}deg) ${style.transform || ''}`,\n      ...style,\n    }}\n  >\n    ▶\n  </span>\n)\n\ntype Entry = {\n  label: string\n}\n\ntype RendererProps = {\n  handleEntry: HandleEntryFn\n  label?: React.ReactNode\n  value: unknown\n  subEntries: Entry[]\n  subEntryPages: Entry[][]\n  type: string\n  expanded: boolean\n  toggleExpanded: () => void\n  pageSize: number\n  renderer?: Renderer\n  filterSubEntries?: (subEntries: Property[]) => Property[]\n}\n\n/**\n * Chunk elements in the array by size\n *\n * when the array cannot be chunked evenly by size, the last chunk will be\n * filled with the remaining elements\n *\n * @example\n * chunkArray(['a','b', 'c', 'd', 'e'], 2) // returns [['a','b'], ['c', 'd'], ['e']]\n */\nexport function chunkArray<T>(array: T[], size: number): T[][] {\n  if (size < 1) return []\n  let i = 0\n  const result: T[][] = []\n  while (i < array.length) {\n    result.push(array.slice(i, i + size))\n    i = i + size\n  }\n  return result\n}\n\ntype Renderer = (props: RendererProps) => JSX.Element\n\nexport const DefaultRenderer: Renderer = ({\n  handleEntry,\n  label,\n  value,\n  subEntries = [],\n  subEntryPages = [],\n  type,\n  expanded = false,\n  toggleExpanded,\n  pageSize,\n  renderer,\n}) => {\n  const [expandedPages, setExpandedPages] = React.useState<number[]>([])\n  const [valueSnapshot, setValueSnapshot] = React.useState(undefined)\n\n  const refreshValueSnapshot = () => {\n    setValueSnapshot((value as () => any)())\n  }\n\n  return (\n    <Entry>\n      {subEntryPages.length ? (\n        <>\n          <ExpandButton onClick={() => toggleExpanded()}>\n            <Expander expanded={expanded} /> {label}{' '}\n            <Info>\n              {String(type).toLowerCase() === 'iterable' ? '(Iterable) ' : ''}\n              {subEntries.length} {subEntries.length > 1 ? `items` : `item`}\n            </Info>\n          </ExpandButton>\n          {expanded ? (\n            subEntryPages.length === 1 ? (\n              <SubEntries>\n                {subEntries.map((entry, index) => handleEntry(entry))}\n              </SubEntries>\n            ) : (\n              <SubEntries>\n                {subEntryPages.map((entries, index) => (\n                  <div key={index}>\n                    <Entry>\n                      <LabelButton\n                        onClick={() =>\n                          setExpandedPages((old) =>\n                            old.includes(index)\n                              ? old.filter((d) => d !== index)\n                              : [...old, index],\n                          )\n                        }\n                      >\n                        <Expander expanded={expanded} /> [{index * pageSize} ...{' '}\n                        {index * pageSize + pageSize - 1}]\n                      </LabelButton>\n                      {expandedPages.includes(index) ? (\n                        <SubEntries>\n                          {entries.map((entry) => handleEntry(entry))}\n                        </SubEntries>\n                      ) : null}\n                    </Entry>\n                  </div>\n                ))}\n              </SubEntries>\n            )\n          ) : null}\n        </>\n      ) : type === 'function' ? (\n        <>\n          <Explorer\n            renderer={renderer}\n            label={\n              <button\n                onClick={refreshValueSnapshot}\n                style={{\n                  appearance: 'none',\n                  border: '0',\n                  background: 'transparent',\n                }}\n              >\n                <Label>{label}</Label> 🔄{' '}\n              </button>\n            }\n            value={valueSnapshot}\n            defaultExpanded={{}}\n          />\n        </>\n      ) : (\n        <>\n          <Label>{label}:</Label> <Value>{displayValue(value)}</Value>\n        </>\n      )}\n    </Entry>\n  )\n}\n\ntype HandleEntryFn = (entry: Entry) => JSX.Element\n\ntype ExplorerProps = Partial<RendererProps> & {\n  renderer?: Renderer\n  defaultExpanded?: true | Record<string, boolean>\n}\n\ntype Property = {\n  defaultExpanded?: boolean | Record<string, boolean>\n  label: string\n  value: unknown\n}\n\nfunction isIterable(x: any): x is Iterable<unknown> {\n  return Symbol.iterator in x\n}\n\nexport default function Explorer({\n  value,\n  defaultExpanded,\n  renderer = DefaultRenderer,\n  pageSize = 100,\n  filterSubEntries,\n  ...rest\n}: ExplorerProps) {\n  const [expanded, setExpanded] = React.useState(Boolean(defaultExpanded))\n  const toggleExpanded = React.useCallback(() => setExpanded((old) => !old), [])\n\n  let type: string = typeof value\n  let subEntries: Property[] = []\n\n  const makeProperty = (sub: { label: string; value: unknown }): Property => {\n    const subDefaultExpanded =\n      defaultExpanded === true\n        ? { [sub.label]: true }\n        : defaultExpanded?.[sub.label]\n    return {\n      ...sub,\n      defaultExpanded: subDefaultExpanded,\n    }\n  }\n\n  if (Array.isArray(value)) {\n    type = 'array'\n    subEntries = value.map((d, i) =>\n      makeProperty({\n        label: i.toString(),\n        value: d,\n      }),\n    )\n  } else if (\n    value !== null &&\n    typeof value === 'object' &&\n    isIterable(value) &&\n    typeof value[Symbol.iterator] === 'function'\n  ) {\n    type = 'Iterable'\n    subEntries = Array.from(value, (val, i) =>\n      makeProperty({\n        label: i.toString(),\n        value: val,\n      }),\n    )\n  } else if (typeof value === 'object' && value !== null) {\n    type = 'object'\n    subEntries = Object.entries(value).map(([key, val]) =>\n      makeProperty({\n        label: key,\n        value: val,\n      }),\n    )\n  }\n\n  subEntries = filterSubEntries ? filterSubEntries(subEntries) : subEntries\n\n  const subEntryPages = chunkArray(subEntries, pageSize)\n\n  return renderer({\n    handleEntry: (entry) => (\n      <Explorer\n        key={entry.label}\n        value={value}\n        renderer={renderer}\n        filterSubEntries={filterSubEntries}\n        {...rest}\n        {...entry}\n      />\n    ),\n    type,\n    subEntries,\n    subEntryPages,\n    value,\n    expanded,\n    toggleExpanded,\n    pageSize,\n    ...rest,\n  })\n}\n","import React from 'react'\nimport {\n  last,\n  routerContext,\n  invariant,\n  AnyRouter,\n  useStore,\n  Route,\n  AnyRoute,\n  AnyRootRoute,\n  RouteMatch,\n  trimPath,\n  useRouterState,\n} from '@tanstack/router'\n\nimport useLocalStorage from './useLocalStorage'\nimport {\n  getRouteStatusColor,\n  getStatusColor,\n  useIsMounted,\n  useSafeState,\n} from './utils'\nimport { Panel, Button, Code, ActivePanel } from './styledComponents'\nimport { ThemeProvider, defaultTheme as theme } from './theme'\n// import { getQueryStatusLabel, getQueryStatusColor } from './utils'\nimport Explorer from './Explorer'\n\nexport type PartialKeys<T, K extends keyof T> = Omit<T, K> & Partial<Pick<T, K>>\n\ninterface DevtoolsOptions {\n  /**\n   * Set this true if you want the dev tools to default to being open\n   */\n  initialIsOpen?: boolean\n  /**\n   * Use this to add props to the panel. For example, you can add className, style (merge and override default style), etc.\n   */\n  panelProps?: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLDivElement>,\n    HTMLDivElement\n  >\n  /**\n   * Use this to add props to the close button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  closeButtonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n  /**\n   * Use this to add props to the toggle button. For example, you can add className, style (merge and override default style), onClick (extend default handler), etc.\n   */\n  toggleButtonProps?: React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  >\n  /**\n   * The position of the TanStack Router logo to open and close the devtools panel.\n   * Defaults to 'bottom-left'.\n   */\n  position?: 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\n  /**\n   * Use this to render the devtools inside a different type of container element for a11y purposes.\n   * Any string which corresponds to a valid intrinsic JSX element is allowed.\n   * Defaults to 'footer'.\n   */\n  containerElement?: string | any\n  /**\n   * A boolean variable indicating if the \"lite\" version of the library is being used\n   */\n  router?: AnyRouter\n}\n\ninterface DevtoolsPanelOptions {\n  /**\n   * The standard React style object used to style a component with inline styles\n   */\n  style?: React.CSSProperties\n  /**\n   * The standard React className property used to style a component with classes\n   */\n  className?: string\n  /**\n   * A boolean variable indicating whether the panel is open or closed\n   */\n  isOpen?: boolean\n  /**\n   * A function that toggles the open and close state of the panel\n   */\n  setIsOpen: (isOpen: boolean) => void\n  /**\n   * Handles the opening and closing the devtools panel\n   */\n  handleDragStart: (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => void\n  /**\n   * A boolean variable indicating if the \"lite\" version of the library is being used\n   */\n  router?: AnyRouter\n}\n\nconst isServer = typeof window === 'undefined'\n\nfunction Logo(props: React.HTMLProps<HTMLDivElement>) {\n  return (\n    <div\n      {...props}\n      style={{\n        ...(props.style ?? {}),\n        display: 'flex',\n        alignItems: 'center',\n        flexDirection: 'column',\n        fontSize: '0.8rem',\n        fontWeight: 'bolder',\n        lineHeight: '1',\n      }}\n    >\n      <div\n        style={{\n          letterSpacing: '-0.05rem',\n        }}\n      >\n        TANSTACK\n      </div>\n      <div\n        style={{\n          backgroundImage:\n            'linear-gradient(to right, var(--tw-gradient-stops))',\n          // @ts-ignore\n          '--tw-gradient-from': '#84cc16',\n          '--tw-gradient-stops':\n            'var(--tw-gradient-from), var(--tw-gradient-to)',\n          '--tw-gradient-to': '#10b981',\n          WebkitBackgroundClip: 'text',\n          color: 'transparent',\n          letterSpacing: '0.1rem',\n          marginRight: '-0.2rem',\n        }}\n      >\n        ROUTER\n      </div>\n    </div>\n  )\n}\n\nexport function TanStackRouterDevtools({\n  initialIsOpen,\n  panelProps = {},\n  closeButtonProps = {},\n  toggleButtonProps = {},\n  position = 'bottom-left',\n  containerElement: Container = 'footer',\n  router,\n}: DevtoolsOptions): React.ReactElement | null {\n  const rootRef = React.useRef<HTMLDivElement>(null)\n  const panelRef = React.useRef<HTMLDivElement>(null)\n  const [isOpen, setIsOpen] = useLocalStorage(\n    'tanstackRouterDevtoolsOpen',\n    initialIsOpen,\n  )\n  const [devtoolsHeight, setDevtoolsHeight] = useLocalStorage<number | null>(\n    'tanstackRouterDevtoolsHeight',\n    null,\n  )\n  const [isResolvedOpen, setIsResolvedOpen] = useSafeState(false)\n  const [isResizing, setIsResizing] = useSafeState(false)\n  const isMounted = useIsMounted()\n\n  const handleDragStart = (\n    panelElement: HTMLDivElement | null,\n    startEvent: React.MouseEvent<HTMLDivElement, MouseEvent>,\n  ) => {\n    if (startEvent.button !== 0) return // Only allow left click for drag\n\n    setIsResizing(true)\n\n    const dragInfo = {\n      originalHeight: panelElement?.getBoundingClientRect().height ?? 0,\n      pageY: startEvent.pageY,\n    }\n\n    const run = (moveEvent: MouseEvent) => {\n      const delta = dragInfo.pageY - moveEvent.pageY\n      const newHeight = dragInfo?.originalHeight + delta\n\n      setDevtoolsHeight(newHeight)\n\n      if (newHeight < 70) {\n        setIsOpen(false)\n      } else {\n        setIsOpen(true)\n      }\n    }\n\n    const unsub = () => {\n      setIsResizing(false)\n      document.removeEventListener('mousemove', run)\n      document.removeEventListener('mouseUp', unsub)\n    }\n\n    document.addEventListener('mousemove', run)\n    document.addEventListener('mouseup', unsub)\n  }\n\n  React.useEffect(() => {\n    setIsResolvedOpen(isOpen ?? false)\n  }, [isOpen, isResolvedOpen, setIsResolvedOpen])\n\n  // Toggle panel visibility before/after transition (depending on direction).\n  // Prevents focusing in a closed panel.\n  React.useEffect(() => {\n    const ref = panelRef.current\n\n    if (ref) {\n      const handlePanelTransitionStart = () => {\n        if (ref && isResolvedOpen) {\n          ref.style.visibility = 'visible'\n        }\n      }\n\n      const handlePanelTransitionEnd = () => {\n        if (ref && !isResolvedOpen) {\n          ref.style.visibility = 'hidden'\n        }\n      }\n\n      ref.addEventListener('transitionstart', handlePanelTransitionStart)\n      ref.addEventListener('transitionend', handlePanelTransitionEnd)\n\n      return () => {\n        ref.removeEventListener('transitionstart', handlePanelTransitionStart)\n        ref.removeEventListener('transitionend', handlePanelTransitionEnd)\n      }\n    }\n\n    return\n  }, [isResolvedOpen])\n\n  React[isServer ? 'useEffect' : 'useLayoutEffect'](() => {\n    if (isResolvedOpen) {\n      const previousValue = rootRef.current?.parentElement?.style.paddingBottom\n\n      const run = () => {\n        const containerHeight = panelRef.current?.getBoundingClientRect().height\n        if (rootRef.current?.parentElement) {\n          rootRef.current.parentElement.style.paddingBottom = `${containerHeight}px`\n        }\n      }\n\n      run()\n\n      if (typeof window !== 'undefined') {\n        window.addEventListener('resize', run)\n\n        return () => {\n          window.removeEventListener('resize', run)\n          if (\n            rootRef.current?.parentElement &&\n            typeof previousValue === 'string'\n          ) {\n            rootRef.current.parentElement.style.paddingBottom = previousValue\n          }\n        }\n      }\n    }\n    return\n  }, [isResolvedOpen])\n\n  const { style: panelStyle = {}, ...otherPanelProps } = panelProps\n\n  const {\n    style: closeButtonStyle = {},\n    onClick: onCloseClick,\n    ...otherCloseButtonProps\n  } = closeButtonProps\n\n  const {\n    style: toggleButtonStyle = {},\n    onClick: onToggleClick,\n    ...otherToggleButtonProps\n  } = toggleButtonProps\n\n  // Do not render on the server\n  if (!isMounted()) return null\n\n  return (\n    <Container ref={rootRef} className=\"TanStackRouterDevtools\">\n      <ThemeProvider theme={theme}>\n        <TanStackRouterDevtoolsPanel\n          ref={panelRef as any}\n          {...otherPanelProps}\n          router={router}\n          style={{\n            position: 'fixed',\n            bottom: '0',\n            right: '0',\n            zIndex: 99999,\n            width: '100%',\n            height: devtoolsHeight ?? 500,\n            maxHeight: '90%',\n            boxShadow: '0 0 20px rgba(0,0,0,.3)',\n            borderTop: `1px solid ${theme.gray}`,\n            transformOrigin: 'top',\n            // visibility will be toggled after transitions, but set initial state here\n            visibility: isOpen ? 'visible' : 'hidden',\n            ...panelStyle,\n            ...(isResizing\n              ? {\n                  transition: `none`,\n                }\n              : { transition: `all .2s ease` }),\n            ...(isResolvedOpen\n              ? {\n                  opacity: 1,\n                  pointerEvents: 'all',\n                  transform: `translateY(0) scale(1)`,\n                }\n              : {\n                  opacity: 0,\n                  pointerEvents: 'none',\n                  transform: `translateY(15px) scale(1.02)`,\n                }),\n          }}\n          isOpen={isResolvedOpen}\n          setIsOpen={setIsOpen}\n          handleDragStart={(e) => handleDragStart(panelRef.current, e)}\n        />\n        {isResolvedOpen ? (\n          <Button\n            type=\"button\"\n            aria-label=\"Close TanStack Router Devtools\"\n            {...(otherCloseButtonProps as any)}\n            onClick={(e) => {\n              setIsOpen(false)\n              onCloseClick && onCloseClick(e)\n            }}\n            style={{\n              position: 'fixed',\n              zIndex: 99999,\n              margin: '.5em',\n              bottom: 0,\n              ...(position === 'top-right'\n                ? {\n                    right: '0',\n                  }\n                : position === 'top-left'\n                ? {\n                    left: '0',\n                  }\n                : position === 'bottom-right'\n                ? {\n                    right: '0',\n                  }\n                : {\n                    left: '0',\n                  }),\n              ...closeButtonStyle,\n            }}\n          >\n            Close\n          </Button>\n        ) : null}\n      </ThemeProvider>\n      {!isResolvedOpen ? (\n        <button\n          type=\"button\"\n          {...otherToggleButtonProps}\n          aria-label=\"Open TanStack Router Devtools\"\n          onClick={(e) => {\n            setIsOpen(true)\n            onToggleClick && onToggleClick(e)\n          }}\n          style={{\n            appearance: 'none',\n            background: 'none',\n            border: 0,\n            padding: 0,\n            position: 'fixed',\n            zIndex: 99999,\n            display: 'inline-flex',\n            fontSize: '1.5em',\n            margin: '.5em',\n            cursor: 'pointer',\n            width: 'fit-content',\n            ...(position === 'top-right'\n              ? {\n                  top: '0',\n                  right: '0',\n                }\n              : position === 'top-left'\n              ? {\n                  top: '0',\n                  left: '0',\n                }\n              : position === 'bottom-right'\n              ? {\n                  bottom: '0',\n                  right: '0',\n                }\n              : {\n                  bottom: '0',\n                  left: '0',\n                }),\n            ...toggleButtonStyle,\n          }}\n        >\n          <Logo aria-hidden />\n        </button>\n      ) : null}\n    </Container>\n  )\n}\n\nfunction RouteComp({\n  route,\n  isRoot,\n  matches,\n  activeRouteId,\n  setActiveRouteId,\n}: {\n  route: AnyRootRoute | AnyRoute\n  isRoot?: boolean\n  matches: RouteMatch[]\n  activeRouteId: string | undefined\n  setActiveRouteId: (id: string) => void\n}) {\n  const isActive = matches.find((d) => d.routeId === route.id)\n\n  return (\n    <div>\n      <div\n        role=\"button\"\n        aria-label={`Open match details for ${route.id}`}\n        onClick={() => {\n          if (isActive)\n            setActiveRouteId(activeRouteId === route.id ? '' : route.id)\n        }}\n        style={{\n          display: 'flex',\n          borderBottom: `solid 1px ${theme.grayAlt}`,\n          cursor: isActive ? 'pointer' : 'default',\n          alignItems: 'center',\n          background:\n            route.id === activeRouteId ? 'rgba(255,255,255,.1)' : undefined,\n        }}\n      >\n        {isRoot ? null : (\n          <div\n            style={{\n              flex: '0 0 auto',\n              width: '.7rem',\n              height: '.7rem',\n              margin: '.5rem .75rem',\n              alignItems: 'center',\n              justifyContent: 'center',\n              fontWeight: 'bold',\n              borderRadius: '100%',\n              transition: 'all .2s ease-out',\n              background: getRouteStatusColor(matches, route, theme),\n              opacity: isActive ? 1 : 0.3,\n            }}\n          />\n        )}\n        <Code\n          style={{\n            padding: '.25rem 0',\n            paddingLeft: isRoot ? '.5rem' : 0,\n            opacity: isActive ? 1 : 0.7,\n          }}\n        >{`${route.path || trimPath(route.id)}`}</Code>\n      </div>\n      {(route.children as Route[])?.length ? (\n        <div\n          style={{\n            marginLeft: isRoot ? 0 : '1rem',\n            borderLeft: isRoot ? '' : `solid 1px ${theme.grayAlt}`,\n          }}\n        >\n          {[...(route.children as Route[])]\n            .sort((a, b) => {\n              return a.rank - b.rank\n            })\n            .map((r) => (\n              <RouteComp\n                key={r.id}\n                route={r}\n                matches={matches}\n                activeRouteId={activeRouteId}\n                setActiveRouteId={setActiveRouteId}\n              />\n            ))}\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport const TanStackRouterDevtoolsPanel = React.forwardRef<\n  HTMLDivElement,\n  DevtoolsPanelOptions\n>(function TanStackRouterDevtoolsPanel(props, ref): React.ReactElement {\n  const {\n    isOpen = true,\n    setIsOpen,\n    handleDragStart,\n    router: userRouter,\n    ...panelProps\n  } = props\n\n  const routerContextValue = React.useContext(routerContext)\n  const router = userRouter ?? routerContextValue\n  const routerState = useRouterState()\n\n  invariant(\n    router,\n    'No router was found for the TanStack Router Devtools. Please place the devtools in the <RouterProvider> component tree or pass the router instance to the devtools manually.',\n  )\n\n  useStore(router.__store)\n\n  const [showMatches, setShowMatches] = useLocalStorage(\n    'tanstackRouterDevtoolsShowMatches',\n    true,\n  )\n\n  const [activeRouteId, setActiveRouteId] = useLocalStorage(\n    'tanstackRouterDevtoolsActiveRouteId',\n    '',\n  )\n\n  const allMatches: RouteMatch[] = React.useMemo(\n    () => [...Object.values(routerState.matches)],\n    [routerState.matches],\n  )\n\n  const activeMatch = allMatches?.find((d) => d.routeId === activeRouteId)\n\n  const hasSearch = Object.keys(routerState.location.search || {}).length\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Panel ref={ref} className=\"TanStackRouterDevtoolsPanel\" {...panelProps}>\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `\n\n            .TanStackRouterDevtoolsPanel * {\n              scrollbar-color: ${theme.backgroundAlt} ${theme.gray};\n            }\n\n            .TanStackRouterDevtoolsPanel *::-webkit-scrollbar, .TanStackRouterDevtoolsPanel scrollbar {\n              width: 1em;\n              height: 1em;\n            }\n\n            .TanStackRouterDevtoolsPanel *::-webkit-scrollbar-track, .TanStackRouterDevtoolsPanel scrollbar-track {\n              background: ${theme.backgroundAlt};\n            }\n\n            .TanStackRouterDevtoolsPanel *::-webkit-scrollbar-thumb, .TanStackRouterDevtoolsPanel scrollbar-thumb {\n              background: ${theme.gray};\n              border-radius: .5em;\n              border: 3px solid ${theme.backgroundAlt};\n            }\n\n            .TanStackRouterDevtoolsPanel table {\n              width: 100%;\n            }\n\n            .TanStackRouterDevtoolsPanel table tr {\n              border-bottom: 2px dotted rgba(255, 255, 255, .2);\n            }\n\n            .TanStackRouterDevtoolsPanel table tr:last-child {\n              border-bottom: none\n            }\n\n            .TanStackRouterDevtoolsPanel table td {\n              padding: .25rem .5rem;\n              border-right: 2px dotted rgba(255, 255, 255, .05);\n            }\n\n            .TanStackRouterDevtoolsPanel table td:last-child {\n              border-right: none\n            }\n\n          `,\n          }}\n        />\n        <div\n          style={{\n            position: 'absolute',\n            left: 0,\n            top: 0,\n            width: '100%',\n            height: '4px',\n            marginBottom: '-4px',\n            cursor: 'row-resize',\n            zIndex: 100000,\n          }}\n          onMouseDown={handleDragStart}\n        ></div>\n        <div\n          style={{\n            flex: '1 1 500px',\n            minHeight: '40%',\n            maxHeight: '100%',\n            overflow: 'auto',\n            borderRight: `1px solid ${theme.grayAlt}`,\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <div\n            style={{\n              display: 'flex',\n              justifyContent: 'start',\n              gap: '1rem',\n              padding: '1rem',\n              alignItems: 'center',\n              background: theme.backgroundAlt,\n            }}\n          >\n            <Logo aria-hidden />\n            <div\n              style={{\n                fontSize: 'clamp(.8rem, 2vw, 1.3rem)',\n                fontWeight: 'bold',\n              }}\n            >\n              <span\n                style={{\n                  fontWeight: 100,\n                }}\n              >\n                Devtools\n              </span>\n            </div>\n          </div>\n          <div\n            style={{\n              overflowY: 'auto',\n              flex: '1',\n            }}\n          >\n            <div\n              style={{\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Router\"\n                value={router}\n                defaultExpanded={{ state: {} as any, context: {} as any }}\n                filterSubEntries={(subEntries) => {\n                  return subEntries.filter((d) => typeof d.value !== 'function')\n                }}\n              />\n            </div>\n          </div>\n        </div>\n        <div\n          style={{\n            flex: '1 1 500px',\n            minHeight: '40%',\n            maxHeight: '100%',\n            overflow: 'auto',\n            borderRight: `1px solid ${theme.grayAlt}`,\n            display: 'flex',\n            flexDirection: 'column',\n          }}\n        >\n          <div\n            style={{\n              padding: '.5em',\n              background: theme.backgroundAlt,\n              position: 'sticky',\n              top: 0,\n              zIndex: 1,\n              display: 'flex',\n              alignItems: 'center',\n              gap: '.5rem',\n            }}\n          >\n            <button\n              type=\"button\"\n              onClick={() => {\n                setShowMatches(false)\n              }}\n              disabled={!showMatches}\n              style={{\n                appearance: 'none',\n                opacity: showMatches ? 0.5 : 1,\n                border: 0,\n                background: 'transparent',\n                color: 'inherit',\n                cursor: 'pointer',\n              }}\n            >\n              Routes\n            </button>\n            /\n            <button\n              type=\"button\"\n              onClick={() => {\n                setShowMatches(true)\n              }}\n              disabled={showMatches}\n              style={{\n                appearance: 'none',\n                opacity: !showMatches ? 0.5 : 1,\n                border: 0,\n                background: 'transparent',\n                color: 'inherit',\n                cursor: 'pointer',\n              }}\n            >\n              Matches\n            </button>\n          </div>\n          {!showMatches ? (\n            <RouteComp\n              route={router.routeTree}\n              isRoot\n              matches={allMatches}\n              activeRouteId={activeRouteId}\n              setActiveRouteId={setActiveRouteId}\n            />\n          ) : (\n            <div>\n              {routerState.matches.map((match, i) => {\n                return (\n                  <div\n                    key={match.routeId || i}\n                    role=\"button\"\n                    aria-label={`Open match details for ${match.routeId}`}\n                    onClick={() =>\n                      setActiveRouteId(\n                        activeRouteId === match.routeId ? '' : match.routeId,\n                      )\n                    }\n                    style={{\n                      display: 'flex',\n                      borderBottom: `solid 1px ${theme.grayAlt}`,\n                      cursor: 'pointer',\n                      alignItems: 'center',\n                      background:\n                        match === activeMatch\n                          ? 'rgba(255,255,255,.1)'\n                          : undefined,\n                    }}\n                  >\n                    <div\n                      style={{\n                        flex: '0 0 auto',\n                        width: '1.3rem',\n                        height: '1.3rem',\n                        marginLeft: '.25rem',\n                        background: getStatusColor(match, theme),\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        fontWeight: 'bold',\n                        borderRadius: '.25rem',\n                        transition: 'all .2s ease-out',\n                      }}\n                    />\n\n                    <Code\n                      style={{\n                        padding: '.5em',\n                      }}\n                    >\n                      {`${match.id}`}\n                    </Code>\n                  </div>\n                )\n              })}\n            </div>\n          )}\n        </div>\n        {activeMatch ? (\n          <ActivePanel>\n            <div\n              style={{\n                padding: '.5em',\n                background: theme.backgroundAlt,\n                position: 'sticky',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n              }}\n            >\n              Match Details\n            </div>\n            <div>\n              <table>\n                <tbody>\n                  <tr>\n                    <td style={{ opacity: '.5' }}>ID</td>\n                    <td>\n                      <Code\n                        style={{\n                          lineHeight: '1.8em',\n                        }}\n                      >\n                        {JSON.stringify(activeMatch.id, null, 2)}\n                      </Code>\n                    </td>\n                  </tr>\n                  <tr>\n                    <td style={{ opacity: '.5' }}>Status</td>\n                    <td>{activeMatch.status}</td>\n                  </tr>\n                  {/* <tr>\n                    <td style={{ opacity: '.5' }}>Invalid</td>\n                    <td>{activeMatch.getIsInvalid().toString()}</td>\n                  </tr> */}\n                  <tr>\n                    <td style={{ opacity: '.5' }}>Last Updated</td>\n                    <td>\n                      {activeMatch.updatedAt\n                        ? new Date(\n                            activeMatch.updatedAt as number,\n                          ).toLocaleTimeString()\n                        : 'N/A'}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            {/* <div\n              style={{\n                background: theme.backgroundAlt,\n                padding: '.5em',\n                position: 'sticky',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n              }}\n            >\n              Actions\n            </div>\n            <div\n              style={{\n                padding: '0.5em',\n              }}\n            >\n              <Button\n                type=\"button\"\n                onClick={() => activeMatch.__store.setState(d => ({...d, status: 'pending'}))}\n                style={{\n                  background: theme.gray,\n                }}\n              >\n                Reload\n              </Button>\n            </div> */}\n            <div\n              style={{\n                background: theme.backgroundAlt,\n                padding: '.5em',\n                position: 'sticky',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n              }}\n            >\n              Explorer\n            </div>\n            <div\n              style={{\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                label=\"Match\"\n                value={activeMatch}\n                defaultExpanded={{}}\n              />\n            </div>\n          </ActivePanel>\n        ) : null}\n        {hasSearch ? (\n          <div\n            style={{\n              flex: '1 1 500px',\n              minHeight: '40%',\n              maxHeight: '100%',\n              overflow: 'auto',\n              borderRight: `1px solid ${theme.grayAlt}`,\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <div\n              style={{\n                padding: '.5em',\n                background: theme.backgroundAlt,\n                position: 'sticky',\n                top: 0,\n                bottom: 0,\n                zIndex: 1,\n              }}\n            >\n              Search Params\n            </div>\n            <div\n              style={{\n                padding: '.5em',\n              }}\n            >\n              <Explorer\n                value={routerState.location.search || {}}\n                defaultExpanded={Object.keys(\n                  (routerState.location.search as {}) || {},\n                ).reduce((obj: any, next) => {\n                  obj[next] = {}\n                  return obj\n                }, {})}\n              />\n            </div>\n          </div>\n        ) : null}\n      </Panel>\n    </ThemeProvider>\n  )\n})\n"],"names":["useSyncExternalStoreWithSelector","React","getItem","key","itemValue","localStorage","JSON","parse","undefined","useLocalStorage","defaultValue","value","setValue","useState","useEffect","initialValue","setter","useCallback","updater","old","newVal","setItem","stringify","defaultTheme","background","backgroundAlt","foreground","gray","grayAlt","inputBackgroundColor","inputTextColor","success","danger","active","warning","ThemeContext","createContext","ThemeProvider","theme","rest","useTheme","useContext","useMediaQuery","query","isMatch","setIsMatch","window","matchMedia","matches","matcher","onChange","addListener","removeListener","isServer","getStatusColor","match","status","getRouteStatusColor","route","found","find","d","routeId","id","styled","type","newStyles","queries","forwardRef","style","ref","mediaStyles","Object","entries","reduce","current","createElement","useIsMounted","mountedRef","useRef","isMounted","displayValue","name","getOwnPropertyNames","newValue","toString","useSafeState","initialState","state","setState","safeSetState","scheduleMicrotask","callback","Promise","resolve","then","catch","error","setTimeout","Panel","_props","fontSize","fontFamily","display","backgroundColor","color","flexDirection","ActivePanel","flex","overflow","height","borderTop","Button","props","appearance","fontWeight","border","borderRadius","padding","opacity","disabled","cursor","Code","Entry","lineHeight","outline","wordBreak","Label","LabelButton","ExpandButton","font","Value","SubEntries","marginLeft","paddingLeft","borderLeft","Info","Expander","expanded","transition","transform","chunkArray","array","size","i","result","length","push","slice","DefaultRenderer","handleEntry","label","subEntries","subEntryPages","toggleExpanded","pageSize","renderer","expandedPages","setExpandedPages","valueSnapshot","setValueSnapshot","refreshValueSnapshot","String","toLowerCase","map","entry","index","includes","filter","isIterable","x","Symbol","iterator","Explorer","defaultExpanded","filterSubEntries","setExpanded","Boolean","makeProperty","sub","subDefaultExpanded","Array","isArray","from","val","Logo","alignItems","letterSpacing","backgroundImage","WebkitBackgroundClip","marginRight","TanStackRouterDevtools","initialIsOpen","panelProps","closeButtonProps","toggleButtonProps","position","containerElement","Container","router","rootRef","panelRef","isOpen","setIsOpen","devtoolsHeight","setDevtoolsHeight","isResolvedOpen","setIsResolvedOpen","isResizing","setIsResizing","handleDragStart","panelElement","startEvent","button","dragInfo","originalHeight","getBoundingClientRect","pageY","run","moveEvent","delta","newHeight","unsub","document","removeEventListener","addEventListener","handlePanelTransitionStart","visibility","handlePanelTransitionEnd","previousValue","parentElement","paddingBottom","containerHeight","panelStyle","otherPanelProps","closeButtonStyle","onClick","onCloseClick","otherCloseButtonProps","toggleButtonStyle","onToggleClick","otherToggleButtonProps","bottom","right","zIndex","width","maxHeight","boxShadow","transformOrigin","pointerEvents","e","margin","left","top","RouteComp","isRoot","activeRouteId","setActiveRouteId","isActive","borderBottom","justifyContent","path","trimPath","children","sort","a","b","rank","r","TanStackRouterDevtoolsPanel","userRouter","routerContextValue","routerContext","routerState","useRouterState","invariant","useStore","__store","showMatches","setShowMatches","allMatches","useMemo","values","activeMatch","hasSearch","keys","location","search","__html","marginBottom","minHeight","borderRight","gap","overflowY","context","routeTree","updatedAt","Date","toLocaleTimeString","obj","next"],"mappings":"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"}