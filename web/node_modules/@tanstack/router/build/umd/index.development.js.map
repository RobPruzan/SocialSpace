{"version":3,"file":"index.development.js","sources":["../../../../node_modules/.pnpm/tiny-invariant@1.3.1/node_modules/tiny-invariant/dist/esm/tiny-invariant.js","../../../../node_modules/.pnpm/tiny-warning@1.0.3/node_modules/tiny-warning/dist/tiny-warning.esm.js","../../src/history.ts","../../src/utils.ts","../../src/path.ts","../../src/qss.ts","../../../store/build/esm/index.js","../../../react-store/build/esm/index.js","../../src/react.tsx","../../src/route.ts","../../src/searchParams.ts","../../src/router.ts"],"sourcesContent":["var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","// While the public API was clearly inspired by the \"history\" npm package,\n// This implementation attempts to be more lightweight by\n// making assumptions about the way TanStack Router works\n\nexport interface RouterHistory {\n  location: RouterLocation\n  listen: (cb: () => void) => () => void\n  push: (path: string, state?: any) => void\n  replace: (path: string, state?: any) => void\n  go: (index: number) => void\n  back: () => void\n  forward: () => void\n  createHref: (href: string) => string\n  block: (blockerFn: BlockerFn) => () => void\n}\n\nexport interface ParsedPath {\n  href: string\n  pathname: string\n  search: string\n  hash: string\n}\n\nexport interface RouterLocation extends ParsedPath {\n  state: any\n}\n\ntype BlockerFn = (retry: () => void, cancel: () => void) => void\n\nconst popStateEvent = 'popstate'\nconst beforeUnloadEvent = 'beforeunload'\n\nconst beforeUnloadListener = (event: Event) => {\n  event.preventDefault()\n  // @ts-ignore\n  return (event.returnValue = '')\n}\n\nconst stopBlocking = () => {\n  removeEventListener(beforeUnloadEvent, beforeUnloadListener, {\n    capture: true,\n  })\n}\n\nfunction createHistory(opts: {\n  getLocation: () => RouterLocation\n  listener: (onUpdate: () => void) => () => void\n  pushState: (path: string, state: any) => void\n  replaceState: (path: string, state: any) => void\n  go: (n: number) => void\n  back: () => void\n  forward: () => void\n  createHref: (path: string) => string\n}): RouterHistory {\n  let location = opts.getLocation()\n  let unsub = () => {}\n  let listeners = new Set<() => void>()\n  let blockers: BlockerFn[] = []\n  let queue: (() => void)[] = []\n\n  const tryFlush = () => {\n    if (blockers.length) {\n      blockers[0]?.(tryFlush, () => {\n        blockers = []\n        stopBlocking()\n      })\n      return\n    }\n\n    while (queue.length) {\n      queue.shift()?.()\n    }\n\n    onUpdate()\n  }\n\n  const queueTask = (task: () => void) => {\n    queue.push(task)\n    tryFlush()\n  }\n\n  const onUpdate = () => {\n    location = opts.getLocation()\n    listeners.forEach((listener) => listener())\n  }\n\n  return {\n    get location() {\n      return location\n    },\n    listen: (cb: () => void) => {\n      if (listeners.size === 0) {\n        unsub = opts.listener(onUpdate)\n      }\n      listeners.add(cb)\n\n      return () => {\n        listeners.delete(cb)\n        if (listeners.size === 0) {\n          unsub()\n        }\n      }\n    },\n    push: (path: string, state: any) => {\n      queueTask(() => {\n        opts.pushState(path, state)\n      })\n    },\n    replace: (path: string, state: any) => {\n      queueTask(() => {\n        opts.replaceState(path, state)\n      })\n    },\n    go: (index) => {\n      queueTask(() => {\n        opts.go(index)\n      })\n    },\n    back: () => {\n      queueTask(() => {\n        opts.back()\n      })\n    },\n    forward: () => {\n      queueTask(() => {\n        opts.forward()\n      })\n    },\n    createHref: (str) => opts.createHref(str),\n    block: (cb) => {\n      blockers.push(cb)\n\n      if (blockers.length === 1) {\n        addEventListener(beforeUnloadEvent, beforeUnloadListener, {\n          capture: true,\n        })\n      }\n\n      return () => {\n        blockers = blockers.filter((b) => b !== cb)\n\n        if (!blockers.length) {\n          stopBlocking()\n        }\n      }\n    },\n  }\n}\n\nexport function createBrowserHistory(opts?: {\n  getHref?: () => string\n  createHref?: (path: string) => string\n}): RouterHistory {\n  const getHref =\n    opts?.getHref ??\n    (() =>\n      `${window.location.pathname}${window.location.search}${window.location.hash}`)\n  const createHref = opts?.createHref ?? ((path) => path)\n  const getLocation = () => parseLocation(getHref(), history.state)\n\n  return createHistory({\n    getLocation,\n    listener: (onUpdate) => {\n      window.addEventListener(popStateEvent, onUpdate)\n      return () => {\n        window.removeEventListener(popStateEvent, onUpdate)\n      }\n    },\n    pushState: (path, state) => {\n      window.history.pushState(\n        { ...state, key: createRandomKey() },\n        '',\n        createHref(path),\n      )\n    },\n    replaceState: (path, state) => {\n      window.history.replaceState(\n        { ...state, key: createRandomKey() },\n        '',\n        createHref(path),\n      )\n    },\n    back: () => window.history.back(),\n    forward: () => window.history.forward(),\n    go: (n) => window.history.go(n),\n    createHref: (path) => createHref(path),\n  })\n}\n\nexport function createHashHistory(): RouterHistory {\n  return createBrowserHistory({\n    getHref: () => window.location.hash.substring(1),\n    createHref: (path) => `#${path}`,\n  })\n}\n\nexport function createMemoryHistory(\n  opts: {\n    initialEntries: string[]\n    initialIndex?: number\n  } = {\n    initialEntries: ['/'],\n  },\n): RouterHistory {\n  const entries = opts.initialEntries\n  let index = opts.initialIndex ?? entries.length - 1\n  let currentState = {}\n\n  const getLocation = () => parseLocation(entries[index]!, currentState)\n\n  return createHistory({\n    getLocation,\n    listener: () => {\n      return () => {}\n    },\n    pushState: (path, state) => {\n      currentState = {\n        ...state,\n        key: createRandomKey(),\n      }\n      entries.push(path)\n      index++\n    },\n    replaceState: (path, state) => {\n      currentState = {\n        ...state,\n        key: createRandomKey(),\n      }\n      entries[index] = path\n    },\n    back: () => {\n      index--\n    },\n    forward: () => {\n      index = Math.min(index + 1, entries.length - 1)\n    },\n    go: (n) => window.history.go(n),\n    createHref: (path) => path,\n  })\n}\n\nfunction parseLocation(href: string, state: any): RouterLocation {\n  let hashIndex = href.indexOf('#')\n  let searchIndex = href.indexOf('?')\n\n  return {\n    href,\n    pathname: href.substring(\n      0,\n      hashIndex > 0\n        ? searchIndex > 0\n          ? Math.min(hashIndex, searchIndex)\n          : hashIndex\n        : searchIndex > 0\n        ? searchIndex\n        : href.length,\n    ),\n    hash: hashIndex > -1 ? href.substring(hashIndex) : '',\n    search:\n      searchIndex > -1\n        ? href.slice(searchIndex, hashIndex === -1 ? undefined : hashIndex)\n        : '',\n    state,\n  }\n}\n\n// Thanks co-pilot!\nfunction createRandomKey() {\n  return (Math.random() + 1).toString(36).substring(7)\n}\n","export type NoInfer<T> = [T][T extends any ? 0 : never]\nexport type IsAny<T, Y, N> = 1 extends 0 & T ? Y : N\nexport type IsAnyBoolean<T> = 1 extends 0 & T ? true : false\nexport type IsKnown<T, Y, N> = unknown extends T ? N : Y\nexport type PickAsRequired<T, K extends keyof T> = Omit<T, K> &\n  Required<Pick<T, K>>\nexport type PickAsPartial<T, K extends keyof T> = Omit<T, K> &\n  Partial<Pick<T, K>>\nexport type PickUnsafe<T, K> = K extends keyof T ? Pick<T, K> : never\nexport type PickExtra<T, K> = {\n  [TKey in keyof K as string extends TKey\n    ? never\n    : TKey extends keyof T\n    ? never\n    : TKey]: K[TKey]\n}\n\nexport type PickRequired<T> = {\n  [K in keyof T as undefined extends T[K] ? never : K]: T[K]\n}\n\nexport type Expand<T> = T extends object\n  ? T extends infer O\n    ? { [K in keyof O]: O[K] }\n    : never\n  : T\n\nexport type UnionToIntersection<U> = (\n  U extends any ? (k: U) => void : never\n) extends (k: infer I) => any\n  ? I\n  : never\n\ntype Compute<T> = { [K in keyof T]: T[K] } | never\n\ntype AllKeys<T> = T extends any ? keyof T : never\n\nexport type MergeUnion<T, Keys extends keyof T = keyof T> = Compute<\n  {\n    [K in Keys]: T[Keys]\n  } & {\n    [K in AllKeys<T>]?: T extends any\n      ? K extends keyof T\n        ? T[K]\n        : never\n      : never\n  }\n>\n\nexport type Values<O> = O[ValueKeys<O>]\nexport type ValueKeys<O> = Extract<keyof O, PropertyKey>\n\nexport type DeepAwaited<T> = T extends Promise<infer A>\n  ? DeepAwaited<A>\n  : T extends Record<infer A, Promise<infer B>>\n  ? { [K in A]: DeepAwaited<B> }\n  : T\n\nexport type PathParamMask<TRoutePath extends string> =\n  TRoutePath extends `${infer L}/$${infer C}/${infer R}`\n    ? PathParamMask<`${L}/${string}/${R}`>\n    : TRoutePath extends `${infer L}/$${infer C}`\n    ? PathParamMask<`${L}/${string}`>\n    : TRoutePath\n\nexport type Timeout = ReturnType<typeof setTimeout>\n\nexport type Updater<TPrevious, TResult = TPrevious> =\n  | TResult\n  | ((prev?: TPrevious) => TResult)\n\nexport type PickExtract<T, U> = {\n  [K in keyof T as T[K] extends U ? K : never]: T[K]\n}\n\nexport type PickExclude<T, U> = {\n  [K in keyof T as T[K] extends U ? never : K]: T[K]\n}\n\nexport function last<T>(arr: T[]) {\n  return arr[arr.length - 1]\n}\n\nfunction isFunction(d: any): d is Function {\n  return typeof d === 'function'\n}\n\nexport function functionalUpdate<TResult>(\n  updater: Updater<TResult>,\n  previous: TResult,\n) {\n  if (isFunction(updater)) {\n    return updater(previous as TResult)\n  }\n\n  return updater\n}\n\nexport function pick<T, K extends keyof T>(parent: T, keys: K[]): Pick<T, K> {\n  return keys.reduce((obj: any, key: K) => {\n    obj[key] = parent[key]\n    return obj\n  }, {} as any)\n}\n\n/**\n * This function returns `a` if `b` is deeply equal.\n * If not, it will replace any deeply equal children of `b` with those of `a`.\n * This can be used for structural sharing between immutable JSON values for example.\n * Do not use this with signals\n */\nexport function replaceEqualDeep<T>(prev: any, _next: T): T {\n  if (prev === _next) {\n    return prev\n  }\n\n  const next = _next as any\n\n  const array = Array.isArray(prev) && Array.isArray(next)\n\n  if (array || (isPlainObject(prev) && isPlainObject(next))) {\n    const prevSize = array ? prev.length : Object.keys(prev).length\n    const nextItems = array ? next : Object.keys(next)\n    const nextSize = nextItems.length\n    const copy: any = array ? [] : {}\n\n    let equalItems = 0\n\n    for (let i = 0; i < nextSize; i++) {\n      const key = array ? i : nextItems[i]\n      copy[key] = replaceEqualDeep(prev[key], next[key])\n      if (copy[key] === prev[key]) {\n        equalItems++\n      }\n    }\n\n    return prevSize === nextSize && equalItems === prevSize ? prev : copy\n  }\n\n  return next\n}\n\n// Copied from: https://github.com/jonschlinkert/is-plain-object\nexport function isPlainObject(o: any) {\n  if (!hasObjectPrototype(o)) {\n    return false\n  }\n\n  // If has modified constructor\n  const ctor = o.constructor\n  if (typeof ctor === 'undefined') {\n    return true\n  }\n\n  // If has modified prototype\n  const prot = ctor.prototype\n  if (!hasObjectPrototype(prot)) {\n    return false\n  }\n\n  // If constructor does not have an Object-specific method\n  if (!prot.hasOwnProperty('isPrototypeOf')) {\n    return false\n  }\n\n  // Most likely a plain Object\n  return true\n}\n\nfunction hasObjectPrototype(o: any) {\n  return Object.prototype.toString.call(o) === '[object Object]'\n}\n\nexport function partialDeepEqual(a: any, b: any): boolean {\n  if (a === b) {\n    return true\n  }\n\n  if (typeof a !== typeof b) {\n    return false\n  }\n\n  if (isPlainObject(a) && isPlainObject(b)) {\n    return !Object.keys(b).some((key) => !partialDeepEqual(a[key], b[key]))\n  }\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every((item, index) => partialDeepEqual(item, b[index]))\n    )\n  }\n\n  return false\n}\n","import { AnyPathParams } from './route'\nimport { MatchLocation } from './router'\nimport { last } from './utils'\n\nexport interface Segment {\n  type: 'pathname' | 'param' | 'wildcard'\n  value: string\n}\n\nexport function joinPaths(paths: (string | undefined)[]) {\n  return cleanPath(paths.filter(Boolean).join('/'))\n}\n\nexport function cleanPath(path: string) {\n  // remove double slashes\n  return path.replace(/\\/{2,}/g, '/')\n}\n\nexport function trimPathLeft(path: string) {\n  return path === '/' ? path : path.replace(/^\\/{1,}/, '')\n}\n\nexport function trimPathRight(path: string) {\n  return path === '/' ? path : path.replace(/\\/{1,}$/, '')\n}\n\nexport function trimPath(path: string) {\n  return trimPathRight(trimPathLeft(path))\n}\n\nexport function resolvePath(basepath: string, base: string, to: string) {\n  base = base.replace(new RegExp(`^${basepath}`), '/')\n  to = to.replace(new RegExp(`^${basepath}`), '/')\n\n  let baseSegments = parsePathname(base)\n  const toSegments = parsePathname(to)\n\n  toSegments.forEach((toSegment, index) => {\n    if (toSegment.value === '/') {\n      if (!index) {\n        // Leading slash\n        baseSegments = [toSegment]\n      } else if (index === toSegments.length - 1) {\n        // Trailing Slash\n        baseSegments.push(toSegment)\n      } else {\n        // ignore inter-slashes\n      }\n    } else if (toSegment.value === '..') {\n      // Extra trailing slash? pop it off\n      if (baseSegments.length > 1 && last(baseSegments)?.value === '/') {\n        baseSegments.pop()\n      }\n      baseSegments.pop()\n    } else if (toSegment.value === '.') {\n      return\n    } else {\n      baseSegments.push(toSegment)\n    }\n  })\n\n  const joined = joinPaths([basepath, ...baseSegments.map((d) => d.value)])\n\n  return cleanPath(joined)\n}\n\nexport function parsePathname(pathname?: string): Segment[] {\n  if (!pathname) {\n    return []\n  }\n\n  pathname = cleanPath(pathname)\n\n  const segments: Segment[] = []\n\n  if (pathname.slice(0, 1) === '/') {\n    pathname = pathname.substring(1)\n    segments.push({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  if (!pathname) {\n    return segments\n  }\n\n  // Remove empty segments and '.' segments\n  const split = pathname.split('/').filter(Boolean)\n\n  segments.push(\n    ...split.map((part): Segment => {\n      if (part === '$' || part === '*') {\n        return {\n          type: 'wildcard',\n          value: part,\n        }\n      }\n\n      if (part.charAt(0) === '$') {\n        return {\n          type: 'param',\n          value: part,\n        }\n      }\n\n      return {\n        type: 'pathname',\n        value: part,\n      }\n    }),\n  )\n\n  if (pathname.slice(-1) === '/') {\n    pathname = pathname.substring(1)\n    segments.push({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  return segments\n}\n\nexport function interpolatePath(\n  path: string | undefined,\n  params: any,\n  leaveWildcards: boolean = false,\n) {\n  const interpolatedPathSegments = parsePathname(path)\n\n  return joinPaths(\n    interpolatedPathSegments.map((segment) => {\n      if (segment.type === 'wildcard') {\n        const value = params[segment.value]\n        if (leaveWildcards) return `${segment.value}${value ?? ''}`\n        return value\n      }\n\n      if (segment.type === 'param') {\n        return params![segment.value.substring(1)] ?? ''\n      }\n\n      return segment.value\n    }),\n  )\n}\n\nexport function matchPathname(\n  basepath: string,\n  currentPathname: string,\n  matchLocation: Pick<MatchLocation, 'to' | 'fuzzy' | 'caseSensitive'>,\n): AnyPathParams | undefined {\n  const pathParams = matchByPath(basepath, currentPathname, matchLocation)\n  // const searchMatched = matchBySearch(location.search, matchLocation)\n\n  if (matchLocation.to && !pathParams) {\n    return\n  }\n\n  return pathParams ?? {}\n}\n\nexport function matchByPath(\n  basepath: string,\n  from: string,\n  matchLocation: Pick<MatchLocation, 'to' | 'caseSensitive' | 'fuzzy'>,\n): Record<string, string> | undefined {\n  // Remove the base path from the pathname\n  from = basepath != '/' ? from.substring(basepath.length) : from\n  // Default to to $ (wildcard)\n  const to = `${matchLocation.to ?? '$'}`\n  // Parse the from and to\n  const baseSegments = parsePathname(from)\n  const routeSegments = parsePathname(to)\n\n  if (!from.startsWith('/')) {\n    baseSegments.unshift({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  if (!to.startsWith('/')) {\n    routeSegments.unshift({\n      type: 'pathname',\n      value: '/',\n    })\n  }\n\n  const params: Record<string, string> = {}\n\n  let isMatch = (() => {\n    for (\n      let i = 0;\n      i < Math.max(baseSegments.length, routeSegments.length);\n      i++\n    ) {\n      const baseSegment = baseSegments[i]\n      const routeSegment = routeSegments[i]\n\n      const isLastBaseSegment = i >= baseSegments.length - 1\n      const isLastRouteSegment = i >= routeSegments.length - 1\n\n      if (routeSegment) {\n        if (routeSegment.type === 'wildcard') {\n          if (baseSegment?.value) {\n            params['*'] = joinPaths(baseSegments.slice(i).map((d) => d.value))\n            return true\n          }\n          return false\n        }\n\n        if (routeSegment.type === 'pathname') {\n          if (routeSegment.value === '/' && !baseSegment?.value) {\n            return true\n          }\n\n          if (baseSegment) {\n            if (matchLocation.caseSensitive) {\n              if (routeSegment.value !== baseSegment.value) {\n                return false\n              }\n            } else if (\n              routeSegment.value.toLowerCase() !==\n              baseSegment.value.toLowerCase()\n            ) {\n              return false\n            }\n          }\n        }\n\n        if (!baseSegment) {\n          return false\n        }\n\n        if (routeSegment.type === 'param') {\n          if (baseSegment?.value === '/') {\n            return false\n          }\n          if (baseSegment.value.charAt(0) !== '$') {\n            params[routeSegment.value.substring(1)] = baseSegment.value\n          }\n        }\n      }\n\n      if (!isLastBaseSegment && isLastRouteSegment) {\n        return !!matchLocation.fuzzy\n      }\n    }\n\n    return true\n  })()\n\n  return isMatch ? (params as Record<string, string>) : undefined\n}\n","// @ts-nocheck\n\n// qss has been slightly modified and inlined here for our use cases (and compression's sake). We've included it as a hard dependency for MIT license attribution.\n\nexport function encode(obj, pfx?: string) {\n  var k,\n    i,\n    tmp,\n    str = ''\n\n  for (k in obj) {\n    if ((tmp = obj[k]) !== void 0) {\n      if (Array.isArray(tmp)) {\n        for (i = 0; i < tmp.length; i++) {\n          str && (str += '&')\n          str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp[i])\n        }\n      } else {\n        str && (str += '&')\n        str += encodeURIComponent(k) + '=' + encodeURIComponent(tmp)\n      }\n    }\n  }\n\n  return (pfx || '') + str\n}\n\nfunction toValue(mix) {\n  if (!mix) return ''\n  var str = decodeURIComponent(mix)\n  if (str === 'false') return false\n  if (str === 'true') return true\n  if (str.charAt(0) === '0') return str\n  return +str * 0 === 0 ? +str : str\n}\n\nexport function decode(str) {\n  var tmp,\n    k,\n    out = {},\n    arr = str.split('&')\n\n  while ((tmp = arr.shift())) {\n    tmp = tmp.split('=')\n    k = tmp.shift()\n    if (out[k] !== void 0) {\n      out[k] = [].concat(out[k], toValue(tmp.shift()))\n    } else {\n      out[k] = toValue(tmp.shift())\n    }\n  }\n\n  return out\n}\n","/**\n * @tanstack/store/src/index.ts\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nclass Store {\n  listeners = new Set();\n  _batching = false;\n  _flushing = 0;\n  _nextPriority = null;\n  constructor(initialState, options) {\n    this.state = initialState;\n    this.options = options;\n  }\n  subscribe = listener => {\n    this.listeners.add(listener);\n    const unsub = this.options?.onSubscribe?.(listener, this);\n    return () => {\n      this.listeners.delete(listener);\n      unsub?.();\n    };\n  };\n  setState = (updater, opts) => {\n    const previous = this.state;\n    this.state = this.options?.updateFn ? this.options.updateFn(previous)(updater) : updater(previous);\n    const priority = opts?.priority ?? this.options?.defaultPriority ?? 'high';\n    if (this._nextPriority === null) {\n      this._nextPriority = priority;\n    } else if (this._nextPriority === 'high') {\n      this._nextPriority = priority;\n    } else {\n      this._nextPriority = this.options?.defaultPriority ?? 'high';\n    }\n\n    // Always run onUpdate, regardless of batching\n    this.options?.onUpdate?.({\n      priority: this._nextPriority\n    });\n\n    // Attempt to flush\n    this._flush();\n  };\n  _flush = () => {\n    if (this._batching) return;\n    const flushId = ++this._flushing;\n    this.listeners.forEach(listener => {\n      if (this._flushing !== flushId) return;\n      listener({\n        priority: this._nextPriority ?? 'high'\n      });\n    });\n  };\n  batch = cb => {\n    if (this._batching) return cb();\n    this._batching = true;\n    cb();\n    this._batching = false;\n    this._flush();\n  };\n}\n\nexport { Store };\n//# sourceMappingURL=index.js.map\n","/**\n * @tanstack/react-store/src/index.tsx\n *\n * Copyright (c) TanStack\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nexport * from '@tanstack/store';\n\nfunction useStore(store, selector = d => d) {\n  const slice = useSyncExternalStoreWithSelector(store.subscribe, () => store.state, () => store.state, selector, shallow);\n  return slice;\n}\nfunction shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n  const keysA = Object.keys(objA);\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n  for (let i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport { shallow, useStore };\n//# sourceMappingURL=index.js.map\n","import * as React from 'react'\nimport { NoInfer, useStore } from '@tanstack/react-store'\nimport invariant from 'tiny-invariant'\nimport warning from 'tiny-warning'\n// @ts-ignore\nimport {\n  LinkOptions,\n  ToOptions,\n  ResolveRelativePath,\n  NavigateOptions,\n} from './link'\nimport { AnyRoute } from './route'\nimport { RouteByPath, AnyRoutesInfo, DefaultRoutesInfo } from './routeInfo'\nimport {\n  RegisteredRoutesInfo,\n  MatchRouteOptions,\n  RegisteredRouter,\n  RouterOptions,\n  Router,\n  RouteMatch,\n} from './router'\nimport { functionalUpdate, last, pick } from './utils'\n\n//\n\nexport { useStore }\n\n//\n\ntype ReactNode = any\n\nexport type SyncRouteComponent<TProps = {}> = (props: TProps) => ReactNode\n\nexport type RouteComponent<TProps = {}> = SyncRouteComponent<TProps> & {\n  preload?: () => Promise<void>\n}\n\nexport function lazy<T extends Record<string, SyncRouteComponent>>(\n  importer: () => Promise<T>,\n  exportName: keyof T = 'default',\n): RouteComponent {\n  const lazyComp = React.lazy(async () => {\n    const moduleExports = await importer()\n    const component = moduleExports[exportName]\n    return { default: component }\n  })\n\n  let preloaded: Promise<SyncRouteComponent>\n\n  const finalComp = lazyComp as unknown as RouteComponent\n\n  finalComp.preload = async () => {\n    if (!preloaded) {\n      await importer()\n    }\n  }\n\n  return finalComp\n}\n\nexport type LinkPropsOptions<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = LinkOptions<RegisteredRoutesInfo, TFrom, TTo> & {\n  // A function that returns additional props for the `active` state of this link. These props override other props passed to the link (`style`'s are merged, `className`'s are concatenated)\n  activeProps?:\n    | React.AnchorHTMLAttributes<HTMLAnchorElement>\n    | (() => React.AnchorHTMLAttributes<HTMLAnchorElement>)\n  // A function that returns additional props for the `inactive` state of this link. These props override other props passed to the link (`style`'s are merged, `className`'s are concatenated)\n  inactiveProps?:\n    | React.AnchorHTMLAttributes<HTMLAnchorElement>\n    | (() => React.AnchorHTMLAttributes<HTMLAnchorElement>)\n  // If set to `true`, the link's underlying navigate() call will be wrapped in a `React.startTransition` call. Defaults to `true`.\n  startTransition?: boolean\n}\n\nexport type MakeUseMatchRouteOptions<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = ToOptions<RegisteredRoutesInfo, TFrom, TTo> & MatchRouteOptions\n\nexport type MakeMatchRouteOptions<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = ToOptions<RegisteredRoutesInfo, TFrom, TTo> &\n  MatchRouteOptions & {\n    // If a function is passed as a child, it will be given the `isActive` boolean to aid in further styling on the element it returns\n    children?:\n      | ((\n          params?: RouteByPath<\n            RegisteredRoutesInfo,\n            ResolveRelativePath<TFrom, NoInfer<TTo>>\n          >['__types']['allParams'],\n        ) => ReactNode)\n      | React.ReactNode\n  }\n\nexport type MakeLinkPropsOptions<\n  TFrom extends string = '/',\n  TTo extends string = '',\n> = LinkPropsOptions<TFrom, TTo> & React.AnchorHTMLAttributes<HTMLAnchorElement>\n\nexport type MakeLinkOptions<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = LinkPropsOptions<TFrom, TTo> &\n  Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, 'children'> & {\n    // If a function is passed as a child, it will be given the `isActive` boolean to aid in further styling on the element it returns\n    children?:\n      | React.ReactNode\n      | ((state: { isActive: boolean }) => React.ReactNode)\n  }\n\nexport type PromptProps = {\n  message: string\n  condition?: boolean | any\n  children?: ReactNode\n}\n\n//\n\nexport function useLinkProps<\n  TFrom extends string = '/',\n  TTo extends string = '',\n>(\n  options: MakeLinkPropsOptions<TFrom, TTo>,\n): React.AnchorHTMLAttributes<HTMLAnchorElement> {\n  const router = useRouter()\n\n  const {\n    // custom props\n    type,\n    children,\n    target,\n    activeProps = () => ({ className: 'active' }),\n    inactiveProps = () => ({}),\n    activeOptions,\n    disabled,\n    // fromCurrent,\n    hash,\n    search,\n    params,\n    to = '.',\n    preload,\n    preloadDelay,\n    replace,\n    // element props\n    style,\n    className,\n    onClick,\n    onFocus,\n    onMouseEnter,\n    onMouseLeave,\n    onTouchStart,\n    ...rest\n  } = options\n\n  const linkInfo = router.buildLink(options as any)\n\n  if (linkInfo.type === 'external') {\n    const { href } = linkInfo\n    return { href }\n  }\n\n  const {\n    handleClick,\n    handleFocus,\n    handleEnter,\n    handleLeave,\n    handleTouchStart,\n    isActive,\n    next,\n  } = linkInfo\n\n  const handleReactClick = (e: Event) => {\n    if (options.startTransition ?? true) {\n      ;(React.startTransition || ((d) => d))(() => {\n        handleClick(e)\n      })\n    }\n  }\n\n  const composeHandlers =\n    (handlers: (undefined | ((e: any) => void))[]) =>\n    (e: React.SyntheticEvent) => {\n      if (e.persist) e.persist()\n      handlers.filter(Boolean).forEach((handler) => {\n        if (e.defaultPrevented) return\n        handler!(e)\n      })\n    }\n\n  // Get the active props\n  const resolvedActiveProps: React.HTMLAttributes<HTMLAnchorElement> = isActive\n    ? functionalUpdate(activeProps as any, {}) ?? {}\n    : {}\n\n  // Get the inactive props\n  const resolvedInactiveProps: React.HTMLAttributes<HTMLAnchorElement> =\n    isActive ? {} : functionalUpdate(inactiveProps, {}) ?? {}\n\n  return {\n    ...resolvedActiveProps,\n    ...resolvedInactiveProps,\n    ...rest,\n    href: disabled ? undefined : next.href,\n    onClick: composeHandlers([onClick, handleReactClick]),\n    onFocus: composeHandlers([onFocus, handleFocus]),\n    onMouseEnter: composeHandlers([onMouseEnter, handleEnter]),\n    onMouseLeave: composeHandlers([onMouseLeave, handleLeave]),\n    onTouchStart: composeHandlers([onTouchStart, handleTouchStart]),\n    target,\n    style: {\n      ...style,\n      ...resolvedActiveProps.style,\n      ...resolvedInactiveProps.style,\n    },\n    className:\n      [\n        className,\n        resolvedActiveProps.className,\n        resolvedInactiveProps.className,\n      ]\n        .filter(Boolean)\n        .join(' ') || undefined,\n    ...(disabled\n      ? {\n          role: 'link',\n          'aria-disabled': true,\n        }\n      : undefined),\n    ['data-status']: isActive ? 'active' : undefined,\n  }\n}\n\nexport interface LinkFn<\n  TDefaultFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TDefaultTo extends string = '',\n> {\n  <\n    TFrom extends RegisteredRoutesInfo['routePaths'] = TDefaultFrom,\n    TTo extends string = TDefaultTo,\n  >(\n    props: MakeLinkOptions<TFrom, TTo> & React.RefAttributes<HTMLAnchorElement>,\n  ): ReactNode\n}\n\nexport const Link: LinkFn = React.forwardRef((props: any, ref) => {\n  const linkProps = useLinkProps(props)\n\n  return (\n    <a\n      {...{\n        ref: ref as any,\n        ...linkProps,\n        children:\n          typeof props.children === 'function'\n            ? props.children({\n                isActive: (linkProps as any)['data-status'] === 'active',\n              })\n            : props.children,\n      }}\n    />\n  )\n}) as any\n\nexport function Navigate<\n  TFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n>(props: NavigateOptions<RegisteredRoutesInfo, TFrom, TTo>): null {\n  const router = useRouter()\n\n  React.useLayoutEffect(() => {\n    router.navigate(props as any)\n  }, [])\n\n  return null\n}\n\nexport const matchIdsContext = React.createContext<string[]>(null!)\nexport const routerContext = React.createContext<RegisteredRouter>(null!)\n\nexport type RouterProps<\n  TRouteConfig extends AnyRoute = AnyRoute,\n  TRoutesInfo extends AnyRoutesInfo = DefaultRoutesInfo,\n  TDehydrated extends Record<string, any> = Record<string, any>,\n> = Omit<RouterOptions<TRouteConfig, TDehydrated>, 'context'> & {\n  router: Router<TRouteConfig, TRoutesInfo>\n  context?: Partial<RouterOptions<TRouteConfig, TDehydrated>['context']>\n}\n\nexport function useRouterState<TSelected = RegisteredRouter['state']>(opts?: {\n  select: (state: RegisteredRouter['state']) => TSelected\n}): TSelected {\n  const router = useRouter()\n  return useStore(router.__store, opts?.select)\n}\n\nexport function RouterProvider<\n  TRouteConfig extends AnyRoute = AnyRoute,\n  TRoutesInfo extends AnyRoutesInfo = DefaultRoutesInfo,\n  TDehydrated extends Record<string, any> = Record<string, any>,\n>({ router, ...rest }: RouterProps<TRouteConfig, TRoutesInfo, TDehydrated>) {\n  router.update(rest)\n\n  React.useEffect(router.mount, [router])\n\n  const Wrap = router.options.Wrap || React.Fragment\n\n  return (\n    <Wrap>\n      <routerContext.Provider value={router as any}>\n        <Matches />\n      </routerContext.Provider>\n    </Wrap>\n  )\n}\n\nfunction Matches() {\n  const matchIds = useRouterState({\n    select: (d) => d.matches.map((d) => d.id),\n  })\n\n  return (\n    <matchIdsContext.Provider value={[undefined!, ...matchIds]}>\n      <CatchBoundary\n        errorComponent={ErrorComponent}\n        onCatch={() => {\n          warning(\n            false,\n            `Error in router! Consider setting an 'errorComponent' in your RootRoute! 👍`,\n          )\n        }}\n      >\n        <Outlet />\n      </CatchBoundary>\n    </matchIdsContext.Provider>\n  )\n}\n\nexport function useRouter(): RegisteredRouter {\n  const value = React.useContext(routerContext)\n  warning(value, 'useRouter must be used inside a <Router> component!')\n  return value\n}\n\nexport function useMatches<T = RouteMatch[]>(opts?: {\n  select?: (matches: RouteMatch[]) => T\n}): T {\n  const matchIds = React.useContext(matchIdsContext)\n  return useRouterState({\n    select: (state) => {\n      const matches = state.matches.slice(\n        state.matches.findIndex((d) => d.id === matchIds[0]),\n      )\n      return (opts?.select?.(matches) ?? matches) as T\n    },\n  })\n}\n\nexport function useMatch<\n  TFrom extends keyof RegisteredRoutesInfo['routesById'],\n  TStrict extends boolean = true,\n  TRouteMatchState = RouteMatch<\n    RegisteredRoutesInfo,\n    RegisteredRoutesInfo['routesById'][TFrom]\n  >,\n  TSelected = TRouteMatchState,\n>(opts?: {\n  from: TFrom\n  strict?: TStrict\n  select?: (match: TRouteMatchState) => TSelected\n}): TStrict extends true ? TRouteMatchState : TRouteMatchState | undefined {\n  const router = useRouter()\n  const nearestMatchId = React.useContext(matchIdsContext)[0]!\n  const nearestMatchRouteId = router.getRouteMatch(nearestMatchId)?.routeId\n\n  const matchRouteId = useRouterState({\n    select: (state) => {\n      const matches = state.matches\n      const match = opts?.from\n        ? matches.find((d) => d.routeId === opts?.from)\n        : matches.find((d) => d.id === nearestMatchId)\n\n      return match!.routeId\n    },\n  })\n\n  if (opts?.strict ?? true) {\n    invariant(\n      nearestMatchRouteId == matchRouteId,\n      `useMatch(\"${\n        matchRouteId as string\n      }\") is being called in a component that is meant to render the '${nearestMatchRouteId}' route. Did you mean to 'useMatch(\"${\n        matchRouteId as string\n      }\", { strict: false })' or 'useRoute(\"${\n        matchRouteId as string\n      }\")' instead?`,\n    )\n  }\n\n  const match = useRouterState({\n    select: (state) => {\n      const matches = state.matches\n      const match = opts?.from\n        ? matches.find((d) => d.routeId === opts?.from)\n        : matches.find((d) => d.id === nearestMatchId)\n\n      invariant(\n        match,\n        `Could not find ${\n          opts?.from\n            ? `an active match from \"${opts.from}\"`\n            : 'a nearest match!'\n        }`,\n      )\n\n      return (opts?.select?.(match as any) ?? match) as TSelected\n    },\n  })\n\n  return match as any\n}\n\nexport type RouteFromIdOrRoute<T> = T extends RegisteredRoutesInfo['routeUnion']\n  ? T\n  : T extends keyof RegisteredRoutesInfo['routesById']\n  ? RegisteredRoutesInfo['routesById'][T]\n  : T extends string\n  ? keyof RegisteredRoutesInfo['routesById']\n  : never\n\nexport function useLoader<\n  TFrom extends keyof RegisteredRoutesInfo['routesById'],\n  TStrict extends boolean = true,\n  TLoader = RegisteredRoutesInfo['routesById'][TFrom]['__types']['loader'],\n  TSelected = TLoader,\n>(opts?: {\n  from: TFrom\n  strict?: TStrict\n  select?: (search: TLoader) => TSelected\n}): TStrict extends true ? TSelected : TSelected | undefined {\n  return useMatch({\n    ...(opts as any),\n    select: (match: RouteMatch) =>\n      (opts?.select?.(match.loader as TLoader) ?? match.loader) as TSelected,\n  })\n}\n\nexport function useSearch<\n  TFrom extends keyof RegisteredRoutesInfo['routesById'],\n  TStrict extends boolean = true,\n  TSearch = RegisteredRoutesInfo['routesById'][TFrom]['__types']['fullSearchSchema'],\n  TSelected = TSearch,\n>(opts?: {\n  from: TFrom\n  strict?: TStrict\n  select?: (search: TSearch) => TSelected\n}): TStrict extends true ? TSelected : TSelected | undefined {\n  return useMatch({\n    ...(opts as any),\n    select: (match: RouteMatch) => {\n      return (opts?.select?.(match.search as TSearch) ??\n        match.search) as TSelected\n    },\n  })\n}\n\nexport function useParams<\n  TFrom extends keyof RegisteredRoutesInfo['routesById'] = '/',\n  TDefaultSelected = RegisteredRoutesInfo['allParams'] &\n    RegisteredRoutesInfo['routesById'][TFrom]['__types']['allParams'],\n  TSelected = TDefaultSelected,\n>(opts?: {\n  from: TFrom\n  select?: (search: TDefaultSelected) => TSelected\n}): TSelected {\n  return useRouterState({\n    select: (state: any) => {\n      const params = (last(state.matches) as any)?.params\n      return (opts?.select?.(params) ?? params) as TSelected\n    },\n  })\n}\n\nexport function useNavigate<\n  TDefaultFrom extends RegisteredRoutesInfo['routePaths'] = '/',\n>(defaultOpts?: { from?: TDefaultFrom }) {\n  const router = useRouter()\n  return React.useCallback(\n    <\n      TFrom extends RegisteredRoutesInfo['routePaths'] = TDefaultFrom,\n      TTo extends string = '',\n    >(\n      opts?: NavigateOptions<RegisteredRoutesInfo, TFrom, TTo>,\n    ) => {\n      return router.navigate({ ...defaultOpts, ...(opts as any) })\n    },\n    [],\n  )\n}\n\nexport function useMatchRoute() {\n  const router = useRouter()\n\n  return React.useCallback(\n    <TFrom extends string = '/', TTo extends string = ''>(\n      opts: MakeUseMatchRouteOptions<TFrom, TTo>,\n    ) => {\n      const { pending, caseSensitive, ...rest } = opts\n\n      return router.matchRoute(rest as any, {\n        pending,\n        caseSensitive,\n      })\n    },\n    [],\n  )\n}\n\nexport function MatchRoute<TFrom extends string = '/', TTo extends string = ''>(\n  props: MakeMatchRouteOptions<TFrom, TTo>,\n): any {\n  const matchRoute = useMatchRoute()\n  const params = matchRoute(props)\n\n  if (typeof props.children === 'function') {\n    return (props.children as any)(params)\n  }\n\n  return !!params ? props.children : null\n}\n\nexport function Outlet() {\n  const matchIds = React.useContext(matchIdsContext).slice(1)\n\n  if (!matchIds[0]) {\n    return null\n  }\n\n  return <Match matchIds={matchIds} />\n}\n\nconst defaultPending = () => null\n\nfunction Match({ matchIds }: { matchIds: string[] }) {\n  const router = useRouter()\n  const matchId = matchIds[0]!\n  const routeId = router.getRouteMatch(matchId)!.routeId\n  const route = router.getRoute(routeId)\n\n  const PendingComponent = (route.options.pendingComponent ??\n    router.options.defaultPendingComponent ??\n    defaultPending) as any\n\n  const errorComponent =\n    route.options.errorComponent ?? router.options.defaultErrorComponent\n\n  const ResolvedSuspenseBoundary =\n    route.options.wrapInSuspense ?? !route.isRoot\n      ? React.Suspense\n      : SafeFragment\n\n  const ResolvedCatchBoundary = errorComponent ? CatchBoundary : SafeFragment\n\n  return (\n    <matchIdsContext.Provider value={matchIds}>\n      <ResolvedSuspenseBoundary fallback={<PendingComponent />}>\n        <ResolvedCatchBoundary\n          key={route.id}\n          errorComponent={errorComponent}\n          onCatch={() => {\n            warning(false, `Error in route match: ${matchId}`)\n          }}\n        >\n          <MatchInner matchId={matchId} />\n        </ResolvedCatchBoundary>\n      </ResolvedSuspenseBoundary>\n    </matchIdsContext.Provider>\n  )\n}\n\nfunction MatchInner({ matchId }: { matchId: string }): any {\n  const router = useRouter()\n\n  const match = useRouterState({\n    select: (d) =>\n      pick(d.matches.find((d) => d.id === matchId)!, [\n        'status',\n        'loadPromise',\n        'routeId',\n        'error',\n      ]),\n  })\n\n  const route = router.getRoute(match.routeId)\n\n  if (match.status === 'error') {\n    throw match.error\n  }\n\n  if (match.status === 'pending') {\n    invariant(false, 'This should never happen')\n  }\n\n  if (match.status === 'success') {\n    let comp = route.options.component ?? router.options.defaultComponent\n\n    if (comp) {\n      return React.createElement(comp, {\n        useLoader: route.useLoader,\n        useMatch: route.useMatch,\n        useContext: route.useContext,\n        useSearch: route.useSearch,\n        useParams: route.useParams,\n      })\n    }\n\n    return <Outlet />\n  }\n\n  invariant(\n    false,\n    'Idle routeMatch status encountered during rendering! You should never see this. File an issue!',\n  )\n}\n\nfunction SafeFragment(props: any) {\n  return <>{props.children}</>\n}\n\nexport function useInjectHtml() {\n  const router = useRouter()\n\n  return React.useCallback(\n    (html: string | (() => Promise<string> | string)) => {\n      router.injectHtml(html)\n    },\n    [],\n  )\n}\n\nexport function useDehydrate() {\n  const router = useRouter()\n\n  return React.useCallback(function dehydrate<T>(\n    key: any,\n    data: T | (() => Promise<T> | T),\n  ) {\n    return router.dehydrateData(key, data)\n  },\n  [])\n}\n\nexport function useHydrate() {\n  const router = useRouter()\n\n  return function hydrate<T = unknown>(key: any) {\n    return router.hydrateData(key) as T\n  }\n}\n\n// This is the messiest thing ever... I'm either seriously tired (likely) or\n// there has to be a better way to reset error boundaries when the\n// router's location key changes.\n\nclass CatchBoundary extends React.Component<{\n  children: any\n  errorComponent: any\n  onCatch: (error: any, info: any) => void\n}> {\n  state = {\n    error: false,\n    info: undefined,\n  }\n  componentDidCatch(error: any, info: any) {\n    this.props.onCatch(error, info)\n    this.setState({\n      error,\n      info,\n    })\n  }\n  render() {\n    return (\n      <CatchBoundaryInner\n        {...this.props}\n        errorState={this.state}\n        reset={() => this.setState({})}\n      />\n    )\n  }\n}\n\nfunction CatchBoundaryInner(props: {\n  children: any\n  errorComponent: any\n  errorState: { error: unknown; info: any }\n  reset: () => void\n}) {\n  const locationKey = useRouterState({\n    select: (d) => d.resolvedLocation.key,\n  })\n\n  const [activeErrorState, setActiveErrorState] = React.useState(\n    props.errorState,\n  )\n  const errorComponent = props.errorComponent ?? ErrorComponent\n  const prevKeyRef = React.useRef('' as any)\n\n  React.useEffect(() => {\n    if (activeErrorState) {\n      if (locationKey !== prevKeyRef.current) {\n        setActiveErrorState({} as any)\n      }\n    }\n\n    prevKeyRef.current = locationKey\n  }, [activeErrorState, locationKey])\n\n  React.useEffect(() => {\n    if (props.errorState.error) {\n      setActiveErrorState(props.errorState)\n    }\n    // props.reset()\n  }, [props.errorState.error])\n\n  if (props.errorState.error && activeErrorState.error) {\n    return React.createElement(errorComponent, activeErrorState)\n  }\n\n  return props.children\n}\n\nexport function ErrorComponent({ error }: { error: any }) {\n  return (\n    <div style={{ padding: '.5rem', maxWidth: '100%' }}>\n      <strong style={{ fontSize: '1.2rem' }}>Something went wrong!</strong>\n      <div style={{ height: '.5rem' }} />\n      <div>\n        <pre\n          style={{\n            fontSize: '.7em',\n            border: '1px solid red',\n            borderRadius: '.25rem',\n            padding: '.5rem',\n            color: 'red',\n            overflow: 'auto',\n          }}\n        >\n          {error.message ? <code>{error.message}</code> : null}\n        </pre>\n      </div>\n    </div>\n  )\n}\n\nexport function useBlocker(\n  message: string,\n  condition: boolean | any = true,\n): void {\n  const router = useRouter()\n\n  React.useEffect(() => {\n    if (!condition) return\n\n    let unblock = router.history.block((retry, cancel) => {\n      if (window.confirm(message)) {\n        unblock()\n        retry()\n      }\n    })\n\n    return unblock\n  })\n}\n\nexport function Block({ message, condition, children }: PromptProps) {\n  useBlocker(message, condition)\n  return (children ?? null) as ReactNode\n}\n\nexport function shallow<T>(objA: T, objB: T) {\n  if (Object.is(objA, objB)) {\n    return true\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false\n  }\n\n  const keysA = Object.keys(objA)\n  if (keysA.length !== Object.keys(objB).length) {\n    return false\n  }\n\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !Object.prototype.hasOwnProperty.call(objB, keysA[i] as string) ||\n      !Object.is(objA[keysA[i] as keyof T], objB[keysA[i] as keyof T])\n    ) {\n      return false\n    }\n  }\n  return true\n}\n","import { ParsePathParams } from './link'\nimport {\n  AnyRouter,\n  Router,\n  AnyRouteMatch,\n  RouteMatch,\n  RouterConstructorOptions,\n} from './router'\nimport {\n  IsAny,\n  NoInfer,\n  PickRequired,\n  PickUnsafe,\n  UnionToIntersection,\n} from './utils'\nimport invariant from 'tiny-invariant'\nimport { joinPaths, trimPath } from './path'\nimport { AnyRoutesInfo, DefaultRoutesInfo, RoutesInfo } from './routeInfo'\nimport {\n  RouteComponent,\n  useLoader,\n  useMatch,\n  useParams,\n  useSearch,\n} from './react'\n\nexport const rootRouteId = '__root__' as const\nexport type RootRouteId = typeof rootRouteId\nexport type AnyPathParams = {}\nexport type AnySearchSchema = {}\nexport type AnyContext = {}\nexport interface RouteMeta {}\nexport interface RouteContext {}\n\nexport type RouteOptionsBase<TCustomId, TPath> =\n  | {\n      path: TPath\n    }\n  | {\n      id: TCustomId\n    }\n\nexport type RouteOptionsBaseIntersection<TCustomId, TPath> =\n  UnionToIntersection<RouteOptionsBase<TCustomId, TPath>>\n\nexport type MetaOptions = keyof PickRequired<RouteMeta> extends never\n  ? {\n      meta?: RouteMeta\n    }\n  : {\n      meta: RouteMeta\n    }\n\ntype GetContextFn<\n  TParentRoute,\n  TAllParams,\n  TFullSearchSchema,\n  TParentContext,\n  TAllParentContext,\n  TRouteContext,\n> = (\n  opts: {\n    params: TAllParams\n    search: TFullSearchSchema\n  } & (TParentRoute extends undefined\n    ? {\n        context?: TAllParentContext\n        parentContext?: TParentContext\n      }\n    : {\n        context: TAllParentContext\n        parentContext: TParentContext\n      }),\n) => TRouteContext\n\nexport type ContextOptions<\n  TParentRoute,\n  TAllParams,\n  TFullSearchSchema,\n  TParentContext,\n  TAllParentContext,\n  TRouteContext,\n> = keyof PickRequired<RouteContext> extends never\n  ? {\n      getContext?: GetContextFn<\n        TParentRoute,\n        TAllParams,\n        TFullSearchSchema,\n        TParentContext,\n        TAllParentContext,\n        TRouteContext\n      >\n    }\n  : {\n      getContext: GetContextFn<\n        TParentRoute,\n        TAllParams,\n        TFullSearchSchema,\n        TParentContext,\n        TAllParentContext,\n        TRouteContext\n      >\n    }\n\nexport type RouteProps<\n  TParentRoute extends AnyRoute,\n  TPath extends string,\n  TFullPath extends ResolveFullPath<\n    TParentRoute,\n    TPath,\n    RoutePrefix<TParentRoute['fullPath'], TPath>\n  >,\n  TCustomId extends string,\n  TId extends ResolveId<TParentRoute, TCustomId, TPath>,\n  TLoader,\n  TSearchSchema extends AnySearchSchema,\n  TFullSearchSchema extends AnySearchSchema,\n  TAllParams,\n  TParentContext,\n  TAllParentContext extends IsAny<\n    TParentRoute['__types']['allParams'],\n    TParentContext,\n    TParentRoute['__types']['allParams'] & TParentContext\n  >,\n  TRouteContext,\n  TContext,\n  TRouterContext extends AnyContext,\n> = {\n  useMatch: () => RouteMatch<\n    AnyRoutesInfo,\n    Route<\n      TParentRoute,\n      TPath,\n      TFullPath,\n      TCustomId,\n      TId,\n      TLoader,\n      TSearchSchema,\n      TFullSearchSchema,\n      TParentContext,\n      TAllParentContext,\n      TRouteContext,\n      TContext,\n      TRouterContext,\n      any,\n      any\n    >\n  >\n  useLoader: () => UseLoaderResult<TLoader>\n  useSearch: <\n    TStrict extends boolean = true,\n    TSearch = TFullSearchSchema,\n    TSelected = TSearch,\n  >(opts?: {\n    strict?: TStrict\n    select?: (search: TSearch) => TSelected\n  }) => TStrict extends true ? TSelected : TSelected | undefined\n  useParams: <\n    TDefaultSelected = TAllParams,\n    TSelected = TDefaultSelected,\n  >(opts?: {\n    select?: (params: TDefaultSelected) => TSelected\n  }) => TSelected\n  useContext: <\n    TDefaultSelected = TContext,\n    TSelected = TDefaultSelected,\n  >(opts?: {\n    select?: (context: TDefaultSelected) => TSelected\n  }) => TSelected\n}\n\nexport type RouteOptions<\n  TParentRoute extends AnyRoute = AnyRoute,\n  TCustomId extends string = string,\n  TPath extends string = string,\n  TLoader = unknown,\n  TParentSearchSchema extends {} = {},\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = TSearchSchema,\n  TParentParams extends AnyPathParams = {},\n  TParams = Record<ParsePathParams<TPath>, string>,\n  TAllParams = TParams,\n  TParentContext extends AnyContext = AnyContext,\n  TAllParentContext extends IsAny<\n    TParentRoute['__types']['allParams'],\n    TParentContext,\n    TParentRoute['__types']['allParams'] & TParentContext\n  > = IsAny<\n    TParentRoute['__types']['allParams'],\n    TParentContext,\n    TParentRoute['__types']['allParams'] & TParentContext\n  >,\n  TRouteContext extends RouteContext = RouteContext,\n  TContext extends MergeFromParent<\n    TAllParentContext,\n    TRouteContext\n  > = MergeFromParent<TAllParentContext, TRouteContext>,\n> = RouteOptionsBase<TCustomId, TPath> & {\n  getParentRoute: () => TParentRoute\n  // Optionally call this function to get a unique key for this route.\n  // This is useful for routes that need to be uniquely identified\n  // by more than their by search params\n  getKey?: OnLoadFnKey<\n    TSearchSchema,\n    TFullSearchSchema,\n    TAllParams,\n    NoInfer<TRouteContext>,\n    TContext\n  >\n  // If true, this route will be matched as case-sensitive\n  caseSensitive?: boolean\n  // Filter functions that can manipulate search params *before* they are passed to links and navigate\n  // calls that match this route.\n  preSearchFilters?: SearchFilter<TFullSearchSchema>[]\n  // Filter functions that can manipulate search params *after* they are passed to links and navigate\n  // calls that match this route.\n  postSearchFilters?: SearchFilter<TFullSearchSchema>[]\n  // The content to be rendered when the route is matched. If no component is provided, defaults to `<Outlet />`\n  component?: RouteComponent<\n    RouteProps<\n      TParentRoute,\n      TPath,\n      ResolveFullPath<TParentRoute, TPath>,\n      TCustomId,\n      ResolveId<TParentRoute, TCustomId, TPath>,\n      TLoader,\n      TSearchSchema,\n      TFullSearchSchema,\n      TAllParams,\n      TParentContext,\n      TAllParentContext,\n      TRouteContext,\n      TContext,\n      NoInfer<TRouteContext>\n    >\n  > //\n  // The content to be rendered when the route encounters an error\n  errorComponent?: RouteComponent<{\n    error: Error\n    info: { componentStack: string }\n  }> //\n  // If supported by your framework, the content to be rendered as the fallback content until the route is ready to render\n  pendingComponent?: RouteComponent<\n    RouteProps<\n      TParentRoute,\n      TPath,\n      ResolveFullPath<TParentRoute, TPath>,\n      TCustomId,\n      ResolveId<TParentRoute, TCustomId, TPath>,\n      TLoader,\n      TSearchSchema,\n      TFullSearchSchema,\n      TAllParams,\n      TParentContext,\n      TAllParentContext,\n      TRouteContext,\n      TContext,\n      NoInfer<TRouteContext>\n    >\n  > //\n  wrapInSuspense?: boolean\n\n  // This async function is called before a route is loaded.\n  // If an error is thrown here, the route's loader will not be called.\n  // If thrown during a navigation, the navigation will be cancelled and the error will be passed to the `onLoadError` function.\n  // If thrown during a preload event, the error will be logged to the console.\n  beforeLoad?: (opts: {\n    router: AnyRouter\n    match: AnyRouteMatch\n  }) => Promise<void> | void\n  // This function will be called if the route's loader throws an error **during an attempted navigation**.\n  // If you want to redirect due to an error, call `router.navigate()` from within this function.\n  onBeforeLoadError?: (err: any) => void\n  validateSearch?: SearchSchemaValidator<TSearchSchema, TParentSearchSchema>\n  // This function will be called if the route's validateSearch option throws an error **during an attempted validation**.\n  // If you want to redirect due to an error, call `router.navigate()` from within this function.\n  // If you want to display the errorComponent, rethrow the error\n  onValidateSearchError?: (err: any) => void\n  onParseParamsError?: (err: any) => void\n  // An asynchronous function responsible for preparing or fetching data for the route before it is rendered\n  loader?: OnLoadFn<\n    TLoader,\n    TSearchSchema,\n    TFullSearchSchema,\n    TAllParams,\n    NoInfer<TRouteContext>,\n    TContext\n  >\n  onLoadError?: (err: any) => void\n  onError?: (err: any) => void\n  // This function is called\n  // when moving from an inactive state to an active one. Likewise, when moving from\n  // an active to an inactive state, the return function (if provided) is called.\n  onLoaded?: (matchContext: {\n    params: TAllParams\n    search: TFullSearchSchema\n  }) =>\n    | void\n    | undefined\n    | ((match: { params: TAllParams; search: TFullSearchSchema }) => void)\n  // This function is called when the route remains active from one transition to the next.\n  onTransition?: (match: {\n    params: TAllParams\n    search: TFullSearchSchema\n  }) => void\n} & MetaOptions &\n  ContextOptions<\n    TParentRoute,\n    TAllParams,\n    TFullSearchSchema,\n    TParentContext,\n    TAllParentContext,\n    TRouteContext\n  > &\n  (\n    | {\n        // Parse params optionally receives path params as strings and returns them in a parsed format (like a number or boolean)\n        parseParams?: (\n          rawParams: IsAny<TPath, any, Record<ParsePathParams<TPath>, string>>,\n        ) => TParams extends Record<ParsePathParams<TPath>, any>\n          ? TParams\n          : 'parseParams must return an object'\n        stringifyParams?: (\n          params: NoInfer<TParams>,\n        ) => Record<ParsePathParams<TPath>, string>\n      }\n    | {\n        stringifyParams?: never\n        parseParams?: never\n      }\n  ) &\n  (PickUnsafe<TParentParams, ParsePathParams<TPath>> extends never // Detect if an existing path param is being redefined\n    ? { test?: PickUnsafe<TParentParams, ParsePathParams<TPath>> }\n    : 'Cannot redefined path params in child routes!')\n\n// The parse type here allows a zod schema to be passed directly to the validator\nexport type SearchSchemaValidator<TReturn, TParentSchema> =\n  | SearchSchemaValidatorObj<TReturn, TParentSchema>\n  | SearchSchemaValidatorFn<TReturn, TParentSchema>\n\nexport type SearchSchemaValidatorObj<TReturn, TParentSchema> = {\n  parse?: SearchSchemaValidatorFn<TReturn, TParentSchema>\n}\n\nexport type SearchSchemaValidatorFn<TReturn, TParentSchema> = (\n  searchObj: Record<string, unknown>,\n) => {} extends TParentSchema\n  ? TReturn\n  : keyof TReturn extends keyof TParentSchema\n  ? {\n      error: 'Top level search params cannot be redefined by child routes!'\n      keys: keyof TReturn & keyof TParentSchema\n    }\n  : TReturn\n\nexport type DefinedPathParamWarning =\n  'Path params cannot be redefined by child routes!'\n\nexport type ParentParams<TParentParams> = AnyPathParams extends TParentParams\n  ? {}\n  : {\n      [Key in keyof TParentParams]?: DefinedPathParamWarning\n    }\n\nexport type OnLoadFn<\n  TLoader = unknown,\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams = {},\n  TContext extends AnyContext = AnyContext,\n  TAllContext extends AnyContext = AnyContext,\n> = (\n  match: LoaderContext<\n    TSearchSchema,\n    TFullSearchSchema,\n    TAllParams,\n    TContext,\n    TAllContext\n  > & {\n    parentMatchPromise?: Promise<void>\n  },\n) => Promise<TLoader> | TLoader\n\nexport type OnLoadFnKey<\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams = {},\n  TContext extends AnyContext = AnyContext,\n  TAllContext extends AnyContext = AnyContext,\n> = (\n  loaderContext: {\n    params: TAllParams\n    search: TFullSearchSchema\n  },\n  // loaderContext: LoaderContext<\n  //   TSearchSchema,\n  //   TFullSearchSchema,\n  //   TAllParams,\n  //   TContext,\n  //   TAllContext\n  // >,\n) => any\n\nexport interface LoaderContext<\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = {},\n  TAllParams = {},\n  TContext extends AnyContext = AnyContext,\n  TAllContext extends AnyContext = AnyContext,\n> {\n  params: TAllParams\n  routeSearch: TSearchSchema\n  search: TFullSearchSchema\n  abortController: AbortController\n  preload: boolean\n  routeContext: TContext\n  context: TAllContext\n  // serverOnly: <\n  //   TServer extends object | (() => object),\n  //   TClient extends object | (() => object),\n  // >(\n  //   server: TServer,\n  //   client: TClient,\n  // ) => (TServer extends () => infer TReturn ? TReturn : TServer) &\n  //   (TClient extends () => infer TReturn ? TReturn : TClient)\n}\n\nexport type UnloaderFn<TPath extends string> = (\n  routeMatch: RouteMatch<any, Route>,\n) => void\n\nexport type SearchFilter<T, U = T> = (prev: T) => U\n\ntype ResolveId<\n  TParentRoute,\n  TCustomId extends string,\n  TPath extends string,\n> = TParentRoute extends { id: infer TParentId extends string }\n  ? RoutePrefix<TParentId, string extends TCustomId ? TPath : TCustomId>\n  : RootRouteId\n\nexport type InferFullSearchSchema<TRoute> = TRoute extends {\n  isRoot: true\n  __types: {\n    searchSchema: infer TSearchSchema\n  }\n}\n  ? TSearchSchema\n  : TRoute extends {\n      __types: {\n        fullSearchSchema: infer TFullSearchSchema\n      }\n    }\n  ? TFullSearchSchema\n  : {}\n\nexport type ResolveFullSearchSchema<TParentRoute, TSearchSchema> =\n  InferFullSearchSchema<TParentRoute> & TSearchSchema\n\nexport interface AnyRoute\n  extends Route<\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any\n  > {}\n\nexport type AnyRouteWithRouterContext<TRouterContext extends AnyContext> =\n  Route<\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    any,\n    TRouterContext,\n    any,\n    any\n  >\n\ntype MergeFromParent<T, U> = IsAny<T, U, T & U>\n\nexport type UseLoaderResult<T> = T extends Record<PropertyKey, infer U>\n  ? {\n      [K in keyof T]: UseLoaderResultPromise<T[K]>\n    }\n  : UseLoaderResultPromise<T>\n\nexport type UseLoaderResultPromise<T> = T extends Promise<infer U>\n  ? StreamedPromise<U>\n  : T\n\nexport type StreamedPromise<T> = {\n  promise: Promise<T>\n  status: 'resolved' | 'pending'\n  data: T\n  resolve: (value: T) => void\n}\n\nexport class Route<\n  TParentRoute extends AnyRoute = AnyRoute,\n  TPath extends string = '/',\n  TFullPath extends ResolveFullPath<TParentRoute, TPath> = ResolveFullPath<\n    TParentRoute,\n    TPath\n  >,\n  TCustomId extends string = string,\n  TId extends ResolveId<TParentRoute, TCustomId, TPath> = ResolveId<\n    TParentRoute,\n    TCustomId,\n    TPath\n  >,\n  TLoader = unknown,\n  TSearchSchema extends AnySearchSchema = {},\n  TFullSearchSchema extends AnySearchSchema = ResolveFullSearchSchema<\n    TParentRoute,\n    TSearchSchema\n  >,\n  TParams extends Record<ParsePathParams<TPath>, any> = Record<\n    ParsePathParams<TPath>,\n    string\n  >,\n  TAllParams extends MergeFromParent<\n    TParentRoute['__types']['allParams'],\n    TParams\n  > = MergeFromParent<TParentRoute['__types']['allParams'], TParams>,\n  TParentContext extends TParentRoute['__types']['routeContext'] = TParentRoute['__types']['routeContext'],\n  TAllParentContext extends TParentRoute['__types']['context'] = TParentRoute['__types']['context'],\n  TRouteContext extends RouteContext = RouteContext,\n  TContext extends MergeFromParent<\n    TParentRoute['__types']['context'],\n    TRouteContext\n  > = MergeFromParent<TParentRoute['__types']['context'], TRouteContext>,\n  TRouterContext extends AnyContext = AnyContext,\n  TChildren extends unknown = unknown,\n  TRoutesInfo extends DefaultRoutesInfo = DefaultRoutesInfo,\n> {\n  __types!: {\n    parentRoute: TParentRoute\n    path: TPath\n    to: TrimPathRight<TFullPath>\n    fullPath: TFullPath\n    customId: TCustomId\n    id: TId\n    loader: TLoader\n    searchSchema: TSearchSchema\n    fullSearchSchema: TFullSearchSchema\n    params: TParams\n    allParams: TAllParams\n    parentContext: TParentContext\n    allParentContext: TAllParentContext\n    routeContext: TRouteContext\n    context: TContext\n    children: TChildren\n    routesInfo: TRoutesInfo\n    routerContext: TRouterContext\n  }\n  isRoot: TParentRoute extends Route<any> ? true : false\n  options: RouteOptions<\n    TParentRoute,\n    TCustomId,\n    TPath,\n    TLoader,\n    InferFullSearchSchema<TParentRoute>,\n    TSearchSchema,\n    InferFullSearchSchema<TParentRoute> & TSearchSchema,\n    TParentRoute['__types']['allParams'],\n    TParams,\n    TAllParams,\n    TParentContext,\n    TAllParentContext,\n    TRouteContext,\n    TContext\n  >\n\n  // Set up in this.init()\n  parentRoute!: TParentRoute\n  id!: TId\n  // customId!: TCustomId\n  path!: TPath\n  fullPath!: TFullPath\n  to!: TrimPathRight<TFullPath>\n\n  // Optional\n  children?: TChildren\n  originalIndex?: number\n  router?: Router<TRoutesInfo['routeTree'], TRoutesInfo>\n  rank!: number\n\n  constructor(\n    options: RouteOptions<\n      TParentRoute,\n      TCustomId,\n      TPath,\n      TLoader,\n      InferFullSearchSchema<TParentRoute>,\n      TSearchSchema,\n      TFullSearchSchema,\n      TParentRoute['__types']['allParams'],\n      TParams,\n      TAllParams,\n      TParentContext,\n      TAllParentContext,\n      TRouteContext,\n      TContext\n    >,\n  ) {\n    this.options = (options as any) || {}\n    this.isRoot = !options?.getParentRoute as any\n  }\n\n  init = (opts: { originalIndex: number; router: AnyRouter }) => {\n    this.originalIndex = opts.originalIndex\n    this.router = opts.router\n\n    const allOptions = this.options as RouteOptions<\n      TParentRoute,\n      TCustomId,\n      TPath,\n      TLoader,\n      InferFullSearchSchema<TParentRoute>,\n      TSearchSchema,\n      TFullSearchSchema,\n      TParentRoute['__types']['allParams'],\n      TParams,\n      TAllParams,\n      TParentContext,\n      TAllParentContext,\n      TRouteContext,\n      TContext\n    > &\n      RouteOptionsBaseIntersection<TCustomId, TPath>\n\n    const isRoot = !allOptions?.path && !allOptions?.id\n\n    this.parentRoute = this.options?.getParentRoute?.()\n\n    if (isRoot) {\n      this.path = rootRouteId as TPath\n    } else {\n      invariant(\n        this.parentRoute,\n        `Child Route instances must pass a 'getParentRoute: () => ParentRoute' option that returns a Route instance.`,\n      )\n    }\n\n    let path: undefined | string = isRoot ? rootRouteId : allOptions.path\n\n    // If the path is anything other than an index path, trim it up\n    if (path && path !== '/') {\n      path = trimPath(path)\n    }\n\n    const customId = allOptions?.id || path\n\n    // Strip the parentId prefix from the first level of children\n    let id = isRoot\n      ? rootRouteId\n      : joinPaths([\n          (this.parentRoute.id as any) === rootRouteId\n            ? ''\n            : this.parentRoute.id,\n          customId,\n        ])\n\n    if (path === rootRouteId) {\n      path = '/'\n    }\n\n    if (id !== rootRouteId) {\n      id = joinPaths(['/', id])\n    }\n\n    const fullPath =\n      id === rootRouteId ? '/' : joinPaths([this.parentRoute.fullPath, path])\n\n    this.path = path as TPath\n    this.id = id as TId\n    // this.customId = customId as TCustomId\n    this.fullPath = fullPath as TFullPath\n    this.to = fullPath as TrimPathRight<TFullPath>\n  }\n\n  addChildren = <TNewChildren extends AnyRoute[]>(\n    children: TNewChildren,\n  ): Route<\n    TParentRoute,\n    TPath,\n    TFullPath,\n    TCustomId,\n    TId,\n    TLoader,\n    TSearchSchema,\n    TFullSearchSchema,\n    TParams,\n    TAllParams,\n    TParentContext,\n    TAllParentContext,\n    TRouteContext,\n    TContext,\n    TRouterContext,\n    TNewChildren,\n    TRoutesInfo\n  > => {\n    this.children = children as any\n    return this as any\n  }\n\n  useMatch = <TStrict extends boolean = true, TSelected = TContext>(opts?: {\n    strict?: TStrict\n    select?: (search: TContext) => TSelected\n  }): TStrict extends true ? TSelected : TSelected | undefined => {\n    return useMatch({ ...opts, from: this.id }) as any\n  }\n\n  useLoader = <TStrict extends boolean = true, TSelected = TLoader>(opts?: {\n    strict?: TStrict\n    select?: (search: TLoader) => TSelected\n  }): TStrict extends true\n    ? UseLoaderResult<TSelected>\n    : UseLoaderResult<TSelected> | undefined => {\n    return useLoader({ ...opts, from: this.id }) as any\n  }\n\n  useContext = <TStrict extends boolean = true, TSelected = TContext>(opts?: {\n    strict?: TStrict\n    select?: (search: TContext) => TSelected\n  }): TStrict extends true ? TSelected : TSelected | undefined => {\n    return useMatch({\n      ...opts,\n      from: this.id,\n      select: (d: any) => opts?.select?.(d.context) ?? d.context,\n    } as any)\n  }\n\n  useSearch = <\n    TStrict extends boolean = true,\n    TSelected = TFullSearchSchema,\n  >(opts?: {\n    strict?: TStrict\n    select?: (search: TFullSearchSchema) => TSelected\n  }): TStrict extends true ? TSelected : TSelected | undefined => {\n    return useSearch({ ...opts, from: this.id } as any)\n  }\n\n  useParams = <TStrict extends boolean = true, TSelected = TAllParams>(opts?: {\n    strict?: TStrict\n    select?: (search: TAllParams) => TSelected\n  }): TStrict extends true ? TSelected : TSelected | undefined => {\n    return useParams({ ...opts, from: this.id } as any)\n  }\n}\n\nexport type AnyRootRoute = RootRoute<any, any, any, any>\n\nexport class RouterContext<TRouterContext extends {}> {\n  constructor() {}\n\n  createRootRoute = <\n    TLoader = unknown,\n    TSearchSchema extends AnySearchSchema = {},\n    TContext extends RouteContext = RouteContext,\n  >(\n    options?: Omit<\n      RouteOptions<\n        AnyRoute,\n        RootRouteId,\n        '',\n        TLoader,\n        {},\n        TSearchSchema,\n        NoInfer<TSearchSchema>,\n        {},\n        TRouterContext,\n        TRouterContext,\n        TContext,\n        NoInfer<TContext>\n      >,\n      | 'path'\n      | 'id'\n      | 'getParentRoute'\n      | 'caseSensitive'\n      | 'parseParams'\n      | 'stringifyParams'\n    >,\n  ) => {\n    return new RootRoute<TLoader, TSearchSchema, TContext, TRouterContext>(\n      options,\n    )\n  }\n\n  //   return <\n  //     TLoader = unknown,\n  //     TSearchSchema extends AnySearchSchema = {},\n  //     TContext extends {} = {},\n  //   >(\n  //     options?: Omit<\n  //       RouteOptions<\n  //         AnyRoute,\n  //         RootRouteId,\n  //         '',\n  //         TLoader,\n  //         {},\n  //         TSearchSchema,\n  //         NoInfer<TSearchSchema>,\n  //         {},\n  //         TRouterContext,\n  //         TRouterContext,\n  //         TContext,\n  //         TRouterContext & TContext\n  //       >,\n  //       'path' | 'id' | 'getParentRoute' | 'caseSensitive'\n  //     >,\n  //   ) =>\n  //     new RootRoute<TLoader, TSearchSchema, TContext, TRouterContext>(\n  //       options as any,\n  //     )\n  // }\n}\n\nexport class RootRoute<\n  TLoader = unknown,\n  TSearchSchema extends AnySearchSchema = {},\n  TContext extends RouteContext = RouteContext,\n  TRouterContext extends {} = {},\n> extends Route<\n  any,\n  '/',\n  '/',\n  string,\n  RootRouteId,\n  TLoader,\n  TSearchSchema,\n  TSearchSchema,\n  {},\n  {},\n  TRouterContext,\n  TRouterContext,\n  MergeFromParent<TRouterContext, TContext>,\n  MergeFromParent<TRouterContext, TContext>,\n  TRouterContext,\n  any,\n  any\n> {\n  constructor(\n    options?: Omit<\n      RouteOptions<\n        AnyRoute,\n        RootRouteId,\n        '',\n        TLoader,\n        {},\n        TSearchSchema,\n        NoInfer<TSearchSchema>,\n        {},\n        TRouterContext,\n        TRouterContext,\n        TContext,\n        NoInfer<TContext>\n      >,\n      | 'path'\n      | 'id'\n      | 'getParentRoute'\n      | 'caseSensitive'\n      | 'parseParams'\n      | 'stringifyParams'\n    >,\n  ) {\n    super(options as any)\n  }\n}\n\ntype ResolveFullPath<\n  TParentRoute extends AnyRoute,\n  TPath extends string,\n  TPrefixed extends RoutePrefix<TParentRoute['fullPath'], TPath> = RoutePrefix<\n    TParentRoute['fullPath'],\n    TPath\n  >,\n> = TPrefixed extends RootRouteId ? '/' : TPrefixed\n\ntype RoutePrefix<\n  TPrefix extends string,\n  TPath extends string,\n> = string extends TPath\n  ? RootRouteId\n  : TPath extends string\n  ? TPrefix extends RootRouteId\n    ? TPath extends '/'\n      ? '/'\n      : `/${TrimPath<TPath>}`\n    : `${TPrefix}/${TPath}` extends '/'\n    ? '/'\n    : `/${TrimPathLeft<`${TrimPathRight<TPrefix>}/${TrimPath<TPath>}`>}`\n  : never\n\nexport type TrimPath<T extends string> = '' extends T\n  ? ''\n  : TrimPathRight<TrimPathLeft<T>>\n\nexport type TrimPathLeft<T extends string> =\n  T extends `${RootRouteId}/${infer U}`\n    ? TrimPathLeft<U>\n    : T extends `/${infer U}`\n    ? TrimPathLeft<U>\n    : T\nexport type TrimPathRight<T extends string> = T extends '/'\n  ? '/'\n  : T extends `${infer U}/`\n  ? TrimPathRight<U>\n  : T\n\n// const rootRoute = new RootRoute({\n//   validateSearch: () => null as unknown as { root?: boolean },\n// })\n\n// const aRoute = new Route({\n//   getParentRoute: () => rootRoute,\n//   path: 'a',\n//   validateSearch: () => null as unknown as { a?: string },\n// })\n\n// const bRoute = new Route({\n//   getParentRoute: () => aRoute,\n//   path: 'b',\n// })\n\n// const rootIsRoot = rootRoute.isRoot\n// //    ^?\n// const aIsRoot = aRoute.isRoot\n// //    ^?\n\n// const rId = rootRoute.id\n// //    ^?\n// const aId = aRoute.id\n// //    ^?\n// const bId = bRoute.id\n// //    ^?\n\n// const rPath = rootRoute.fullPath\n// //    ^?\n// const aPath = aRoute.fullPath\n// //    ^?\n// const bPath = bRoute.fullPath\n// //    ^?\n\n// const rSearch = rootRoute.__types.fullSearchSchema\n// //    ^?\n// const aSearch = aRoute.__types.fullSearchSchema\n// //    ^?\n// const bSearch = bRoute.__types.fullSearchSchema\n// //    ^?\n\n// const config = rootRoute.addChildren([aRoute.addChildren([bRoute])])\n// //    ^?\n","import { decode, encode } from './qss'\nimport { AnySearchSchema } from './route'\n\nexport const defaultParseSearch = parseSearchWith(JSON.parse)\nexport const defaultStringifySearch = stringifySearchWith(JSON.stringify)\n\nexport function parseSearchWith(parser: (str: string) => any) {\n  return (searchStr: string): AnySearchSchema => {\n    if (searchStr.substring(0, 1) === '?') {\n      searchStr = searchStr.substring(1)\n    }\n\n    let query: Record<string, unknown> = decode(searchStr)\n\n    // Try to parse any query params that might be json\n    for (let key in query) {\n      const value = query[key]\n      if (typeof value === 'string') {\n        try {\n          query[key] = parser(value)\n        } catch (err) {\n          //\n        }\n      }\n    }\n\n    return query\n  }\n}\n\nexport function stringifySearchWith(stringify: (search: any) => string) {\n  return (search: Record<string, any>) => {\n    search = { ...search }\n\n    if (search) {\n      Object.keys(search).forEach((key) => {\n        const val = search[key]\n        if (typeof val === 'undefined' || val === undefined) {\n          delete search[key]\n        } else if (val && typeof val === 'object' && val !== null) {\n          try {\n            search[key] = stringify(val)\n          } catch (err) {\n            // silent\n          }\n        }\n      })\n    }\n\n    const searchStr = encode(search as Record<string, string>).toString()\n\n    return searchStr ? `?${searchStr}` : ''\n  }\n}\n","import { Store } from '@tanstack/react-store'\nimport invariant from 'tiny-invariant'\n\n//\n\nimport {\n  LinkInfo,\n  LinkOptions,\n  NavigateOptions,\n  ToOptions,\n  ResolveRelativePath,\n} from './link'\nimport {\n  cleanPath,\n  interpolatePath,\n  joinPaths,\n  matchPathname,\n  parsePathname,\n  resolvePath,\n  trimPath,\n  trimPathRight,\n} from './path'\nimport {\n  Route,\n  AnySearchSchema,\n  AnyRoute,\n  RootRoute,\n  AnyContext,\n  AnyPathParams,\n} from './route'\nimport {\n  RoutesInfo,\n  AnyRoutesInfo,\n  RoutesById,\n  RoutesByPath,\n  DefaultRoutesInfo,\n} from './routeInfo'\nimport { defaultParseSearch, defaultStringifySearch } from './searchParams'\nimport {\n  functionalUpdate,\n  last,\n  NoInfer,\n  pick,\n  PickAsRequired,\n  Timeout,\n  Updater,\n  replaceEqualDeep,\n  partialDeepEqual,\n} from './utils'\nimport {\n  createBrowserHistory,\n  createMemoryHistory,\n  RouterHistory,\n} from './history'\nimport { RouteComponent } from './react'\n\n//\n\ndeclare global {\n  interface Window {\n    __TSR_DEHYDRATED__?: HydrationCtx\n  }\n\n  interface Error {\n    cause: unknown\n  }\n\n  interface ErrorConstructor {\n    new (reason: string, options?: { cause?: unknown }): Error\n  }\n}\n\nexport interface Register {\n  // router: Router\n}\n\nexport type AnyRouter = Router<any, any, any>\n\nexport type RegisteredRouterPair = Register extends {\n  router: infer TRouter extends AnyRouter\n}\n  ? [TRouter, TRouter['types']['RoutesInfo']]\n  : [Router, AnyRoutesInfo]\n\nexport type RegisteredRouter = RegisteredRouterPair[0]\nexport type RegisteredRoutesInfo = RegisteredRouterPair[1]\n\nexport interface LocationState {}\n\nexport interface ParsedLocation<\n  TSearchObj extends AnySearchSchema = {},\n  TState extends LocationState = LocationState,\n> {\n  href: string\n  pathname: string\n  search: TSearchObj\n  searchStr: string\n  state: TState\n  hash: string\n  key?: string\n}\n\nexport interface FromLocation {\n  pathname: string\n  search?: unknown\n  key?: string\n  hash?: string\n}\n\nexport type SearchSerializer = (searchObj: Record<string, any>) => string\nexport type SearchParser = (searchStr: string) => Record<string, any>\n\nexport type HydrationCtx = {\n  router: DehydratedRouter\n  payload: Record<string, any>\n}\n\nexport interface RouteMatch<\n  TRoutesInfo extends AnyRoutesInfo = DefaultRoutesInfo,\n  TRoute extends AnyRoute = Route,\n> {\n  id: string\n  routeId: string\n  pathname: string\n  params: TRoute['__types']['allParams']\n  status: 'pending' | 'success' | 'error'\n  error: unknown\n  paramsError: unknown\n  searchError: unknown\n  updatedAt: number\n  loader: TRoute['__types']['loader']\n  loadPromise?: Promise<void>\n  __resolveLoadPromise?: () => void\n  routeContext: TRoute['__types']['routeContext']\n  context: TRoute['__types']['context']\n  routeSearch: TRoute['__types']['searchSchema']\n  search: TRoutesInfo['fullSearchSchema'] &\n    TRoute['__types']['fullSearchSchema']\n  fetchedAt: number\n  abortController: AbortController\n}\n\nexport type AnyRouteMatch = RouteMatch<AnyRoutesInfo, AnyRoute>\n\nexport type RouterContextOptions<TRouteTree extends AnyRoute> =\n  AnyContext extends TRouteTree['__types']['routerContext']\n    ? {\n        context?: TRouteTree['__types']['routerContext']\n      }\n    : {\n        context: TRouteTree['__types']['routerContext']\n      }\n\nexport interface RouterOptions<\n  TRouteTree extends AnyRoute,\n  TDehydrated extends Record<string, any>,\n> {\n  history?: RouterHistory\n  stringifySearch?: SearchSerializer\n  parseSearch?: SearchParser\n  defaultPreload?: false | 'intent'\n  defaultPreloadDelay?: number\n  defaultComponent?: RouteComponent\n  defaultErrorComponent?: RouteComponent<{\n    error: Error\n    info: { componentStack: string }\n  }>\n  defaultPendingComponent?: RouteComponent\n  defaultLoaderMaxAge?: number\n  defaultLoaderGcMaxAge?: number\n  caseSensitive?: boolean\n  routeTree?: TRouteTree\n  basepath?: string\n  createRoute?: (opts: { route: AnyRoute; router: AnyRouter }) => void\n  onRouteChange?: () => void\n  // fetchServerDataFn?: FetchServerDataFn\n  context?: TRouteTree['__types']['routerContext']\n  Wrap?: React.ComponentType<{\n    children: React.ReactNode\n    dehydratedState?: TDehydrated\n  }>\n  dehydrate?: () => TDehydrated\n  hydrate?: (dehydrated: TDehydrated) => void\n}\n\nexport interface RouterState<\n  TRoutesInfo extends AnyRoutesInfo = AnyRoutesInfo,\n  TState extends LocationState = LocationState,\n> {\n  status: 'idle' | 'pending'\n  matches: RouteMatch<TRoutesInfo, TRoutesInfo['routeIntersection']>[]\n  pendingMatches: RouteMatch<TRoutesInfo, TRoutesInfo['routeIntersection']>[]\n  preloadMatches: Record<\n    string,\n    RouteMatch<TRoutesInfo, TRoutesInfo['routeIntersection']>\n  >\n  location: ParsedLocation<TRoutesInfo['fullSearchSchema'], TState>\n  resolvedLocation: ParsedLocation<TRoutesInfo['fullSearchSchema'], TState>\n  lastUpdated: number\n}\n\nexport type ListenerFn = () => void\n\nexport interface BuildNextOptions {\n  to?: string | number | null\n  params?: true | Updater<unknown>\n  search?: true | Updater<unknown>\n  hash?: true | Updater<string>\n  state?: LocationState\n  key?: string\n  from?: string\n  fromCurrent?: boolean\n  __matches?: AnyRouteMatch[]\n}\n\nexport interface MatchLocation {\n  to?: string | number | null\n  fuzzy?: boolean\n  caseSensitive?: boolean\n  from?: string\n  fromCurrent?: boolean\n}\n\nexport interface MatchRouteOptions {\n  pending?: boolean\n  caseSensitive?: boolean\n  includeSearch?: boolean\n  fuzzy?: boolean\n}\n\ntype LinkCurrentTargetElement = {\n  preloadTimeout?: null | ReturnType<typeof setTimeout>\n}\n\nexport interface DehydratedRouterState\n  extends Pick<RouterState, 'status' | 'location' | 'lastUpdated'> {}\n\nexport interface DehydratedRouter {\n  state: DehydratedRouterState\n}\n\nexport type RouterConstructorOptions<\n  TRouteTree extends AnyRoute,\n  TDehydrated extends Record<string, any>,\n> = Omit<RouterOptions<TRouteTree, TDehydrated>, 'context'> &\n  RouterContextOptions<TRouteTree>\n\nexport const componentTypes = [\n  'component',\n  'errorComponent',\n  'pendingComponent',\n] as const\n\nexport class Router<\n  TRouteTree extends AnyRoute = AnyRoute,\n  TRoutesInfo extends AnyRoutesInfo = RoutesInfo<TRouteTree>,\n  TDehydrated extends Record<string, any> = Record<string, any>,\n> {\n  types!: {\n    RootRoute: TRouteTree\n    RoutesInfo: TRoutesInfo\n  }\n\n  options: PickAsRequired<\n    RouterOptions<TRouteTree, TDehydrated>,\n    'stringifySearch' | 'parseSearch' | 'context'\n  >\n  history!: RouterHistory\n  #unsubHistory?: () => void\n  basepath!: string\n  routeTree!: RootRoute\n  routesById!: RoutesById<TRoutesInfo>\n  routesByPath!: RoutesByPath<TRoutesInfo>\n  flatRoutes!: TRoutesInfo['routesByFullPath'][keyof TRoutesInfo['routesByFullPath']][]\n  navigateTimeout: undefined | Timeout\n  nextAction: undefined | 'push' | 'replace'\n  navigationPromise: undefined | Promise<void>\n\n  __store: Store<RouterState<TRoutesInfo>>\n  state: RouterState<TRoutesInfo>\n  startedLoadingAt = Date.now()\n  resolveNavigation: () => void = () => {}\n  dehydratedData?: TDehydrated\n\n  constructor(options: RouterConstructorOptions<TRouteTree, TDehydrated>) {\n    this.options = {\n      defaultPreloadDelay: 50,\n      context: undefined!,\n      ...options,\n      stringifySearch: options?.stringifySearch ?? defaultStringifySearch,\n      parseSearch: options?.parseSearch ?? defaultParseSearch,\n      // fetchServerDataFn: options?.fetchServerDataFn ?? defaultFetchServerDataFn,\n    }\n\n    this.__store = new Store<RouterState<TRoutesInfo>>(\n      getInitialRouterState(),\n      {\n        onUpdate: () => {\n          this.state = this.__store.state\n        },\n        defaultPriority: 'low',\n      },\n    )\n    this.state = this.__store.state\n\n    this.update(options)\n\n    const next = this.buildNext({\n      hash: true,\n      fromCurrent: true,\n      search: true,\n      state: true,\n    })\n\n    if (this.state.location.href !== next.href) {\n      this.#commitLocation({ ...next, replace: true })\n    }\n  }\n\n  reset = () => {\n    this.__store.setState((s) => Object.assign(s, getInitialRouterState()))\n  }\n\n  mount = () => {\n    // If the router matches are empty, start loading the matches\n    if (!this.state.matches.length) {\n      this.safeLoad()\n    }\n  }\n\n  update = (opts?: RouterOptions<any, any>): this => {\n    this.options = {\n      ...this.options,\n      ...opts,\n      context: {\n        ...this.options.context,\n        ...opts?.context,\n      },\n    }\n\n    if (\n      !this.history ||\n      (this.options.history && this.options.history !== this.history)\n    ) {\n      if (this.#unsubHistory) {\n        this.#unsubHistory()\n      }\n\n      this.history =\n        this.options.history ??\n        (isServer ? createMemoryHistory() : createBrowserHistory()!)\n\n      const parsedLocation = this.#parseLocation()\n\n      this.__store.setState((s) => ({\n        ...s,\n        resolvedLocation: parsedLocation,\n        location: parsedLocation,\n      }))\n\n      this.#unsubHistory = this.history.listen(() => {\n        this.safeLoad({\n          next: this.#parseLocation(this.state.location),\n        })\n      })\n    }\n\n    const { basepath, routeTree } = this.options\n\n    this.basepath = `/${trimPath(basepath ?? '') ?? ''}`\n\n    if (routeTree && routeTree !== this.routeTree) {\n      this.#buildRouteTree(routeTree)\n    }\n\n    return this\n  }\n\n  buildNext = (opts: BuildNextOptions): ParsedLocation => {\n    const next = this.#buildLocation(opts)\n\n    const __matches = this.matchRoutes(next.pathname, next.search)\n\n    return this.#buildLocation({\n      ...opts,\n      __matches,\n    })\n  }\n\n  cancelMatches = () => {\n    this.state.matches.forEach((match) => {\n      this.cancelMatch(match.id)\n    })\n  }\n\n  cancelMatch = (id: string) => {\n    this.getRouteMatch(id)?.abortController?.abort()\n  }\n\n  safeLoad = (opts?: { next?: ParsedLocation }) => {\n    this.load(opts).catch((err) => {\n      // console.warn(err)\n      // invariant(false, 'Encountered an error during router.load()! ☝️.')\n    })\n  }\n\n  load = async (opts?: { next?: ParsedLocation }): Promise<void> => {\n    this.#createNavigationPromise()\n\n    let now = Date.now()\n    const startedAt = now\n    this.startedLoadingAt = startedAt\n\n    // Cancel any pending matches\n    this.cancelMatches()\n\n    let pendingMatches!: RouteMatch<any, any>[]\n\n    this.__store.batch(() => {\n      if (opts?.next) {\n        // Ingest the new location\n        this.__store.setState((s) => ({\n          ...s,\n          location: opts.next!,\n        }))\n      }\n\n      // Match the routes\n      pendingMatches = this.matchRoutes(\n        this.state.location.pathname,\n        this.state.location.search,\n        {\n          // throwOnError: true,\n        },\n      )\n\n      this.__store.setState((s) => ({\n        ...s,\n        status: 'pending',\n        pendingMatches,\n      }))\n    })\n\n    // Load the matches\n    await this.loadMatches(pendingMatches)\n\n    if (this.startedLoadingAt !== startedAt) {\n      // Ignore side-effects of outdated side-effects\n      return this.navigationPromise\n    }\n\n    const prevLocation = this.state.resolvedLocation\n\n    this.__store.setState((s) => ({\n      ...s,\n      status: 'idle',\n      resolvedLocation: s.location,\n      matches: s.pendingMatches,\n      pendingMatches: [],\n    }))\n\n    if (prevLocation!.href !== this.state.location.href) {\n      this.options.onRouteChange?.()\n    }\n\n    this.resolveNavigation()\n  }\n\n  getRoute = <TId extends keyof TRoutesInfo['routesById']>(\n    id: TId,\n  ): TRoutesInfo['routesById'][TId] => {\n    const route = this.routesById[id]\n\n    invariant(route, `Route with id \"${id as string}\" not found`)\n\n    return route\n  }\n\n  preloadRoute = async (\n    navigateOpts: BuildNextOptions = this.state.location,\n  ) => {\n    const next = this.buildNext(navigateOpts)\n    const matches = this.matchRoutes(next.pathname, next.search, {\n      throwOnError: true,\n    })\n\n    const matchesById: any = {}\n\n    matches.forEach((m) => {\n      if (!this.state.matches.find((d) => d.id === m.id)) {\n        matchesById[m.id] = m\n      }\n    })\n\n    this.__store.setState((s) => {\n      return {\n        ...s,\n        preloadMatches: {\n          ...s.preloadMatches,\n          ...matchesById,\n        },\n      }\n    })\n\n    await this.loadMatches(matches, {\n      preload: true,\n    })\n    return matches\n  }\n\n  matchRoutes = (\n    pathname: string,\n    locationSearch: AnySearchSchema,\n    opts?: { throwOnError?: boolean },\n  ): RouteMatch<TRoutesInfo, TRoutesInfo['routeIntersection']>[] => {\n    let routeParams: AnyPathParams = {}\n\n    let foundRoute = this.flatRoutes.find((route) => {\n      const matchedParams = matchPathname(this.basepath, pathname, {\n        to: route.fullPath,\n        caseSensitive:\n          route.options.caseSensitive ?? this.options.caseSensitive,\n      })\n\n      if (matchedParams) {\n        routeParams = matchedParams\n        return true\n      }\n\n      return false\n    })\n\n    let routeCursor = foundRoute || (this.routesById['__root__'] as any)\n\n    let matchedRoutes: AnyRoute[] = [routeCursor]\n\n    while (routeCursor?.parentRoute) {\n      routeCursor = routeCursor.parentRoute\n      if (routeCursor) matchedRoutes.unshift(routeCursor)\n    }\n\n    // Alright, by now we should have all of our\n    // matching routes and their param pairs, let's\n    // Turn them into actual `Match` objects and\n    // accumulate the params into a single params bag\n    let allParams = {}\n\n    // Existing matches are matches that are already loaded along with\n    // pending matches that are still loading\n\n    const matches = matchedRoutes.map((route) => {\n      let parsedParams\n      let parsedParamsError\n\n      try {\n        parsedParams = route.options.parseParams?.(routeParams!) ?? routeParams\n      } catch (err: any) {\n        parsedParamsError = new PathParamError(err.message, {\n          cause: err,\n        })\n\n        if (opts?.throwOnError) {\n          throw parsedParamsError\n        }\n      }\n\n      // Add the parsed params to the accumulated params bag\n      Object.assign(allParams, parsedParams)\n\n      const interpolatedPath = interpolatePath(route.path, allParams)\n      const matchId =\n        interpolatePath(route.id, allParams, true) +\n        (route.options.getKey?.({\n          params: allParams,\n          search: locationSearch,\n        }) ?? '')\n\n      // Waste not, want not. If we already have a match for this route,\n      // reuse it. This is important for layout routes, which might stick\n      // around between navigation actions that only change leaf routes.\n      const existingMatch = this.getRouteMatch(matchId)\n\n      if (existingMatch) {\n        // Return a copy, we don't want to mutate the existing match\n        return { ...existingMatch }\n      }\n\n      // Create a fresh route match\n      const hasLoaders = !!(\n        route.options.loader ||\n        componentTypes.some((d) => route.options[d]?.preload)\n      )\n\n      const routeMatch: RouteMatch = {\n        id: matchId,\n        routeId: route.id,\n        params: allParams,\n        pathname: joinPaths([this.basepath, interpolatedPath]),\n        updatedAt: 0,\n        routeSearch: {},\n        search: {} as any,\n        status: hasLoaders ? 'pending' : 'success',\n        error: undefined,\n        paramsError: parsedParamsError,\n        searchError: undefined,\n        loader: undefined,\n        loadPromise: Promise.resolve(),\n        routeContext: undefined!,\n        context: undefined!,\n        abortController: new AbortController(),\n        fetchedAt: 0,\n      }\n\n      return routeMatch\n    })\n\n    // Take each match and resolve its search params and context\n    // This has to happen after the matches are created or found\n    // so that we can use the parent match's search params and context\n    matches.forEach((match, i): any => {\n      const parentMatch = matches[i - 1]\n      const route = this.getRoute(match.routeId)\n\n      const searchInfo = (() => {\n        // Validate the search params and stabilize them\n        const parentSearchInfo = {\n          search: parentMatch?.search ?? locationSearch,\n          routeSearch: parentMatch?.routeSearch ?? locationSearch,\n        }\n\n        try {\n          const validator =\n            typeof route.options.validateSearch === 'object'\n              ? route.options.validateSearch.parse\n              : route.options.validateSearch\n\n          const routeSearch = validator?.(parentSearchInfo.search) ?? {}\n\n          const search = {\n            ...parentSearchInfo.search,\n            ...routeSearch,\n          }\n\n          return {\n            routeSearch: replaceEqualDeep(match.routeSearch, routeSearch),\n            search: replaceEqualDeep(match.search, search),\n          }\n        } catch (err: any) {\n          match.searchError = new SearchParamError(err.message, {\n            cause: err,\n          })\n\n          if (opts?.throwOnError) {\n            throw match.searchError\n          }\n\n          return parentSearchInfo\n        }\n      })()\n\n      const contextInfo = (() => {\n        try {\n          const routeContext =\n            route.options.getContext?.({\n              parentContext: parentMatch?.routeContext ?? {},\n              context: parentMatch?.context ?? this?.options.context ?? {},\n              params: match.params,\n              search: match.search,\n            }) || ({} as any)\n\n          const context = {\n            ...(parentMatch?.context ?? this?.options.context),\n            ...routeContext,\n          } as any\n\n          return {\n            context,\n            routeContext,\n          }\n        } catch (err) {\n          route.options.onError?.(err)\n          throw err\n        }\n      })()\n\n      Object.assign(match, {\n        ...searchInfo,\n        ...contextInfo,\n      })\n    })\n\n    return matches\n  }\n\n  loadMatches = async (\n    resolvedMatches: AnyRouteMatch[],\n    opts?: {\n      preload?: boolean\n    },\n  ) => {\n    let firstBadMatchIndex: number | undefined\n\n    // Check each match middleware to see if the route can be accessed\n    try {\n      await Promise.all(\n        resolvedMatches.map(async (match, index) => {\n          const route = this.getRoute(match.routeId)\n\n          const handleError = (\n            err: any,\n            handler: undefined | ((err: any) => void),\n          ) => {\n            firstBadMatchIndex = firstBadMatchIndex ?? index\n            handler = handler || route.options.onError\n\n            if (isRedirect(err)) {\n              throw err\n            }\n\n            try {\n              handler?.(err)\n            } catch (errorHandlerErr) {\n              err = errorHandlerErr\n\n              if (isRedirect(errorHandlerErr)) {\n                throw errorHandlerErr\n              }\n            }\n\n            this.setRouteMatch(match.id, (s) => ({\n              ...s,\n              error: err,\n              status: 'error',\n              updatedAt: Date.now(),\n            }))\n          }\n\n          if (match.paramsError) {\n            handleError(match.paramsError, route.options.onParseParamsError)\n          }\n\n          if (match.searchError) {\n            handleError(match.searchError, route.options.onValidateSearchError)\n          }\n\n          try {\n            await route.options.beforeLoad?.({\n              router: this as any,\n              match,\n            })\n          } catch (err) {\n            handleError(err, route.options.onBeforeLoadError)\n          }\n        }),\n      )\n    } catch (err) {\n      if (isRedirect(err)) {\n        if (!opts?.preload) {\n          this.navigate(err as any)\n        }\n        return\n      }\n\n      throw err // we should never end up here\n    }\n\n    const validResolvedMatches = resolvedMatches.slice(0, firstBadMatchIndex)\n    const matchPromises: Promise<any>[] = []\n\n    validResolvedMatches.forEach((match, index) => {\n      matchPromises.push(\n        Promise.resolve().then(async () => {\n          const parentMatchPromise = matchPromises[index - 1]\n          const route = this.getRoute(match.routeId)\n          const fetchedAt = Date.now()\n          const loadPromise = Promise.resolve().then(async () => {\n            const checkLatest = () => {\n              const latest = this.getRouteMatch(match.id)\n              return latest && latest.fetchedAt !== fetchedAt\n                ? latest.loadPromise\n                : undefined\n            }\n\n            let latestPromise\n\n            const componentsPromise = (async () => {\n              // then run all component and data loaders in parallel\n              // For each component type, potentially load it asynchronously\n\n              await Promise.all(\n                componentTypes.map(async (type) => {\n                  const component = route.options[type]\n\n                  if (component?.preload) {\n                    await component.preload()\n                  }\n                }),\n              )\n            })()\n\n            const loaderPromise = Promise.resolve().then(() => {\n              if (route.options.loader) {\n                return route.options.loader({\n                  ...match,\n                  preload: !!opts?.preload,\n                  parentMatchPromise,\n                })\n              }\n              return\n            })\n\n            try {\n              const [_, loader] = await Promise.all([\n                componentsPromise,\n                loaderPromise,\n              ])\n              if ((latestPromise = checkLatest())) return await latestPromise\n\n              if (\n                !opts?.preload ||\n                !this.state.matches.find((d) => d.id === match.id)\n              ) {\n                this.setRouteMatch(match.id, (s) => ({\n                  ...s,\n                  error: undefined,\n                  status: 'success',\n                  updatedAt: Date.now(),\n                  loader,\n                }))\n              }\n            } catch (err) {\n              if ((latestPromise = checkLatest())) return await latestPromise\n\n              if (isRedirect(err)) {\n                if (!opts?.preload) {\n                  this.navigate(err as any)\n                }\n                return\n              }\n\n              const errorHandler =\n                route.options.onLoadError ?? route.options.onError\n\n              let caughtError = err\n\n              try {\n                errorHandler?.(err)\n              } catch (errorHandlerErr) {\n                caughtError = errorHandlerErr\n                if (isRedirect(errorHandlerErr)) {\n                  if (!opts?.preload) {\n                    this.navigate(errorHandlerErr as any)\n                  }\n                  return\n                }\n              }\n\n              this.setRouteMatch(match.id, (s) => ({\n                ...s,\n                error: caughtError,\n                status: 'error',\n                updatedAt: Date.now(),\n              }))\n            } finally {\n              if ((latestPromise = checkLatest())) return await latestPromise\n              if (opts?.preload) {\n                this.__store.setState((s) => {\n                  const preloadMatches = { ...s.preloadMatches }\n                  delete preloadMatches[match.id]\n                  return {\n                    ...s,\n                    preloadMatches,\n                  }\n                })\n              }\n            }\n          })\n\n          this.setRouteMatch(match.id, (s) => ({\n            ...s,\n            loadPromise,\n            fetchedAt,\n          }))\n\n          await loadPromise\n        }),\n      )\n    })\n\n    await Promise.all(matchPromises)\n  }\n\n  reload = () => {\n    this.navigate({\n      fromCurrent: true,\n      replace: true,\n      search: true,\n    } as any)\n  }\n\n  resolvePath = (from: string, path: string) => {\n    return resolvePath(this.basepath!, from, cleanPath(path))\n  }\n\n  navigate = async <TFrom extends string = '/', TTo extends string = ''>({\n    from,\n    to = '' as any,\n    search,\n    hash,\n    replace,\n    params,\n  }: NavigateOptions<TRoutesInfo, TFrom, TTo>) => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n    const toString = String(to)\n    const fromString = typeof from === 'undefined' ? from : String(from)\n    let isExternal\n\n    try {\n      new URL(`${toString}`)\n      isExternal = true\n    } catch (e) {}\n\n    invariant(\n      !isExternal,\n      'Attempting to navigate to external url with this.navigate!',\n    )\n\n    return this.#commitLocation({\n      from: fromString,\n      to: toString,\n      search,\n      hash,\n      replace,\n      params,\n    })\n  }\n\n  matchRoute = <\n    TFrom extends string = '/',\n    TTo extends string = '',\n    TResolved extends string = ResolveRelativePath<TFrom, NoInfer<TTo>>,\n  >(\n    location: ToOptions<TRoutesInfo, TFrom, TTo>,\n    opts?: MatchRouteOptions,\n  ): false | TRoutesInfo['routesById'][TResolved]['__types']['allParams'] => {\n    location = {\n      ...location,\n      to: location.to\n        ? this.resolvePath(location.from ?? '', location.to)\n        : undefined,\n    } as any\n\n    const next = this.buildNext(location)\n    if (opts?.pending && this.state.status !== 'pending') {\n      return false\n    }\n\n    const baseLocation = opts?.pending\n      ? this.state.location\n      : this.state.resolvedLocation\n\n    if (!baseLocation) {\n      return false\n    }\n\n    const match = matchPathname(this.basepath, baseLocation.pathname, {\n      ...opts,\n      to: next.pathname,\n    }) as any\n\n    if (!match) {\n      return false\n    }\n\n    if (opts?.includeSearch ?? true) {\n      return partialDeepEqual(baseLocation.search, next.search) ? match : false\n    }\n\n    return match\n  }\n\n  buildLink = <TFrom extends string = '/', TTo extends string = ''>({\n    from,\n    to = '.' as any,\n    search,\n    params,\n    hash,\n    target,\n    replace,\n    activeOptions,\n    preload,\n    preloadDelay: userPreloadDelay,\n    disabled,\n  }: LinkOptions<TRoutesInfo, TFrom, TTo>): LinkInfo => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n\n    try {\n      new URL(`${to}`)\n      return {\n        type: 'external',\n        href: to,\n      }\n    } catch (e) {}\n\n    const nextOpts = {\n      from,\n      to,\n      search,\n      params,\n      hash,\n      replace,\n    }\n\n    const next = this.buildNext(nextOpts)\n\n    preload = preload ?? this.options.defaultPreload\n    const preloadDelay =\n      userPreloadDelay ?? this.options.defaultPreloadDelay ?? 0\n\n    // Compare path/hash for matches\n    const currentPathSplit = this.state.location.pathname.split('/')\n    const nextPathSplit = next.pathname.split('/')\n    const pathIsFuzzyEqual = nextPathSplit.every(\n      (d, i) => d === currentPathSplit[i],\n    )\n    // Combine the matches based on user options\n    const pathTest = activeOptions?.exact\n      ? this.state.location.pathname === next.pathname\n      : pathIsFuzzyEqual\n    const hashTest = activeOptions?.includeHash\n      ? this.state.location.hash === next.hash\n      : true\n    const searchTest =\n      activeOptions?.includeSearch ?? true\n        ? partialDeepEqual(this.state.location.search, next.search)\n        : true\n\n    // The final \"active\" test\n    const isActive = pathTest && hashTest && searchTest\n\n    // The click handler\n    const handleClick = (e: MouseEvent) => {\n      if (\n        !disabled &&\n        !isCtrlEvent(e) &&\n        !e.defaultPrevented &&\n        (!target || target === '_self') &&\n        e.button === 0\n      ) {\n        e.preventDefault()\n\n        // All is well? Navigate!\n        this.#commitLocation(nextOpts as any)\n      }\n    }\n\n    // The click handler\n    const handleFocus = (e: MouseEvent) => {\n      if (preload) {\n        this.preloadRoute(nextOpts).catch((err) => {\n          console.warn(err)\n          console.warn('Error preloading route! ☝️')\n        })\n      }\n    }\n\n    const handleTouchStart = (e: TouchEvent) => {\n      this.preloadRoute(nextOpts).catch((err) => {\n        console.warn(err)\n        console.warn('Error preloading route! ☝️')\n      })\n    }\n\n    const handleEnter = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (preload) {\n        if (target.preloadTimeout) {\n          return\n        }\n\n        target.preloadTimeout = setTimeout(() => {\n          target.preloadTimeout = null\n          this.preloadRoute(nextOpts).catch((err) => {\n            console.warn(err)\n            console.warn('Error preloading route! ☝️')\n          })\n        }, preloadDelay)\n      }\n    }\n\n    const handleLeave = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (target.preloadTimeout) {\n        clearTimeout(target.preloadTimeout)\n        target.preloadTimeout = null\n      }\n    }\n\n    return {\n      type: 'internal',\n      next,\n      handleFocus,\n      handleClick,\n      handleEnter,\n      handleLeave,\n      handleTouchStart,\n      isActive,\n      disabled,\n    }\n  }\n\n  dehydrate = (): DehydratedRouter => {\n    return {\n      state: pick(this.state, ['location', 'status', 'lastUpdated']),\n    }\n  }\n\n  hydrate = async (__do_not_use_server_ctx?: HydrationCtx) => {\n    let _ctx = __do_not_use_server_ctx\n    // Client hydrates from window\n    if (typeof document !== 'undefined') {\n      _ctx = window.__TSR_DEHYDRATED__\n    }\n\n    invariant(\n      _ctx,\n      'Expected to find a __TSR_DEHYDRATED__ property on window... but we did not. Did you forget to render <DehydrateRouter /> in your app?',\n    )\n\n    const ctx = _ctx\n    this.dehydratedData = ctx.payload as any\n    this.options.hydrate?.(ctx.payload as any)\n\n    this.__store.setState((s) => {\n      return {\n        ...s,\n        ...ctx.router.state,\n        matches: s.matches,\n        resolvedLocation: ctx.router.state.location,\n      }\n    })\n\n    await this.load()\n\n    return\n  }\n\n  injectedHtml: (string | (() => Promise<string> | string))[] = []\n\n  injectHtml = async (html: string | (() => Promise<string> | string)) => {\n    this.injectedHtml.push(html)\n  }\n\n  dehydrateData = <T>(key: any, getData: T | (() => Promise<T> | T)) => {\n    if (typeof document === 'undefined') {\n      const strKey = typeof key === 'string' ? key : JSON.stringify(key)\n\n      this.injectHtml(async () => {\n        const id = `__TSR_DEHYDRATED__${strKey}`\n        const data =\n          typeof getData === 'function' ? await (getData as any)() : getData\n        return `<script id='${id}' suppressHydrationWarning>window[\"__TSR_DEHYDRATED__${escapeJSON(\n          strKey,\n        )}\"] = ${JSON.stringify(data)}\n        ;(() => {\n          var el = document.getElementById('${id}')\n          el.parentElement.removeChild(el)\n        })()\n        </script>`\n      })\n\n      return () => this.hydrateData<T>(key)\n    }\n\n    return () => undefined\n  }\n\n  hydrateData = <T = unknown>(key: any) => {\n    if (typeof document !== 'undefined') {\n      const strKey = typeof key === 'string' ? key : JSON.stringify(key)\n\n      return window[`__TSR_DEHYDRATED__${strKey}` as any] as T\n    }\n\n    return undefined\n  }\n\n  // resolveMatchPromise = (matchId: string, key: string, value: any) => {\n  //   this.state.matches\n  //     .find((d) => d.id === matchId)\n  //     ?.__promisesByKey[key]?.resolve(value)\n  // }\n\n  #buildRouteTree = (routeTree: TRouteTree) => {\n    this.routeTree = routeTree as any\n    this.routesById = {} as any\n    this.routesByPath = {} as any\n    this.flatRoutes = [] as any\n\n    const recurseRoutes = (routes: AnyRoute[]) => {\n      routes.forEach((route, i) => {\n        route.init({ originalIndex: i, router: this })\n\n        const existingRoute = (this.routesById as any)[route.id]\n\n        invariant(\n          !existingRoute,\n          `Duplicate routes found with id: ${String(route.id)}`,\n        )\n        ;(this.routesById as any)[route.id] = route\n\n        if (!route.isRoot && route.path) {\n          const trimmedFullPath = trimPathRight(route.fullPath)\n          if (\n            !this.routesByPath[trimmedFullPath] ||\n            route.fullPath.endsWith('/')\n          ) {\n            ;(this.routesByPath as any)[trimmedFullPath] = route\n          }\n        }\n\n        const children = route.children as Route[]\n\n        if (children?.length) {\n          recurseRoutes(children)\n        }\n      })\n    }\n\n    recurseRoutes([routeTree])\n\n    this.flatRoutes = (Object.values(this.routesByPath) as AnyRoute[])\n      .map((d, i) => {\n        const trimmed = trimPath(d.fullPath)\n        const parsed = parsePathname(trimmed)\n\n        while (parsed.length > 1 && parsed[0]?.value === '/') {\n          parsed.shift()\n        }\n\n        const score = parsed.map((d) => {\n          if (d.type === 'param') {\n            return 0.5\n          }\n\n          if (d.type === 'wildcard') {\n            return 0.25\n          }\n\n          return 1\n        })\n\n        return { child: d, trimmed, parsed, index: i, score }\n      })\n      .sort((a, b) => {\n        let isIndex = a.trimmed === '/' ? 1 : b.trimmed === '/' ? -1 : 0\n\n        if (isIndex !== 0) return isIndex\n\n        const length = Math.min(a.score.length, b.score.length)\n\n        // Sort by length of score\n        if (a.score.length !== b.score.length) {\n          return b.score.length - a.score.length\n        }\n\n        // Sort by min available score\n        for (let i = 0; i < length; i++) {\n          if (a.score[i] !== b.score[i]) {\n            return b.score[i]! - a.score[i]!\n          }\n        }\n\n        // Sort by min available parsed value\n        for (let i = 0; i < length; i++) {\n          if (a.parsed[i]!.value !== b.parsed[i]!.value) {\n            return a.parsed[i]!.value! > b.parsed[i]!.value! ? 1 : -1\n          }\n        }\n\n        // Sort by length of trimmed full path\n        if (a.trimmed !== b.trimmed) {\n          return a.trimmed > b.trimmed ? 1 : -1\n        }\n\n        // Sort by original index\n        return a.index - b.index\n      })\n      .map((d, i) => {\n        d.child.rank = i\n        return d.child\n      }) as any\n  }\n\n  #parseLocation = (previousLocation?: ParsedLocation): ParsedLocation => {\n    let { pathname, search, hash, state } = this.history.location\n\n    const parsedSearch = this.options.parseSearch(search)\n\n    return {\n      pathname: pathname,\n      searchStr: search,\n      search: replaceEqualDeep(previousLocation?.search, parsedSearch),\n      hash: hash.split('#').reverse()[0] ?? '',\n      href: `${pathname}${search}${hash}`,\n      state: state as LocationState,\n      key: state?.key || '__init__',\n    }\n  }\n\n  #buildLocation = (dest: BuildNextOptions = {}): ParsedLocation => {\n    dest.fromCurrent = dest.fromCurrent ?? dest.to === ''\n\n    const fromPathname = dest.fromCurrent\n      ? this.state.location.pathname\n      : dest.from ?? this.state.location.pathname\n\n    let pathname = resolvePath(\n      this.basepath ?? '/',\n      fromPathname,\n      `${dest.to ?? ''}`,\n    )\n\n    const fromMatches = this.matchRoutes(\n      this.state.location.pathname,\n      this.state.location.search,\n    )\n\n    const prevParams = { ...last(fromMatches)?.params }\n\n    let nextParams =\n      (dest.params ?? true) === true\n        ? prevParams\n        : functionalUpdate(dest.params!, prevParams)\n\n    if (nextParams) {\n      dest.__matches\n        ?.map((d) => this.getRoute(d.routeId).options.stringifyParams)\n        .filter(Boolean)\n        .forEach((fn) => {\n          nextParams = { ...nextParams!, ...fn!(nextParams!) }\n        })\n    }\n\n    pathname = interpolatePath(pathname, nextParams ?? {})\n\n    const preSearchFilters =\n      dest.__matches\n        ?.map(\n          (match) =>\n            this.getRoute(match.routeId).options.preSearchFilters ?? [],\n        )\n        .flat()\n        .filter(Boolean) ?? []\n\n    const postSearchFilters =\n      dest.__matches\n        ?.map(\n          (match) =>\n            this.getRoute(match.routeId).options.postSearchFilters ?? [],\n        )\n        .flat()\n        .filter(Boolean) ?? []\n\n    // Pre filters first\n    const preFilteredSearch = preSearchFilters?.length\n      ? preSearchFilters?.reduce(\n          (prev, next) => next(prev),\n          this.state.location.search,\n        )\n      : this.state.location.search\n\n    // Then the link/navigate function\n    const destSearch =\n      dest.search === true\n        ? preFilteredSearch // Preserve resolvedFrom true\n        : dest.search\n        ? functionalUpdate(dest.search, preFilteredSearch) ?? {} // Updater\n        : preSearchFilters?.length\n        ? preFilteredSearch // Preserve resolvedFrom filters\n        : {}\n\n    // Then post filters\n    const postFilteredSearch = postSearchFilters?.length\n      ? postSearchFilters.reduce((prev, next) => next(prev), destSearch)\n      : destSearch\n\n    const search = replaceEqualDeep(\n      this.state.location.search,\n      postFilteredSearch,\n    )\n\n    const searchStr = this.options.stringifySearch(search)\n\n    const hash =\n      dest.hash === true\n        ? this.state.location.hash\n        : functionalUpdate(dest.hash!, this.state.location.hash)\n\n    const hashStr = hash ? `#${hash}` : ''\n\n    const nextState =\n      dest.state === true\n        ? this.state.location.state\n        : functionalUpdate(dest.state, this.state.location.state)!\n\n    return {\n      pathname,\n      search,\n      searchStr,\n      state: nextState,\n      hash,\n      href: this.history.createHref(`${pathname}${searchStr}${hashStr}`),\n      key: dest.key,\n    }\n  }\n\n  #commitLocation = async (\n    location: BuildNextOptions & { replace?: boolean },\n  ) => {\n    const next = this.buildNext(location)\n    const id = '' + Date.now() + Math.random()\n\n    if (this.navigateTimeout) clearTimeout(this.navigateTimeout)\n\n    let nextAction: 'push' | 'replace' = 'replace'\n\n    if (!location.replace) {\n      nextAction = 'push'\n    }\n\n    const isSameUrl = this.state.location.href === next.href\n\n    if (isSameUrl && !next.key) {\n      nextAction = 'replace'\n    }\n\n    const href = `${next.pathname}${next.searchStr}${\n      next.hash ? `#${next.hash}` : ''\n    }`\n\n    this.history[nextAction === 'push' ? 'push' : 'replace'](href, {\n      id,\n      ...next.state,\n    })\n\n    return this.#createNavigationPromise()\n  }\n\n  #createNavigationPromise = () => {\n    const previousNavigationResolve = this.resolveNavigation\n\n    this.navigationPromise = new Promise((resolve) => {\n      this.resolveNavigation = () => {\n        resolve()\n        previousNavigationResolve()\n      }\n    })\n\n    return this.navigationPromise\n  }\n\n  getRouteMatch = (\n    id: string,\n  ): undefined | RouteMatch<TRoutesInfo, AnyRoute> => {\n    return (\n      this.state.matches.find((d) => d.id === id) ||\n      this.state.preloadMatches[id]\n    )\n  }\n\n  #setResolvedRouteMatch = (\n    id: string,\n    updater: (\n      prev: RouteMatch<TRoutesInfo, AnyRoute>,\n    ) => RouteMatch<TRoutesInfo, AnyRoute>,\n  ) => {\n    this.__store.setState((prev) => ({\n      ...prev,\n      matches: prev.matches.map((d) => {\n        if (d.id === id) {\n          return updater(d as any)\n        }\n        return d\n      }),\n    }))\n  }\n\n  #setPendingRouteMatch = (\n    id: string,\n    updater: (\n      prev: RouteMatch<TRoutesInfo, AnyRoute>,\n    ) => RouteMatch<TRoutesInfo, AnyRoute>,\n  ) => {\n    this.__store.setState((prev) => ({\n      ...prev,\n      pendingMatches: prev.pendingMatches.map((d) => {\n        if (d.id === id) {\n          return updater(d as any)\n        }\n        return d\n      }),\n    }))\n  }\n\n  #setPreloadRouteMatch = (\n    id: string,\n    updater: (\n      prev: RouteMatch<TRoutesInfo, AnyRoute>,\n    ) => RouteMatch<TRoutesInfo, AnyRoute>,\n  ) => {\n    invariant(this.state.preloadMatches[id], 'Match not found')\n\n    this.__store.setState((prev) => ({\n      ...prev,\n      preloadMatches: {\n        ...prev.preloadMatches,\n        [id]: updater(prev.preloadMatches[id] as any),\n      },\n    }))\n  }\n\n  setRouteMatch = (\n    id: string,\n    updater: (\n      prev: RouteMatch<TRoutesInfo, AnyRoute>,\n    ) => RouteMatch<TRoutesInfo, AnyRoute>,\n  ) => {\n    if (this.state.matches.find((d) => d.id === id)) {\n      return this.#setResolvedRouteMatch(id, updater)\n    }\n\n    if (this.state.pendingMatches.find((d) => d.id === id)) {\n      return this.#setPendingRouteMatch(id, updater)\n    }\n\n    if (this.state.preloadMatches[id]) {\n      return this.#setPreloadRouteMatch(id, updater)\n    }\n  }\n}\n\n// Detect if we're in the DOM\nconst isServer = typeof window === 'undefined' || !window.document.createElement\n\nfunction getInitialRouterState(): RouterState<any, any> {\n  return {\n    status: 'idle',\n    resolvedLocation: null!,\n    location: null!,\n    matches: [],\n    pendingMatches: [],\n    preloadMatches: {},\n    lastUpdated: Date.now(),\n  }\n}\n\nfunction isCtrlEvent(e: MouseEvent) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n}\n\nexport type AnyRedirect = Redirect<any, any, any>\n\nexport type Redirect<\n  TRoutesInfo extends AnyRoutesInfo = RegisteredRoutesInfo,\n  TFrom extends TRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = NavigateOptions<TRoutesInfo, TFrom, TTo> & {\n  code?: number\n}\n\nexport function redirect<\n  TRoutesInfo extends AnyRoutesInfo = RegisteredRoutesInfo,\n  TFrom extends TRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n>(opts: Redirect<TRoutesInfo, TFrom, TTo>): Redirect<TRoutesInfo, TFrom, TTo> {\n  ;(opts as any).isRedirect = true\n  return opts\n}\n\nexport function isRedirect(obj: any): obj is AnyRedirect {\n  return !!obj?.isRedirect\n}\n\nexport class SearchParamError extends Error {}\nexport class PathParamError extends Error {}\n\nfunction escapeJSON(jsonString: string) {\n  return jsonString\n    .replace(/\\\\/g, '\\\\\\\\') // Escape backslashes\n    .replace(/'/g, \"\\\\'\") // Escape single quotes\n    .replace(/\"/g, '\\\\\"') // Escape double quotes\n}\n"],"names":["popStateEvent","beforeUnloadEvent","beforeUnloadListener","event","preventDefault","returnValue","stopBlocking","removeEventListener","capture","createHistory","opts","location","getLocation","unsub","listeners","Set","blockers","queue","tryFlush","length","shift","onUpdate","queueTask","task","push","forEach","listener","listen","cb","size","add","delete","path","state","pushState","replace","replaceState","go","index","back","forward","createHref","str","block","addEventListener","filter","b","createBrowserHistory","getHref","window","pathname","search","hash","parseLocation","history","key","createRandomKey","n","createHashHistory","substring","createMemoryHistory","initialEntries","entries","initialIndex","currentState","Math","min","href","hashIndex","indexOf","searchIndex","slice","undefined","random","toString","last","arr","isFunction","d","functionalUpdate","updater","previous","pick","parent","keys","reduce","obj","replaceEqualDeep","prev","_next","next","array","Array","isArray","isPlainObject","prevSize","Object","nextItems","nextSize","copy","equalItems","i","o","hasObjectPrototype","ctor","constructor","prot","prototype","hasOwnProperty","call","partialDeepEqual","a","some","every","item","joinPaths","paths","cleanPath","Boolean","join","trimPathLeft","trimPathRight","trimPath","resolvePath","basepath","base","to","RegExp","baseSegments","parsePathname","toSegments","toSegment","value","pop","joined","map","segments","type","split","part","charAt","interpolatePath","params","leaveWildcards","interpolatedPathSegments","segment","matchPathname","currentPathname","matchLocation","pathParams","matchByPath","from","routeSegments","startsWith","unshift","isMatch","max","baseSegment","routeSegment","isLastBaseSegment","isLastRouteSegment","caseSensitive","toLowerCase","fuzzy","encode","pfx","k","tmp","encodeURIComponent","toValue","mix","decodeURIComponent","decode","out","concat","useSyncExternalStoreWithSelector","shallow","lazy","importer","exportName","lazyComp","React","moduleExports","component","default","finalComp","preload","useLinkProps","options","router","useRouter","children","target","activeProps","className","inactiveProps","activeOptions","disabled","preloadDelay","style","onClick","onFocus","onMouseEnter","onMouseLeave","onTouchStart","rest","linkInfo","buildLink","handleClick","handleFocus","handleEnter","handleLeave","handleTouchStart","isActive","handleReactClick","e","startTransition","composeHandlers","handlers","persist","handler","defaultPrevented","resolvedActiveProps","resolvedInactiveProps","role","Link","forwardRef","props","ref","linkProps","Navigate","useLayoutEffect","navigate","matchIdsContext","createContext","routerContext","useRouterState","useStore","__store","select","RouterProvider","update","useEffect","mount","Wrap","Fragment","Matches","matchIds","matches","id","ErrorComponent","warning","useContext","useMatches","findIndex","useMatch","nearestMatchId","nearestMatchRouteId","getRouteMatch","routeId","matchRouteId","match","find","strict","invariant","useLoader","loader","useSearch","useParams","useNavigate","defaultOpts","useCallback","useMatchRoute","pending","matchRoute","MatchRoute","Outlet","defaultPending","Match","matchId","route","getRoute","PendingComponent","pendingComponent","defaultPendingComponent","errorComponent","defaultErrorComponent","ResolvedSuspenseBoundary","wrapInSuspense","isRoot","Suspense","SafeFragment","ResolvedCatchBoundary","CatchBoundary","MatchInner","status","error","comp","defaultComponent","createElement","useInjectHtml","html","injectHtml","useDehydrate","dehydrate","data","dehydrateData","useHydrate","hydrate","hydrateData","Component","info","componentDidCatch","onCatch","setState","render","CatchBoundaryInner","locationKey","resolvedLocation","activeErrorState","setActiveErrorState","useState","errorState","prevKeyRef","useRef","current","padding","maxWidth","fontSize","height","border","borderRadius","color","overflow","message","useBlocker","condition","unblock","retry","cancel","confirm","Block","objA","objB","is","keysA","rootRouteId","Route","getParentRoute","init","originalIndex","allOptions","parentRoute","customId","fullPath","addChildren","context","RouterContext","createRootRoute","RootRoute","defaultParseSearch","parseSearchWith","JSON","parse","defaultStringifySearch","stringifySearchWith","stringify","parser","searchStr","query","err","val","componentTypes","Router","startedLoadingAt","Date","now","resolveNavigation","defaultPreloadDelay","stringifySearch","parseSearch","Store","getInitialRouterState","defaultPriority","buildNext","fromCurrent","reset","s","assign","safeLoad","isServer","parsedLocation","routeTree","__matches","matchRoutes","cancelMatches","cancelMatch","abortController","abort","load","catch","startedAt","pendingMatches","batch","loadMatches","navigationPromise","prevLocation","onRouteChange","routesById","preloadRoute","navigateOpts","throwOnError","matchesById","m","preloadMatches","locationSearch","routeParams","foundRoute","flatRoutes","matchedParams","routeCursor","matchedRoutes","allParams","parsedParams","parsedParamsError","parseParams","PathParamError","cause","interpolatedPath","getKey","existingMatch","hasLoaders","routeMatch","updatedAt","routeSearch","paramsError","searchError","loadPromise","Promise","resolve","routeContext","AbortController","fetchedAt","parentMatch","searchInfo","parentSearchInfo","validator","validateSearch","SearchParamError","contextInfo","getContext","parentContext","onError","resolvedMatches","firstBadMatchIndex","all","handleError","isRedirect","errorHandlerErr","setRouteMatch","onParseParamsError","onValidateSearchError","beforeLoad","onBeforeLoadError","validResolvedMatches","matchPromises","then","parentMatchPromise","checkLatest","latest","latestPromise","componentsPromise","loaderPromise","_","errorHandler","onLoadError","caughtError","reload","String","fromString","isExternal","URL","baseLocation","includeSearch","userPreloadDelay","nextOpts","defaultPreload","currentPathSplit","nextPathSplit","pathIsFuzzyEqual","pathTest","exact","hashTest","includeHash","searchTest","isCtrlEvent","button","console","warn","preloadTimeout","setTimeout","clearTimeout","__do_not_use_server_ctx","_ctx","document","__TSR_DEHYDRATED__","ctx","dehydratedData","payload","injectedHtml","getData","strKey","escapeJSON","routesByPath","recurseRoutes","routes","existingRoute","trimmedFullPath","endsWith","values","trimmed","parsed","score","child","sort","isIndex","rank","previousLocation","parsedSearch","reverse","dest","fromPathname","fromMatches","prevParams","nextParams","stringifyParams","fn","preSearchFilters","flat","postSearchFilters","preFilteredSearch","destSearch","postFilteredSearch","hashStr","nextState","navigateTimeout","nextAction","isSameUrl","previousNavigationResolve","lastUpdated","metaKey","altKey","ctrlKey","shiftKey","redirect","Error","jsonString"],"mappings":"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"}