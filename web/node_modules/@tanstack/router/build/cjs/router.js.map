{"version":3,"file":"router.js","sources":["../../src/router.ts"],"sourcesContent":["import { Store } from '@tanstack/react-store'\nimport invariant from 'tiny-invariant'\n\n//\n\nimport {\n  LinkInfo,\n  LinkOptions,\n  NavigateOptions,\n  ToOptions,\n  ResolveRelativePath,\n} from './link'\nimport {\n  cleanPath,\n  interpolatePath,\n  joinPaths,\n  matchPathname,\n  parsePathname,\n  resolvePath,\n  trimPath,\n  trimPathRight,\n} from './path'\nimport {\n  Route,\n  AnySearchSchema,\n  AnyRoute,\n  RootRoute,\n  AnyContext,\n  AnyPathParams,\n} from './route'\nimport {\n  RoutesInfo,\n  AnyRoutesInfo,\n  RoutesById,\n  RoutesByPath,\n  DefaultRoutesInfo,\n} from './routeInfo'\nimport { defaultParseSearch, defaultStringifySearch } from './searchParams'\nimport {\n  functionalUpdate,\n  last,\n  NoInfer,\n  pick,\n  PickAsRequired,\n  Timeout,\n  Updater,\n  replaceEqualDeep,\n  partialDeepEqual,\n} from './utils'\nimport {\n  createBrowserHistory,\n  createMemoryHistory,\n  RouterHistory,\n} from './history'\nimport { RouteComponent } from './react'\n\n//\n\ndeclare global {\n  interface Window {\n    __TSR_DEHYDRATED__?: HydrationCtx\n  }\n\n  interface Error {\n    cause: unknown\n  }\n\n  interface ErrorConstructor {\n    new (reason: string, options?: { cause?: unknown }): Error\n  }\n}\n\nexport interface Register {\n  // router: Router\n}\n\nexport type AnyRouter = Router<any, any, any>\n\nexport type RegisteredRouterPair = Register extends {\n  router: infer TRouter extends AnyRouter\n}\n  ? [TRouter, TRouter['types']['RoutesInfo']]\n  : [Router, AnyRoutesInfo]\n\nexport type RegisteredRouter = RegisteredRouterPair[0]\nexport type RegisteredRoutesInfo = RegisteredRouterPair[1]\n\nexport interface LocationState {}\n\nexport interface ParsedLocation<\n  TSearchObj extends AnySearchSchema = {},\n  TState extends LocationState = LocationState,\n> {\n  href: string\n  pathname: string\n  search: TSearchObj\n  searchStr: string\n  state: TState\n  hash: string\n  key?: string\n}\n\nexport interface FromLocation {\n  pathname: string\n  search?: unknown\n  key?: string\n  hash?: string\n}\n\nexport type SearchSerializer = (searchObj: Record<string, any>) => string\nexport type SearchParser = (searchStr: string) => Record<string, any>\n\nexport type HydrationCtx = {\n  router: DehydratedRouter\n  payload: Record<string, any>\n}\n\nexport interface RouteMatch<\n  TRoutesInfo extends AnyRoutesInfo = DefaultRoutesInfo,\n  TRoute extends AnyRoute = Route,\n> {\n  id: string\n  routeId: string\n  pathname: string\n  params: TRoute['__types']['allParams']\n  status: 'pending' | 'success' | 'error'\n  error: unknown\n  paramsError: unknown\n  searchError: unknown\n  updatedAt: number\n  loader: TRoute['__types']['loader']\n  loadPromise?: Promise<void>\n  __resolveLoadPromise?: () => void\n  routeContext: TRoute['__types']['routeContext']\n  context: TRoute['__types']['context']\n  routeSearch: TRoute['__types']['searchSchema']\n  search: TRoutesInfo['fullSearchSchema'] &\n    TRoute['__types']['fullSearchSchema']\n  fetchedAt: number\n  abortController: AbortController\n}\n\nexport type AnyRouteMatch = RouteMatch<AnyRoutesInfo, AnyRoute>\n\nexport type RouterContextOptions<TRouteTree extends AnyRoute> =\n  AnyContext extends TRouteTree['__types']['routerContext']\n    ? {\n        context?: TRouteTree['__types']['routerContext']\n      }\n    : {\n        context: TRouteTree['__types']['routerContext']\n      }\n\nexport interface RouterOptions<\n  TRouteTree extends AnyRoute,\n  TDehydrated extends Record<string, any>,\n> {\n  history?: RouterHistory\n  stringifySearch?: SearchSerializer\n  parseSearch?: SearchParser\n  defaultPreload?: false | 'intent'\n  defaultPreloadDelay?: number\n  defaultComponent?: RouteComponent\n  defaultErrorComponent?: RouteComponent<{\n    error: Error\n    info: { componentStack: string }\n  }>\n  defaultPendingComponent?: RouteComponent\n  defaultLoaderMaxAge?: number\n  defaultLoaderGcMaxAge?: number\n  caseSensitive?: boolean\n  routeTree?: TRouteTree\n  basepath?: string\n  createRoute?: (opts: { route: AnyRoute; router: AnyRouter }) => void\n  onRouteChange?: () => void\n  // fetchServerDataFn?: FetchServerDataFn\n  context?: TRouteTree['__types']['routerContext']\n  Wrap?: React.ComponentType<{\n    children: React.ReactNode\n    dehydratedState?: TDehydrated\n  }>\n  dehydrate?: () => TDehydrated\n  hydrate?: (dehydrated: TDehydrated) => void\n}\n\nexport interface RouterState<\n  TRoutesInfo extends AnyRoutesInfo = AnyRoutesInfo,\n  TState extends LocationState = LocationState,\n> {\n  status: 'idle' | 'pending'\n  matches: RouteMatch<TRoutesInfo, TRoutesInfo['routeIntersection']>[]\n  pendingMatches: RouteMatch<TRoutesInfo, TRoutesInfo['routeIntersection']>[]\n  preloadMatches: Record<\n    string,\n    RouteMatch<TRoutesInfo, TRoutesInfo['routeIntersection']>\n  >\n  location: ParsedLocation<TRoutesInfo['fullSearchSchema'], TState>\n  resolvedLocation: ParsedLocation<TRoutesInfo['fullSearchSchema'], TState>\n  lastUpdated: number\n}\n\nexport type ListenerFn = () => void\n\nexport interface BuildNextOptions {\n  to?: string | number | null\n  params?: true | Updater<unknown>\n  search?: true | Updater<unknown>\n  hash?: true | Updater<string>\n  state?: LocationState\n  key?: string\n  from?: string\n  fromCurrent?: boolean\n  __matches?: AnyRouteMatch[]\n}\n\nexport interface MatchLocation {\n  to?: string | number | null\n  fuzzy?: boolean\n  caseSensitive?: boolean\n  from?: string\n  fromCurrent?: boolean\n}\n\nexport interface MatchRouteOptions {\n  pending?: boolean\n  caseSensitive?: boolean\n  includeSearch?: boolean\n  fuzzy?: boolean\n}\n\ntype LinkCurrentTargetElement = {\n  preloadTimeout?: null | ReturnType<typeof setTimeout>\n}\n\nexport interface DehydratedRouterState\n  extends Pick<RouterState, 'status' | 'location' | 'lastUpdated'> {}\n\nexport interface DehydratedRouter {\n  state: DehydratedRouterState\n}\n\nexport type RouterConstructorOptions<\n  TRouteTree extends AnyRoute,\n  TDehydrated extends Record<string, any>,\n> = Omit<RouterOptions<TRouteTree, TDehydrated>, 'context'> &\n  RouterContextOptions<TRouteTree>\n\nexport const componentTypes = [\n  'component',\n  'errorComponent',\n  'pendingComponent',\n] as const\n\nexport class Router<\n  TRouteTree extends AnyRoute = AnyRoute,\n  TRoutesInfo extends AnyRoutesInfo = RoutesInfo<TRouteTree>,\n  TDehydrated extends Record<string, any> = Record<string, any>,\n> {\n  types!: {\n    RootRoute: TRouteTree\n    RoutesInfo: TRoutesInfo\n  }\n\n  options: PickAsRequired<\n    RouterOptions<TRouteTree, TDehydrated>,\n    'stringifySearch' | 'parseSearch' | 'context'\n  >\n  history!: RouterHistory\n  #unsubHistory?: () => void\n  basepath!: string\n  routeTree!: RootRoute\n  routesById!: RoutesById<TRoutesInfo>\n  routesByPath!: RoutesByPath<TRoutesInfo>\n  flatRoutes!: TRoutesInfo['routesByFullPath'][keyof TRoutesInfo['routesByFullPath']][]\n  navigateTimeout: undefined | Timeout\n  nextAction: undefined | 'push' | 'replace'\n  navigationPromise: undefined | Promise<void>\n\n  __store: Store<RouterState<TRoutesInfo>>\n  state: RouterState<TRoutesInfo>\n  startedLoadingAt = Date.now()\n  resolveNavigation: () => void = () => {}\n  dehydratedData?: TDehydrated\n\n  constructor(options: RouterConstructorOptions<TRouteTree, TDehydrated>) {\n    this.options = {\n      defaultPreloadDelay: 50,\n      context: undefined!,\n      ...options,\n      stringifySearch: options?.stringifySearch ?? defaultStringifySearch,\n      parseSearch: options?.parseSearch ?? defaultParseSearch,\n      // fetchServerDataFn: options?.fetchServerDataFn ?? defaultFetchServerDataFn,\n    }\n\n    this.__store = new Store<RouterState<TRoutesInfo>>(\n      getInitialRouterState(),\n      {\n        onUpdate: () => {\n          this.state = this.__store.state\n        },\n        defaultPriority: 'low',\n      },\n    )\n    this.state = this.__store.state\n\n    this.update(options)\n\n    const next = this.buildNext({\n      hash: true,\n      fromCurrent: true,\n      search: true,\n      state: true,\n    })\n\n    if (this.state.location.href !== next.href) {\n      this.#commitLocation({ ...next, replace: true })\n    }\n  }\n\n  reset = () => {\n    this.__store.setState((s) => Object.assign(s, getInitialRouterState()))\n  }\n\n  mount = () => {\n    // If the router matches are empty, start loading the matches\n    if (!this.state.matches.length) {\n      this.safeLoad()\n    }\n  }\n\n  update = (opts?: RouterOptions<any, any>): this => {\n    this.options = {\n      ...this.options,\n      ...opts,\n      context: {\n        ...this.options.context,\n        ...opts?.context,\n      },\n    }\n\n    if (\n      !this.history ||\n      (this.options.history && this.options.history !== this.history)\n    ) {\n      if (this.#unsubHistory) {\n        this.#unsubHistory()\n      }\n\n      this.history =\n        this.options.history ??\n        (isServer ? createMemoryHistory() : createBrowserHistory()!)\n\n      const parsedLocation = this.#parseLocation()\n\n      this.__store.setState((s) => ({\n        ...s,\n        resolvedLocation: parsedLocation,\n        location: parsedLocation,\n      }))\n\n      this.#unsubHistory = this.history.listen(() => {\n        this.safeLoad({\n          next: this.#parseLocation(this.state.location),\n        })\n      })\n    }\n\n    const { basepath, routeTree } = this.options\n\n    this.basepath = `/${trimPath(basepath ?? '') ?? ''}`\n\n    if (routeTree && routeTree !== this.routeTree) {\n      this.#buildRouteTree(routeTree)\n    }\n\n    return this\n  }\n\n  buildNext = (opts: BuildNextOptions): ParsedLocation => {\n    const next = this.#buildLocation(opts)\n\n    const __matches = this.matchRoutes(next.pathname, next.search)\n\n    return this.#buildLocation({\n      ...opts,\n      __matches,\n    })\n  }\n\n  cancelMatches = () => {\n    this.state.matches.forEach((match) => {\n      this.cancelMatch(match.id)\n    })\n  }\n\n  cancelMatch = (id: string) => {\n    this.getRouteMatch(id)?.abortController?.abort()\n  }\n\n  safeLoad = (opts?: { next?: ParsedLocation }) => {\n    this.load(opts).catch((err) => {\n      // console.warn(err)\n      // invariant(false, 'Encountered an error during router.load()! ☝️.')\n    })\n  }\n\n  load = async (opts?: { next?: ParsedLocation }): Promise<void> => {\n    this.#createNavigationPromise()\n\n    let now = Date.now()\n    const startedAt = now\n    this.startedLoadingAt = startedAt\n\n    // Cancel any pending matches\n    this.cancelMatches()\n\n    let pendingMatches!: RouteMatch<any, any>[]\n\n    this.__store.batch(() => {\n      if (opts?.next) {\n        // Ingest the new location\n        this.__store.setState((s) => ({\n          ...s,\n          location: opts.next!,\n        }))\n      }\n\n      // Match the routes\n      pendingMatches = this.matchRoutes(\n        this.state.location.pathname,\n        this.state.location.search,\n        {\n          // throwOnError: true,\n        },\n      )\n\n      this.__store.setState((s) => ({\n        ...s,\n        status: 'pending',\n        pendingMatches,\n      }))\n    })\n\n    // Load the matches\n    await this.loadMatches(pendingMatches)\n\n    if (this.startedLoadingAt !== startedAt) {\n      // Ignore side-effects of outdated side-effects\n      return this.navigationPromise\n    }\n\n    const prevLocation = this.state.resolvedLocation\n\n    this.__store.setState((s) => ({\n      ...s,\n      status: 'idle',\n      resolvedLocation: s.location,\n      matches: s.pendingMatches,\n      pendingMatches: [],\n    }))\n\n    if (prevLocation!.href !== this.state.location.href) {\n      this.options.onRouteChange?.()\n    }\n\n    this.resolveNavigation()\n  }\n\n  getRoute = <TId extends keyof TRoutesInfo['routesById']>(\n    id: TId,\n  ): TRoutesInfo['routesById'][TId] => {\n    const route = this.routesById[id]\n\n    invariant(route, `Route with id \"${id as string}\" not found`)\n\n    return route\n  }\n\n  preloadRoute = async (\n    navigateOpts: BuildNextOptions = this.state.location,\n  ) => {\n    const next = this.buildNext(navigateOpts)\n    const matches = this.matchRoutes(next.pathname, next.search, {\n      throwOnError: true,\n    })\n\n    const matchesById: any = {}\n\n    matches.forEach((m) => {\n      if (!this.state.matches.find((d) => d.id === m.id)) {\n        matchesById[m.id] = m\n      }\n    })\n\n    this.__store.setState((s) => {\n      return {\n        ...s,\n        preloadMatches: {\n          ...s.preloadMatches,\n          ...matchesById,\n        },\n      }\n    })\n\n    await this.loadMatches(matches, {\n      preload: true,\n    })\n    return matches\n  }\n\n  matchRoutes = (\n    pathname: string,\n    locationSearch: AnySearchSchema,\n    opts?: { throwOnError?: boolean },\n  ): RouteMatch<TRoutesInfo, TRoutesInfo['routeIntersection']>[] => {\n    let routeParams: AnyPathParams = {}\n\n    let foundRoute = this.flatRoutes.find((route) => {\n      const matchedParams = matchPathname(this.basepath, pathname, {\n        to: route.fullPath,\n        caseSensitive:\n          route.options.caseSensitive ?? this.options.caseSensitive,\n      })\n\n      if (matchedParams) {\n        routeParams = matchedParams\n        return true\n      }\n\n      return false\n    })\n\n    let routeCursor = foundRoute || (this.routesById['__root__'] as any)\n\n    let matchedRoutes: AnyRoute[] = [routeCursor]\n\n    while (routeCursor?.parentRoute) {\n      routeCursor = routeCursor.parentRoute\n      if (routeCursor) matchedRoutes.unshift(routeCursor)\n    }\n\n    // Alright, by now we should have all of our\n    // matching routes and their param pairs, let's\n    // Turn them into actual `Match` objects and\n    // accumulate the params into a single params bag\n    let allParams = {}\n\n    // Existing matches are matches that are already loaded along with\n    // pending matches that are still loading\n\n    const matches = matchedRoutes.map((route) => {\n      let parsedParams\n      let parsedParamsError\n\n      try {\n        parsedParams = route.options.parseParams?.(routeParams!) ?? routeParams\n      } catch (err: any) {\n        parsedParamsError = new PathParamError(err.message, {\n          cause: err,\n        })\n\n        if (opts?.throwOnError) {\n          throw parsedParamsError\n        }\n      }\n\n      // Add the parsed params to the accumulated params bag\n      Object.assign(allParams, parsedParams)\n\n      const interpolatedPath = interpolatePath(route.path, allParams)\n      const matchId =\n        interpolatePath(route.id, allParams, true) +\n        (route.options.getKey?.({\n          params: allParams,\n          search: locationSearch,\n        }) ?? '')\n\n      // Waste not, want not. If we already have a match for this route,\n      // reuse it. This is important for layout routes, which might stick\n      // around between navigation actions that only change leaf routes.\n      const existingMatch = this.getRouteMatch(matchId)\n\n      if (existingMatch) {\n        // Return a copy, we don't want to mutate the existing match\n        return { ...existingMatch }\n      }\n\n      // Create a fresh route match\n      const hasLoaders = !!(\n        route.options.loader ||\n        componentTypes.some((d) => route.options[d]?.preload)\n      )\n\n      const routeMatch: RouteMatch = {\n        id: matchId,\n        routeId: route.id,\n        params: allParams,\n        pathname: joinPaths([this.basepath, interpolatedPath]),\n        updatedAt: 0,\n        routeSearch: {},\n        search: {} as any,\n        status: hasLoaders ? 'pending' : 'success',\n        error: undefined,\n        paramsError: parsedParamsError,\n        searchError: undefined,\n        loader: undefined,\n        loadPromise: Promise.resolve(),\n        routeContext: undefined!,\n        context: undefined!,\n        abortController: new AbortController(),\n        fetchedAt: 0,\n      }\n\n      return routeMatch\n    })\n\n    // Take each match and resolve its search params and context\n    // This has to happen after the matches are created or found\n    // so that we can use the parent match's search params and context\n    matches.forEach((match, i): any => {\n      const parentMatch = matches[i - 1]\n      const route = this.getRoute(match.routeId)\n\n      const searchInfo = (() => {\n        // Validate the search params and stabilize them\n        const parentSearchInfo = {\n          search: parentMatch?.search ?? locationSearch,\n          routeSearch: parentMatch?.routeSearch ?? locationSearch,\n        }\n\n        try {\n          const validator =\n            typeof route.options.validateSearch === 'object'\n              ? route.options.validateSearch.parse\n              : route.options.validateSearch\n\n          const routeSearch = validator?.(parentSearchInfo.search) ?? {}\n\n          const search = {\n            ...parentSearchInfo.search,\n            ...routeSearch,\n          }\n\n          return {\n            routeSearch: replaceEqualDeep(match.routeSearch, routeSearch),\n            search: replaceEqualDeep(match.search, search),\n          }\n        } catch (err: any) {\n          match.searchError = new SearchParamError(err.message, {\n            cause: err,\n          })\n\n          if (opts?.throwOnError) {\n            throw match.searchError\n          }\n\n          return parentSearchInfo\n        }\n      })()\n\n      const contextInfo = (() => {\n        try {\n          const routeContext =\n            route.options.getContext?.({\n              parentContext: parentMatch?.routeContext ?? {},\n              context: parentMatch?.context ?? this?.options.context ?? {},\n              params: match.params,\n              search: match.search,\n            }) || ({} as any)\n\n          const context = {\n            ...(parentMatch?.context ?? this?.options.context),\n            ...routeContext,\n          } as any\n\n          return {\n            context,\n            routeContext,\n          }\n        } catch (err) {\n          route.options.onError?.(err)\n          throw err\n        }\n      })()\n\n      Object.assign(match, {\n        ...searchInfo,\n        ...contextInfo,\n      })\n    })\n\n    return matches\n  }\n\n  loadMatches = async (\n    resolvedMatches: AnyRouteMatch[],\n    opts?: {\n      preload?: boolean\n    },\n  ) => {\n    let firstBadMatchIndex: number | undefined\n\n    // Check each match middleware to see if the route can be accessed\n    try {\n      await Promise.all(\n        resolvedMatches.map(async (match, index) => {\n          const route = this.getRoute(match.routeId)\n\n          const handleError = (\n            err: any,\n            handler: undefined | ((err: any) => void),\n          ) => {\n            firstBadMatchIndex = firstBadMatchIndex ?? index\n            handler = handler || route.options.onError\n\n            if (isRedirect(err)) {\n              throw err\n            }\n\n            try {\n              handler?.(err)\n            } catch (errorHandlerErr) {\n              err = errorHandlerErr\n\n              if (isRedirect(errorHandlerErr)) {\n                throw errorHandlerErr\n              }\n            }\n\n            this.setRouteMatch(match.id, (s) => ({\n              ...s,\n              error: err,\n              status: 'error',\n              updatedAt: Date.now(),\n            }))\n          }\n\n          if (match.paramsError) {\n            handleError(match.paramsError, route.options.onParseParamsError)\n          }\n\n          if (match.searchError) {\n            handleError(match.searchError, route.options.onValidateSearchError)\n          }\n\n          try {\n            await route.options.beforeLoad?.({\n              router: this as any,\n              match,\n            })\n          } catch (err) {\n            handleError(err, route.options.onBeforeLoadError)\n          }\n        }),\n      )\n    } catch (err) {\n      if (isRedirect(err)) {\n        if (!opts?.preload) {\n          this.navigate(err as any)\n        }\n        return\n      }\n\n      throw err // we should never end up here\n    }\n\n    const validResolvedMatches = resolvedMatches.slice(0, firstBadMatchIndex)\n    const matchPromises: Promise<any>[] = []\n\n    validResolvedMatches.forEach((match, index) => {\n      matchPromises.push(\n        Promise.resolve().then(async () => {\n          const parentMatchPromise = matchPromises[index - 1]\n          const route = this.getRoute(match.routeId)\n          const fetchedAt = Date.now()\n          const loadPromise = Promise.resolve().then(async () => {\n            const checkLatest = () => {\n              const latest = this.getRouteMatch(match.id)\n              return latest && latest.fetchedAt !== fetchedAt\n                ? latest.loadPromise\n                : undefined\n            }\n\n            let latestPromise\n\n            const componentsPromise = (async () => {\n              // then run all component and data loaders in parallel\n              // For each component type, potentially load it asynchronously\n\n              await Promise.all(\n                componentTypes.map(async (type) => {\n                  const component = route.options[type]\n\n                  if (component?.preload) {\n                    await component.preload()\n                  }\n                }),\n              )\n            })()\n\n            const loaderPromise = Promise.resolve().then(() => {\n              if (route.options.loader) {\n                return route.options.loader({\n                  ...match,\n                  preload: !!opts?.preload,\n                  parentMatchPromise,\n                })\n              }\n              return\n            })\n\n            try {\n              const [_, loader] = await Promise.all([\n                componentsPromise,\n                loaderPromise,\n              ])\n              if ((latestPromise = checkLatest())) return await latestPromise\n\n              if (\n                !opts?.preload ||\n                !this.state.matches.find((d) => d.id === match.id)\n              ) {\n                this.setRouteMatch(match.id, (s) => ({\n                  ...s,\n                  error: undefined,\n                  status: 'success',\n                  updatedAt: Date.now(),\n                  loader,\n                }))\n              }\n            } catch (err) {\n              if ((latestPromise = checkLatest())) return await latestPromise\n\n              if (isRedirect(err)) {\n                if (!opts?.preload) {\n                  this.navigate(err as any)\n                }\n                return\n              }\n\n              const errorHandler =\n                route.options.onLoadError ?? route.options.onError\n\n              let caughtError = err\n\n              try {\n                errorHandler?.(err)\n              } catch (errorHandlerErr) {\n                caughtError = errorHandlerErr\n                if (isRedirect(errorHandlerErr)) {\n                  if (!opts?.preload) {\n                    this.navigate(errorHandlerErr as any)\n                  }\n                  return\n                }\n              }\n\n              this.setRouteMatch(match.id, (s) => ({\n                ...s,\n                error: caughtError,\n                status: 'error',\n                updatedAt: Date.now(),\n              }))\n            } finally {\n              if ((latestPromise = checkLatest())) return await latestPromise\n              if (opts?.preload) {\n                this.__store.setState((s) => {\n                  const preloadMatches = { ...s.preloadMatches }\n                  delete preloadMatches[match.id]\n                  return {\n                    ...s,\n                    preloadMatches,\n                  }\n                })\n              }\n            }\n          })\n\n          this.setRouteMatch(match.id, (s) => ({\n            ...s,\n            loadPromise,\n            fetchedAt,\n          }))\n\n          await loadPromise\n        }),\n      )\n    })\n\n    await Promise.all(matchPromises)\n  }\n\n  reload = () => {\n    this.navigate({\n      fromCurrent: true,\n      replace: true,\n      search: true,\n    } as any)\n  }\n\n  resolvePath = (from: string, path: string) => {\n    return resolvePath(this.basepath!, from, cleanPath(path))\n  }\n\n  navigate = async <TFrom extends string = '/', TTo extends string = ''>({\n    from,\n    to = '' as any,\n    search,\n    hash,\n    replace,\n    params,\n  }: NavigateOptions<TRoutesInfo, TFrom, TTo>) => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n    const toString = String(to)\n    const fromString = typeof from === 'undefined' ? from : String(from)\n    let isExternal\n\n    try {\n      new URL(`${toString}`)\n      isExternal = true\n    } catch (e) {}\n\n    invariant(\n      !isExternal,\n      'Attempting to navigate to external url with this.navigate!',\n    )\n\n    return this.#commitLocation({\n      from: fromString,\n      to: toString,\n      search,\n      hash,\n      replace,\n      params,\n    })\n  }\n\n  matchRoute = <\n    TFrom extends string = '/',\n    TTo extends string = '',\n    TResolved extends string = ResolveRelativePath<TFrom, NoInfer<TTo>>,\n  >(\n    location: ToOptions<TRoutesInfo, TFrom, TTo>,\n    opts?: MatchRouteOptions,\n  ): false | TRoutesInfo['routesById'][TResolved]['__types']['allParams'] => {\n    location = {\n      ...location,\n      to: location.to\n        ? this.resolvePath(location.from ?? '', location.to)\n        : undefined,\n    } as any\n\n    const next = this.buildNext(location)\n    if (opts?.pending && this.state.status !== 'pending') {\n      return false\n    }\n\n    const baseLocation = opts?.pending\n      ? this.state.location\n      : this.state.resolvedLocation\n\n    if (!baseLocation) {\n      return false\n    }\n\n    const match = matchPathname(this.basepath, baseLocation.pathname, {\n      ...opts,\n      to: next.pathname,\n    }) as any\n\n    if (!match) {\n      return false\n    }\n\n    if (opts?.includeSearch ?? true) {\n      return partialDeepEqual(baseLocation.search, next.search) ? match : false\n    }\n\n    return match\n  }\n\n  buildLink = <TFrom extends string = '/', TTo extends string = ''>({\n    from,\n    to = '.' as any,\n    search,\n    params,\n    hash,\n    target,\n    replace,\n    activeOptions,\n    preload,\n    preloadDelay: userPreloadDelay,\n    disabled,\n  }: LinkOptions<TRoutesInfo, TFrom, TTo>): LinkInfo => {\n    // If this link simply reloads the current route,\n    // make sure it has a new key so it will trigger a data refresh\n\n    // If this `to` is a valid external URL, return\n    // null for LinkUtils\n\n    try {\n      new URL(`${to}`)\n      return {\n        type: 'external',\n        href: to,\n      }\n    } catch (e) {}\n\n    const nextOpts = {\n      from,\n      to,\n      search,\n      params,\n      hash,\n      replace,\n    }\n\n    const next = this.buildNext(nextOpts)\n\n    preload = preload ?? this.options.defaultPreload\n    const preloadDelay =\n      userPreloadDelay ?? this.options.defaultPreloadDelay ?? 0\n\n    // Compare path/hash for matches\n    const currentPathSplit = this.state.location.pathname.split('/')\n    const nextPathSplit = next.pathname.split('/')\n    const pathIsFuzzyEqual = nextPathSplit.every(\n      (d, i) => d === currentPathSplit[i],\n    )\n    // Combine the matches based on user options\n    const pathTest = activeOptions?.exact\n      ? this.state.location.pathname === next.pathname\n      : pathIsFuzzyEqual\n    const hashTest = activeOptions?.includeHash\n      ? this.state.location.hash === next.hash\n      : true\n    const searchTest =\n      activeOptions?.includeSearch ?? true\n        ? partialDeepEqual(this.state.location.search, next.search)\n        : true\n\n    // The final \"active\" test\n    const isActive = pathTest && hashTest && searchTest\n\n    // The click handler\n    const handleClick = (e: MouseEvent) => {\n      if (\n        !disabled &&\n        !isCtrlEvent(e) &&\n        !e.defaultPrevented &&\n        (!target || target === '_self') &&\n        e.button === 0\n      ) {\n        e.preventDefault()\n\n        // All is well? Navigate!\n        this.#commitLocation(nextOpts as any)\n      }\n    }\n\n    // The click handler\n    const handleFocus = (e: MouseEvent) => {\n      if (preload) {\n        this.preloadRoute(nextOpts).catch((err) => {\n          console.warn(err)\n          console.warn('Error preloading route! ☝️')\n        })\n      }\n    }\n\n    const handleTouchStart = (e: TouchEvent) => {\n      this.preloadRoute(nextOpts).catch((err) => {\n        console.warn(err)\n        console.warn('Error preloading route! ☝️')\n      })\n    }\n\n    const handleEnter = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (preload) {\n        if (target.preloadTimeout) {\n          return\n        }\n\n        target.preloadTimeout = setTimeout(() => {\n          target.preloadTimeout = null\n          this.preloadRoute(nextOpts).catch((err) => {\n            console.warn(err)\n            console.warn('Error preloading route! ☝️')\n          })\n        }, preloadDelay)\n      }\n    }\n\n    const handleLeave = (e: MouseEvent) => {\n      const target = (e.target || {}) as LinkCurrentTargetElement\n\n      if (target.preloadTimeout) {\n        clearTimeout(target.preloadTimeout)\n        target.preloadTimeout = null\n      }\n    }\n\n    return {\n      type: 'internal',\n      next,\n      handleFocus,\n      handleClick,\n      handleEnter,\n      handleLeave,\n      handleTouchStart,\n      isActive,\n      disabled,\n    }\n  }\n\n  dehydrate = (): DehydratedRouter => {\n    return {\n      state: pick(this.state, ['location', 'status', 'lastUpdated']),\n    }\n  }\n\n  hydrate = async (__do_not_use_server_ctx?: HydrationCtx) => {\n    let _ctx = __do_not_use_server_ctx\n    // Client hydrates from window\n    if (typeof document !== 'undefined') {\n      _ctx = window.__TSR_DEHYDRATED__\n    }\n\n    invariant(\n      _ctx,\n      'Expected to find a __TSR_DEHYDRATED__ property on window... but we did not. Did you forget to render <DehydrateRouter /> in your app?',\n    )\n\n    const ctx = _ctx\n    this.dehydratedData = ctx.payload as any\n    this.options.hydrate?.(ctx.payload as any)\n\n    this.__store.setState((s) => {\n      return {\n        ...s,\n        ...ctx.router.state,\n        matches: s.matches,\n        resolvedLocation: ctx.router.state.location,\n      }\n    })\n\n    await this.load()\n\n    return\n  }\n\n  injectedHtml: (string | (() => Promise<string> | string))[] = []\n\n  injectHtml = async (html: string | (() => Promise<string> | string)) => {\n    this.injectedHtml.push(html)\n  }\n\n  dehydrateData = <T>(key: any, getData: T | (() => Promise<T> | T)) => {\n    if (typeof document === 'undefined') {\n      const strKey = typeof key === 'string' ? key : JSON.stringify(key)\n\n      this.injectHtml(async () => {\n        const id = `__TSR_DEHYDRATED__${strKey}`\n        const data =\n          typeof getData === 'function' ? await (getData as any)() : getData\n        return `<script id='${id}' suppressHydrationWarning>window[\"__TSR_DEHYDRATED__${escapeJSON(\n          strKey,\n        )}\"] = ${JSON.stringify(data)}\n        ;(() => {\n          var el = document.getElementById('${id}')\n          el.parentElement.removeChild(el)\n        })()\n        </script>`\n      })\n\n      return () => this.hydrateData<T>(key)\n    }\n\n    return () => undefined\n  }\n\n  hydrateData = <T = unknown>(key: any) => {\n    if (typeof document !== 'undefined') {\n      const strKey = typeof key === 'string' ? key : JSON.stringify(key)\n\n      return window[`__TSR_DEHYDRATED__${strKey}` as any] as T\n    }\n\n    return undefined\n  }\n\n  // resolveMatchPromise = (matchId: string, key: string, value: any) => {\n  //   this.state.matches\n  //     .find((d) => d.id === matchId)\n  //     ?.__promisesByKey[key]?.resolve(value)\n  // }\n\n  #buildRouteTree = (routeTree: TRouteTree) => {\n    this.routeTree = routeTree as any\n    this.routesById = {} as any\n    this.routesByPath = {} as any\n    this.flatRoutes = [] as any\n\n    const recurseRoutes = (routes: AnyRoute[]) => {\n      routes.forEach((route, i) => {\n        route.init({ originalIndex: i, router: this })\n\n        const existingRoute = (this.routesById as any)[route.id]\n\n        invariant(\n          !existingRoute,\n          `Duplicate routes found with id: ${String(route.id)}`,\n        )\n        ;(this.routesById as any)[route.id] = route\n\n        if (!route.isRoot && route.path) {\n          const trimmedFullPath = trimPathRight(route.fullPath)\n          if (\n            !this.routesByPath[trimmedFullPath] ||\n            route.fullPath.endsWith('/')\n          ) {\n            ;(this.routesByPath as any)[trimmedFullPath] = route\n          }\n        }\n\n        const children = route.children as Route[]\n\n        if (children?.length) {\n          recurseRoutes(children)\n        }\n      })\n    }\n\n    recurseRoutes([routeTree])\n\n    this.flatRoutes = (Object.values(this.routesByPath) as AnyRoute[])\n      .map((d, i) => {\n        const trimmed = trimPath(d.fullPath)\n        const parsed = parsePathname(trimmed)\n\n        while (parsed.length > 1 && parsed[0]?.value === '/') {\n          parsed.shift()\n        }\n\n        const score = parsed.map((d) => {\n          if (d.type === 'param') {\n            return 0.5\n          }\n\n          if (d.type === 'wildcard') {\n            return 0.25\n          }\n\n          return 1\n        })\n\n        return { child: d, trimmed, parsed, index: i, score }\n      })\n      .sort((a, b) => {\n        let isIndex = a.trimmed === '/' ? 1 : b.trimmed === '/' ? -1 : 0\n\n        if (isIndex !== 0) return isIndex\n\n        const length = Math.min(a.score.length, b.score.length)\n\n        // Sort by length of score\n        if (a.score.length !== b.score.length) {\n          return b.score.length - a.score.length\n        }\n\n        // Sort by min available score\n        for (let i = 0; i < length; i++) {\n          if (a.score[i] !== b.score[i]) {\n            return b.score[i]! - a.score[i]!\n          }\n        }\n\n        // Sort by min available parsed value\n        for (let i = 0; i < length; i++) {\n          if (a.parsed[i]!.value !== b.parsed[i]!.value) {\n            return a.parsed[i]!.value! > b.parsed[i]!.value! ? 1 : -1\n          }\n        }\n\n        // Sort by length of trimmed full path\n        if (a.trimmed !== b.trimmed) {\n          return a.trimmed > b.trimmed ? 1 : -1\n        }\n\n        // Sort by original index\n        return a.index - b.index\n      })\n      .map((d, i) => {\n        d.child.rank = i\n        return d.child\n      }) as any\n  }\n\n  #parseLocation = (previousLocation?: ParsedLocation): ParsedLocation => {\n    let { pathname, search, hash, state } = this.history.location\n\n    const parsedSearch = this.options.parseSearch(search)\n\n    return {\n      pathname: pathname,\n      searchStr: search,\n      search: replaceEqualDeep(previousLocation?.search, parsedSearch),\n      hash: hash.split('#').reverse()[0] ?? '',\n      href: `${pathname}${search}${hash}`,\n      state: state as LocationState,\n      key: state?.key || '__init__',\n    }\n  }\n\n  #buildLocation = (dest: BuildNextOptions = {}): ParsedLocation => {\n    dest.fromCurrent = dest.fromCurrent ?? dest.to === ''\n\n    const fromPathname = dest.fromCurrent\n      ? this.state.location.pathname\n      : dest.from ?? this.state.location.pathname\n\n    let pathname = resolvePath(\n      this.basepath ?? '/',\n      fromPathname,\n      `${dest.to ?? ''}`,\n    )\n\n    const fromMatches = this.matchRoutes(\n      this.state.location.pathname,\n      this.state.location.search,\n    )\n\n    const prevParams = { ...last(fromMatches)?.params }\n\n    let nextParams =\n      (dest.params ?? true) === true\n        ? prevParams\n        : functionalUpdate(dest.params!, prevParams)\n\n    if (nextParams) {\n      dest.__matches\n        ?.map((d) => this.getRoute(d.routeId).options.stringifyParams)\n        .filter(Boolean)\n        .forEach((fn) => {\n          nextParams = { ...nextParams!, ...fn!(nextParams!) }\n        })\n    }\n\n    pathname = interpolatePath(pathname, nextParams ?? {})\n\n    const preSearchFilters =\n      dest.__matches\n        ?.map(\n          (match) =>\n            this.getRoute(match.routeId).options.preSearchFilters ?? [],\n        )\n        .flat()\n        .filter(Boolean) ?? []\n\n    const postSearchFilters =\n      dest.__matches\n        ?.map(\n          (match) =>\n            this.getRoute(match.routeId).options.postSearchFilters ?? [],\n        )\n        .flat()\n        .filter(Boolean) ?? []\n\n    // Pre filters first\n    const preFilteredSearch = preSearchFilters?.length\n      ? preSearchFilters?.reduce(\n          (prev, next) => next(prev),\n          this.state.location.search,\n        )\n      : this.state.location.search\n\n    // Then the link/navigate function\n    const destSearch =\n      dest.search === true\n        ? preFilteredSearch // Preserve resolvedFrom true\n        : dest.search\n        ? functionalUpdate(dest.search, preFilteredSearch) ?? {} // Updater\n        : preSearchFilters?.length\n        ? preFilteredSearch // Preserve resolvedFrom filters\n        : {}\n\n    // Then post filters\n    const postFilteredSearch = postSearchFilters?.length\n      ? postSearchFilters.reduce((prev, next) => next(prev), destSearch)\n      : destSearch\n\n    const search = replaceEqualDeep(\n      this.state.location.search,\n      postFilteredSearch,\n    )\n\n    const searchStr = this.options.stringifySearch(search)\n\n    const hash =\n      dest.hash === true\n        ? this.state.location.hash\n        : functionalUpdate(dest.hash!, this.state.location.hash)\n\n    const hashStr = hash ? `#${hash}` : ''\n\n    const nextState =\n      dest.state === true\n        ? this.state.location.state\n        : functionalUpdate(dest.state, this.state.location.state)!\n\n    return {\n      pathname,\n      search,\n      searchStr,\n      state: nextState,\n      hash,\n      href: this.history.createHref(`${pathname}${searchStr}${hashStr}`),\n      key: dest.key,\n    }\n  }\n\n  #commitLocation = async (\n    location: BuildNextOptions & { replace?: boolean },\n  ) => {\n    const next = this.buildNext(location)\n    const id = '' + Date.now() + Math.random()\n\n    if (this.navigateTimeout) clearTimeout(this.navigateTimeout)\n\n    let nextAction: 'push' | 'replace' = 'replace'\n\n    if (!location.replace) {\n      nextAction = 'push'\n    }\n\n    const isSameUrl = this.state.location.href === next.href\n\n    if (isSameUrl && !next.key) {\n      nextAction = 'replace'\n    }\n\n    const href = `${next.pathname}${next.searchStr}${\n      next.hash ? `#${next.hash}` : ''\n    }`\n\n    this.history[nextAction === 'push' ? 'push' : 'replace'](href, {\n      id,\n      ...next.state,\n    })\n\n    return this.#createNavigationPromise()\n  }\n\n  #createNavigationPromise = () => {\n    const previousNavigationResolve = this.resolveNavigation\n\n    this.navigationPromise = new Promise((resolve) => {\n      this.resolveNavigation = () => {\n        resolve()\n        previousNavigationResolve()\n      }\n    })\n\n    return this.navigationPromise\n  }\n\n  getRouteMatch = (\n    id: string,\n  ): undefined | RouteMatch<TRoutesInfo, AnyRoute> => {\n    return (\n      this.state.matches.find((d) => d.id === id) ||\n      this.state.preloadMatches[id]\n    )\n  }\n\n  #setResolvedRouteMatch = (\n    id: string,\n    updater: (\n      prev: RouteMatch<TRoutesInfo, AnyRoute>,\n    ) => RouteMatch<TRoutesInfo, AnyRoute>,\n  ) => {\n    this.__store.setState((prev) => ({\n      ...prev,\n      matches: prev.matches.map((d) => {\n        if (d.id === id) {\n          return updater(d as any)\n        }\n        return d\n      }),\n    }))\n  }\n\n  #setPendingRouteMatch = (\n    id: string,\n    updater: (\n      prev: RouteMatch<TRoutesInfo, AnyRoute>,\n    ) => RouteMatch<TRoutesInfo, AnyRoute>,\n  ) => {\n    this.__store.setState((prev) => ({\n      ...prev,\n      pendingMatches: prev.pendingMatches.map((d) => {\n        if (d.id === id) {\n          return updater(d as any)\n        }\n        return d\n      }),\n    }))\n  }\n\n  #setPreloadRouteMatch = (\n    id: string,\n    updater: (\n      prev: RouteMatch<TRoutesInfo, AnyRoute>,\n    ) => RouteMatch<TRoutesInfo, AnyRoute>,\n  ) => {\n    invariant(this.state.preloadMatches[id], 'Match not found')\n\n    this.__store.setState((prev) => ({\n      ...prev,\n      preloadMatches: {\n        ...prev.preloadMatches,\n        [id]: updater(prev.preloadMatches[id] as any),\n      },\n    }))\n  }\n\n  setRouteMatch = (\n    id: string,\n    updater: (\n      prev: RouteMatch<TRoutesInfo, AnyRoute>,\n    ) => RouteMatch<TRoutesInfo, AnyRoute>,\n  ) => {\n    if (this.state.matches.find((d) => d.id === id)) {\n      return this.#setResolvedRouteMatch(id, updater)\n    }\n\n    if (this.state.pendingMatches.find((d) => d.id === id)) {\n      return this.#setPendingRouteMatch(id, updater)\n    }\n\n    if (this.state.preloadMatches[id]) {\n      return this.#setPreloadRouteMatch(id, updater)\n    }\n  }\n}\n\n// Detect if we're in the DOM\nconst isServer = typeof window === 'undefined' || !window.document.createElement\n\nfunction getInitialRouterState(): RouterState<any, any> {\n  return {\n    status: 'idle',\n    resolvedLocation: null!,\n    location: null!,\n    matches: [],\n    pendingMatches: [],\n    preloadMatches: {},\n    lastUpdated: Date.now(),\n  }\n}\n\nfunction isCtrlEvent(e: MouseEvent) {\n  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\n}\n\nexport type AnyRedirect = Redirect<any, any, any>\n\nexport type Redirect<\n  TRoutesInfo extends AnyRoutesInfo = RegisteredRoutesInfo,\n  TFrom extends TRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n> = NavigateOptions<TRoutesInfo, TFrom, TTo> & {\n  code?: number\n}\n\nexport function redirect<\n  TRoutesInfo extends AnyRoutesInfo = RegisteredRoutesInfo,\n  TFrom extends TRoutesInfo['routePaths'] = '/',\n  TTo extends string = '',\n>(opts: Redirect<TRoutesInfo, TFrom, TTo>): Redirect<TRoutesInfo, TFrom, TTo> {\n  ;(opts as any).isRedirect = true\n  return opts\n}\n\nexport function isRedirect(obj: any): obj is AnyRedirect {\n  return !!obj?.isRedirect\n}\n\nexport class SearchParamError extends Error {}\nexport class PathParamError extends Error {}\n\nfunction escapeJSON(jsonString: string) {\n  return jsonString\n    .replace(/\\\\/g, '\\\\\\\\') // Escape backslashes\n    .replace(/'/g, \"\\\\'\") // Escape single quotes\n    .replace(/\"/g, '\\\\\"') // Escape double quotes\n}\n"],"names":["componentTypes","Router","startedLoadingAt","Date","now","resolveNavigation","constructor","options","defaultPreloadDelay","context","undefined","stringifySearch","defaultStringifySearch","parseSearch","defaultParseSearch","__store","Store","getInitialRouterState","onUpdate","state","defaultPriority","update","next","buildNext","hash","fromCurrent","search","location","href","replace","reset","setState","s","Object","assign","mount","matches","length","safeLoad","opts","history","isServer","createMemoryHistory","createBrowserHistory","parsedLocation","resolvedLocation","listen","basepath","routeTree","trimPath","__matches","matchRoutes","pathname","cancelMatches","forEach","match","cancelMatch","id","getRouteMatch","abortController","abort","load","catch","err","startedAt","pendingMatches","batch","status","loadMatches","navigationPromise","prevLocation","onRouteChange","getRoute","route","routesById","invariant","preloadRoute","navigateOpts","throwOnError","matchesById","m","find","d","preloadMatches","preload","locationSearch","routeParams","foundRoute","flatRoutes","matchedParams","matchPathname","to","fullPath","caseSensitive","routeCursor","matchedRoutes","parentRoute","unshift","allParams","map","parsedParams","parsedParamsError","parseParams","PathParamError","message","cause","interpolatedPath","interpolatePath","path","matchId","getKey","params","existingMatch","hasLoaders","loader","some","routeMatch","routeId","joinPaths","updatedAt","routeSearch","error","paramsError","searchError","loadPromise","Promise","resolve","routeContext","AbortController","fetchedAt","i","parentMatch","searchInfo","parentSearchInfo","validator","validateSearch","parse","replaceEqualDeep","SearchParamError","contextInfo","getContext","parentContext","onError","resolvedMatches","firstBadMatchIndex","all","index","handleError","handler","isRedirect","errorHandlerErr","setRouteMatch","onParseParamsError","onValidateSearchError","beforeLoad","router","onBeforeLoadError","navigate","validResolvedMatches","slice","matchPromises","push","then","parentMatchPromise","checkLatest","latest","latestPromise","componentsPromise","type","component","loaderPromise","_","errorHandler","onLoadError","caughtError","reload","resolvePath","from","cleanPath","toString","String","fromString","isExternal","URL","e","matchRoute","pending","baseLocation","includeSearch","partialDeepEqual","buildLink","target","activeOptions","preloadDelay","userPreloadDelay","disabled","nextOpts","defaultPreload","currentPathSplit","split","nextPathSplit","pathIsFuzzyEqual","every","pathTest","exact","hashTest","includeHash","searchTest","isActive","handleClick","isCtrlEvent","defaultPrevented","button","preventDefault","handleFocus","console","warn","handleTouchStart","handleEnter","preloadTimeout","setTimeout","handleLeave","clearTimeout","dehydrate","pick","hydrate","__do_not_use_server_ctx","_ctx","document","window","__TSR_DEHYDRATED__","ctx","dehydratedData","payload","injectedHtml","injectHtml","html","dehydrateData","key","getData","strKey","JSON","stringify","data","escapeJSON","hydrateData","routesByPath","recurseRoutes","routes","init","originalIndex","existingRoute","isRoot","trimmedFullPath","trimPathRight","endsWith","children","values","trimmed","parsed","parsePathname","value","shift","score","child","sort","a","b","isIndex","Math","min","rank","previousLocation","parsedSearch","searchStr","reverse","dest","fromPathname","fromMatches","prevParams","last","nextParams","functionalUpdate","stringifyParams","filter","Boolean","fn","preSearchFilters","flat","postSearchFilters","preFilteredSearch","reduce","prev","destSearch","postFilteredSearch","hashStr","nextState","createHref","random","navigateTimeout","nextAction","isSameUrl","previousNavigationResolve","updater","createElement","lastUpdated","metaKey","altKey","ctrlKey","shiftKey","redirect","obj","Error","jsonString"],"mappings":"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"}